<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cc</title>
  
  <subtitle>我的嵌入式之路</subtitle>
  <link href="https://jgxnb.cn/atom.xml" rel="self"/>
  
  <link href="https://jgxnb.cn/"/>
  <updated>2023-04-01T13:35:11.980Z</updated>
  <id>https://jgxnb.cn/</id>
  
  <author>
    <name>Cc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于LinuxC++车载显示器开发（2）</title>
    <link href="https://jgxnb.cn/2023/03/30/%E5%9F%BA%E4%BA%8ELinuxC++%E8%BD%A6%E8%BD%BD%E6%98%BE%E7%A4%BA%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%882%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/03/30/%E5%9F%BA%E4%BA%8ELinuxC++%E8%BD%A6%E8%BD%BD%E6%98%BE%E7%A4%BA%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%882%EF%BC%89/</id>
    <published>2023-03-30T12:21:51.000Z</published>
    <updated>2023-04-01T13:35:11.980Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#dd0000">这是接下来的制作，在这个车载显示屏中，加上UDP、TCP、蓝牙界面相关的代码以及跳转。接下来，会讲述，开发过程中的问题以及自己添加的修改，部分（源代码基于正点原子，接来下，就不在重复说明！！！）</font><br /></p><h1 id="添加TCP"><a href="#添加TCP" class="headerlink" title="添加TCP"></a>添加TCP</h1><p>TCP相关的知识，这里不再介绍，需要的自行去百度查阅相关资料，写这个系列饿初衷，不是用来教学，使用展示，后续需要则会进行专门的讲解，这边只会添加自己制作上遇到的问题点。</p><p>制作过程中，发现开发板与TCP\UDP测试软件无法正常收发，经过分析是由于TCP代码中写死IP地址，造成无法做服务端监听测试软件的地址或者做客户端连接测试软件的IP地址。分析出原因，但是Qt控件还未使用明白，不懂如何往控件里面手动添加进入需要的IP地址，这类问题就先放下，后续有时间再来修改完整。</p><p>相关代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;video.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFileInfoList&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDir&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QCoreApplication&gt;</span></span></span><br><span class="line">Video::Video(QWidget *parent)</span><br><span class="line">    : QMainWindow(parent)</span><br><span class="line">   <span class="comment">// ui(new ui::Video)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//this-&gt;setGeometry(0, 0, 1030, 600);</span></span><br><span class="line">       <span class="keyword">this</span>-&gt;resize(<span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">       <span class="keyword">this</span>-&gt;setMinimumSize(<span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">       <span class="keyword">this</span>-&gt;setAttribute(Qt::WA_TranslucentBackground, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置主窗体的位置与大小 */</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;setGeometry(<span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 实例化tcp服务器与tcp套接字 */</span></span><br><span class="line">        tcpServer = <span class="keyword">new</span> QTcpServer(<span class="keyword">this</span>);</span><br><span class="line">        tcpSocket = <span class="keyword">new</span> QTcpSocket(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 开始监听按钮 */</span></span><br><span class="line">        pushButton[<span class="number">0</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">        <span class="comment">/* 停止监听按钮 */</span></span><br><span class="line">        pushButton[<span class="number">1</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">        <span class="comment">/* 清空聊天文本按钮 */</span></span><br><span class="line">        pushButton[<span class="number">2</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">        <span class="comment">/* 发送消息按钮 */</span></span><br><span class="line">        pushButton[<span class="number">3</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">        <span class="comment">/* back 消息按钮 */</span></span><br><span class="line">        pushButton[<span class="number">4</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 水平布局一 */</span></span><br><span class="line">        hBoxLayout[<span class="number">0</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">        <span class="comment">/* 水平布局二 */</span></span><br><span class="line">        hBoxLayout[<span class="number">1</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">        <span class="comment">/* 水平布局三 */</span></span><br><span class="line">        hBoxLayout[<span class="number">2</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">        <span class="comment">/* 水平布局四 */</span></span><br><span class="line">        hBoxLayout[<span class="number">3</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 水平容器一 */</span></span><br><span class="line">        hWidget[<span class="number">0</span>] =  <span class="keyword">new</span> QWidget();</span><br><span class="line">        <span class="comment">/* 水平容器二 */</span></span><br><span class="line">        hWidget[<span class="number">1</span>] =  <span class="keyword">new</span> QWidget();</span><br><span class="line">        <span class="comment">/* 水平容器三 */</span></span><br><span class="line">        hWidget[<span class="number">2</span>] =  <span class="keyword">new</span> QWidget();</span><br><span class="line"></span><br><span class="line">        vWidget = <span class="keyword">new</span> QWidget();</span><br><span class="line">        vBoxLayout = <span class="keyword">new</span> QVBoxLayout();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 标签实例化  color:red*/</span></span><br><span class="line">        label[<span class="number">0</span>] = <span class="keyword">new</span> QLabel();</span><br><span class="line">        label[<span class="number">1</span>] = <span class="keyword">new</span> QLabel();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        lineEdit = <span class="keyword">new</span> QLineEdit();</span><br><span class="line">        comboBox = <span class="keyword">new</span> QComboBox();</span><br><span class="line">        spinBox = <span class="keyword">new</span> QSpinBox();</span><br><span class="line">        textBrowser = <span class="keyword">new</span> QTextBrowser();</span><br><span class="line"></span><br><span class="line">        label[<span class="number">0</span>]-&gt;setText(<span class="string">&quot;监听IP地址：&quot;</span>);</span><br><span class="line">        label[<span class="number">1</span>]-&gt;setText(<span class="string">&quot;监听端口：&quot;</span>);</span><br><span class="line">        label[<span class="number">0</span>]-&gt;setStyleSheet(<span class="string">&quot;color:red;&quot;</span>);</span><br><span class="line">        label[<span class="number">1</span>]-&gt;setStyleSheet(<span class="string">&quot;color:red;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置标签根据文本文字大小自适应大小  */</span></span><br><span class="line">        label[<span class="number">0</span>]-&gt;setSizePolicy(QSizePolicy::Fixed,</span><br><span class="line">                                QSizePolicy::Fixed);</span><br><span class="line">        label[<span class="number">1</span>]-&gt;setSizePolicy(QSizePolicy::Fixed,</span><br><span class="line">                                QSizePolicy::Fixed);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置端口号的范围，注意不要与主机的已使用的端口号冲突 */</span></span><br><span class="line">        spinBox-&gt;setRange(<span class="number">10000</span>, <span class="number">99999</span>);</span><br><span class="line"></span><br><span class="line">        pushButton[<span class="number">0</span>]-&gt;setText(<span class="string">&quot;开始监听&quot;</span>);</span><br><span class="line">        pushButton[<span class="number">1</span>]-&gt;setText(<span class="string">&quot;停止监听&quot;</span>);</span><br><span class="line">        pushButton[<span class="number">2</span>]-&gt;setText(<span class="string">&quot;清空文本&quot;</span>);</span><br><span class="line">        pushButton[<span class="number">3</span>]-&gt;setText(<span class="string">&quot;发送消息&quot;</span>);</span><br><span class="line">        pushButton[<span class="number">4</span>]-&gt;setText(<span class="string">&quot;back&quot;</span>);</span><br><span class="line">        <span class="comment">/* 设置停止监听状态不可用 */</span></span><br><span class="line">        pushButton[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置输入框默认的文本 */</span></span><br><span class="line">        lineEdit-&gt;setText(<span class="string">&quot;www.openedv.com正点原子论坛&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 水平布局一添加内容 */</span></span><br><span class="line">        hBoxLayout[<span class="number">0</span>]-&gt;addWidget(pushButton[<span class="number">0</span>]);</span><br><span class="line">        hBoxLayout[<span class="number">0</span>]-&gt;addWidget(pushButton[<span class="number">1</span>]);</span><br><span class="line">        hBoxLayout[<span class="number">0</span>]-&gt;addWidget(pushButton[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置水平容器一的布局为水平布局一 */</span></span><br><span class="line">        hWidget[<span class="number">0</span>]-&gt;setLayout(hBoxLayout[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 水平布局二添加内容 */</span></span><br><span class="line">        hBoxLayout[<span class="number">1</span>]-&gt;addWidget(label[<span class="number">0</span>]);</span><br><span class="line">        hBoxLayout[<span class="number">1</span>]-&gt;addWidget(comboBox);</span><br><span class="line">        hBoxLayout[<span class="number">1</span>]-&gt;addWidget(label[<span class="number">1</span>]);</span><br><span class="line">        hBoxLayout[<span class="number">1</span>]-&gt;addWidget(spinBox);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置水平容器二的布局为水平布局二 */</span></span><br><span class="line">        hWidget[<span class="number">1</span>]-&gt;setLayout(hBoxLayout[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 水平布局三添加内容 */</span></span><br><span class="line">        hBoxLayout[<span class="number">2</span>]-&gt;addWidget(lineEdit);</span><br><span class="line">        hBoxLayout[<span class="number">2</span>]-&gt;addWidget(pushButton[<span class="number">3</span>]);</span><br><span class="line">        hBoxLayout[<span class="number">2</span>]-&gt;addWidget(pushButton[<span class="number">4</span>]);</span><br><span class="line">        <span class="comment">/* 设置水平容器三的布局为水平布局一 */</span></span><br><span class="line">        hWidget[<span class="number">2</span>]-&gt;setLayout(hBoxLayout[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 垂直布局添加内容 */</span></span><br><span class="line">        vBoxLayout-&gt;addWidget(textBrowser);</span><br><span class="line">        vBoxLayout-&gt;addWidget(hWidget[<span class="number">1</span>]);</span><br><span class="line">        vBoxLayout-&gt;addWidget(hWidget[<span class="number">0</span>]);</span><br><span class="line">        vBoxLayout-&gt;addWidget(hWidget[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置垂直容器的布局为垂直布局 */</span></span><br><span class="line">        vWidget-&gt;setLayout(vBoxLayout);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 居中显示 */</span></span><br><span class="line">        setCentralWidget(vWidget);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 获取本地ip */</span></span><br><span class="line">        getLocalHostIP();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 信号槽连接 */</span></span><br><span class="line">        connect(pushButton[<span class="number">0</span>], SIGNAL(clicked()),</span><br><span class="line">                <span class="keyword">this</span>, SLOT(startListen()));</span><br><span class="line">        connect(pushButton[<span class="number">1</span>], SIGNAL(clicked()),</span><br><span class="line">                <span class="keyword">this</span>, SLOT(stopListen()));</span><br><span class="line">        connect(pushButton[<span class="number">2</span>], SIGNAL(clicked()),</span><br><span class="line">                <span class="keyword">this</span>, SLOT(clearTextBrowser()));</span><br><span class="line">        connect(pushButton[<span class="number">3</span>], SIGNAL(clicked()),</span><br><span class="line">                <span class="keyword">this</span>, SLOT(sendMessages()));</span><br><span class="line">        connect(pushButton[<span class="number">4</span>], SIGNAL(clicked()),</span><br><span class="line">                <span class="keyword">this</span>, SLOT(back()));</span><br><span class="line">        connect(tcpServer, SIGNAL(newConnection()),</span><br><span class="line">                <span class="keyword">this</span>, SLOT(clientConnected()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Video::~Video()</span><br><span class="line">&#123;</span><br><span class="line">    stopListen();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Video::add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//qDebug() &lt;&lt; &quot;a + b=&quot; &lt;&lt; a+b;</span></span><br><span class="line">    <span class="comment">//this-&gt;resize(800, 480);</span></span><br><span class="line">    <span class="comment">//this-&gt;setMinimumSize(800, 480);</span></span><br><span class="line">    <span class="comment">// this-&gt;setAttribute(Qt::WA_TranslucentBackground, true);</span></span><br><span class="line">    <span class="comment">//this-&gt;setStyleSheet(&quot;QWidget &#123; background-color: rgba(255, 245, 238, 100%); &#125;&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 新的客户端连接 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::clientConnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 获取客户端的套接字 */</span></span><br><span class="line">    tcpSocket = tcpServer-&gt;nextPendingConnection();</span><br><span class="line">    <span class="comment">/* 客户端的ip信息 */</span></span><br><span class="line">    QString ip = tcpSocket-&gt;peerAddress().toString();</span><br><span class="line">    <span class="comment">/* 客户端的端口信息 */</span></span><br><span class="line">    quint16 port = tcpSocket-&gt;peerPort();</span><br><span class="line">    <span class="comment">/* 在文本浏览框里显示出客户端的连接信息 */</span></span><br><span class="line">    textBrowser-&gt;append(<span class="string">&quot;客户端已连接&quot;</span>);</span><br><span class="line">    textBrowser-&gt;append(<span class="string">&quot;客户端ip地址:&quot;</span></span><br><span class="line">                        + ip);</span><br><span class="line">    textBrowser-&gt;append(<span class="string">&quot;客户端端口:&quot;</span></span><br><span class="line">                        + QString::number(port));</span><br><span class="line"></span><br><span class="line">    connect(tcpSocket, SIGNAL(readyRead()),</span><br><span class="line">            <span class="keyword">this</span>, SLOT(receiveMessages()));</span><br><span class="line">    connect(tcpSocket,</span><br><span class="line">            SIGNAL(stateChanged(QAbstractSocket::SocketState)),</span><br><span class="line">            <span class="keyword">this</span>,</span><br><span class="line">            SLOT(socketStateChange(QAbstractSocket::SocketState)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 获取本地IP */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::getLocalHostIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// /* 获取主机的名称 */</span></span><br><span class="line">    <span class="comment">// QString hostName = QHostInfo::localHostName();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /* 主机的信息 */</span></span><br><span class="line">    <span class="comment">// QHostInfo hostInfo = QHostInfo::fromName(hostName);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /* ip列表,addresses返回ip地址列表，注意主机应能从路由器获取到</span></span><br><span class="line">    <span class="comment">// * IP，否则可能返回空的列表（ubuntu用此方法只能获取到环回IP） */</span></span><br><span class="line">    <span class="comment">// IPlist = hostInfo.addresses();</span></span><br><span class="line">    <span class="comment">// qDebug()&lt;&lt;IPlist&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /* 遍历IPlist */</span></span><br><span class="line">    <span class="comment">// foreach (QHostAddress ip, IPlist) &#123;</span></span><br><span class="line">    <span class="comment">//      if (ip.protocol() == QAbstractSocket::IPv4Protocol)</span></span><br><span class="line">    <span class="comment">//          comboBox-&gt;addItem(ip.toString());</span></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 获取所有的网络接口，</span></span><br><span class="line"><span class="comment">     * QNetworkInterface类提供主机的IP地址和网络接口的列表 */</span></span><br><span class="line">    QList&lt;QNetworkInterface&gt; <span class="built_in">list</span></span><br><span class="line">            = QNetworkInterface::allInterfaces();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 遍历list */</span></span><br><span class="line">    foreach (QNetworkInterface interface, <span class="built_in">list</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* QNetworkAddressEntry类存储IP地址子网掩码和广播地址 */</span></span><br><span class="line">        QList&lt;QNetworkAddressEntry&gt; entryList</span><br><span class="line">                = interface.addressEntries();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 遍历entryList */</span></span><br><span class="line">        foreach (QNetworkAddressEntry entry, entryList) &#123;</span><br><span class="line">            <span class="comment">/* 过滤IPv6地址，只留下IPv4 */</span></span><br><span class="line">            <span class="keyword">if</span> (entry.ip().protocol() ==</span><br><span class="line">                    QAbstractSocket::IPv4Protocol) &#123;</span><br><span class="line">                comboBox-&gt;addItem(entry.ip().toString());</span><br><span class="line">                comboBox-&gt;addItem(<span class="string">&quot;192.168.101.95&quot;</span>);</span><br><span class="line">                <span class="comment">/* 添加到IP列表中 */</span></span><br><span class="line">                IPlist&lt;&lt;entry.ip();</span><br><span class="line">               <span class="comment">// IPlist.append(&quot;192.168.101.95&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 开始监听 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::startListen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 需要判断当前主机是否有IP项 */</span></span><br><span class="line">    <span class="keyword">if</span> (comboBox-&gt;currentIndex() != <span class="number">-1</span>) &#123;</span><br><span class="line">        qDebug()&lt;&lt;<span class="string">&quot;start listen&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        tcpServer-&gt;listen(IPlist[comboBox-&gt;currentIndex()],</span><br><span class="line">                spinBox-&gt;value());</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置按钮与下拉列表框的状态 */</span></span><br><span class="line">        pushButton[<span class="number">0</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">        pushButton[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">        comboBox-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">        spinBox-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 在文本浏览框里显示出服务端 */</span></span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;服务器IP地址：&quot;</span></span><br><span class="line">                            + comboBox-&gt;currentText());</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;正在监听端口：&quot;</span></span><br><span class="line">                            + spinBox-&gt;text());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 停止监听 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::stopListen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qDebug()&lt;&lt;<span class="string">&quot;stop listen&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">/* 停止监听 */</span></span><br><span class="line">    tcpServer-&gt;close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 如果是连接上了也应该断开，如果不断开客户端还能继续发送信息，</span></span><br><span class="line"><span class="comment">     * 因为socket未断开，还在监听上一次端口 */</span></span><br><span class="line">    <span class="keyword">if</span> (tcpSocket-&gt;state() == tcpSocket-&gt;ConnectedState)</span><br><span class="line">        tcpSocket-&gt;disconnectFromHost();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置按钮与下拉列表框的状态  */</span></span><br><span class="line">    pushButton[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    pushButton[<span class="number">0</span>]-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    comboBox-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    spinBox-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 将停止监听的信息添加到文本浏览框中 */</span></span><br><span class="line">    textBrowser-&gt;append(<span class="string">&quot;已停止监听端口：&quot;</span></span><br><span class="line">                        + spinBox-&gt;text());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 清除文本浏览框里的内容 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::clearTextBrowser</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 清除文本浏览器的内容 */</span></span><br><span class="line">    textBrowser-&gt;clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 服务端接收消息 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::receiveMessages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 读取接收到的消息 */</span></span><br><span class="line">    QString messages = <span class="string">&quot;客户端：&quot;</span> + tcpSocket-&gt;readAll();</span><br><span class="line">    textBrowser-&gt;append(messages);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 服务端发送消息 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::sendMessages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span> == tcpSocket)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 如果已经连接 */</span></span><br><span class="line">    <span class="keyword">if</span>(tcpSocket-&gt;state() == tcpSocket-&gt;ConnectedState) &#123;</span><br><span class="line">        <span class="comment">/* 发送消息 */</span></span><br><span class="line">        tcpSocket-&gt;write(lineEdit-&gt;text().toUtf8().data());</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 在服务端插入发送的消息 */</span></span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;服务端：&quot;</span> + lineEdit-&gt;text());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 服务端状态改变 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::socketStateChange</span><span class="params">(QAbstractSocket::SocketState state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (state) &#123;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::UnconnectedState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：UnconnectedState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ConnectedState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ConnectedState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ConnectingState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ConnectingState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::HostLookupState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：HostLookupState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ClosingState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ClosingState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ListeningState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ListeningState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::BoundState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：BoundState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 服务端发送消息 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::back</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;close();</span><br><span class="line">    stopListen();</span><br><span class="line">    AppMainView *appMainView = <span class="keyword">new</span> AppMainView;</span><br><span class="line">    appMainView-&gt;show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图如下：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/TCP_1786x800.jpg" alt="TCP_1786x800"></p><p>这里添加了一个返回的按键操作。</p><h1 id="添加UDP"><a href="#添加UDP" class="headerlink" title="添加UDP"></a>添加UDP</h1><p>这里需要区分单播、广播、组播的问题，单播比较可以理解，对于的IP地址和端口就可收发。</p><p>在调试过程中，组播存在问题，组播需要加入，组播组，这边用TCP\UDP软件做讲解，可以在同一个局域网下，进行组播发送，但是由于开发板连接另一个路由器，造成不是同一个局域网类，造成239.0.0.0～239.255.255.255 这里不可以共用，只能做到单播。</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/UDP1_1786x800.jpg" alt="UDP1_1786x800"></p><p>UDP中只要加入组就可以通信，没有区分客户端、服务端，当加入目标组后，既可以进行通信。</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/UDP%E7%BB%84%E6%92%AD.jpg" alt="UDP组播"></p><p>广播：即为把IP地址转变为255.255.255.255，同一个网段下，只要有端口监听发出者的端口，即可接收到信息，这样也验证通过了。</p><p>UDP的问题也全部得到解决，相关的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;udp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFileInfoList&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDir&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QCoreApplication&gt;</span></span></span><br><span class="line">Udp::Udp(QWidget *parent)</span><br><span class="line">    : QMainWindow(parent)</span><br><span class="line">&#123;</span><br><span class="line">       <span class="keyword">this</span>-&gt;resize(<span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">       <span class="keyword">this</span>-&gt;setMinimumSize(<span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">       <span class="keyword">this</span>-&gt;setAttribute(Qt::WA_TranslucentBackground, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置主窗体的位置与大小 */</span></span><br><span class="line">       <span class="keyword">this</span>-&gt;setGeometry(<span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* udp套接字 */</span></span><br><span class="line">       udpSocket = <span class="keyword">new</span> QUdpSocket(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 绑定端口按钮 */</span></span><br><span class="line">       pushButton[<span class="number">0</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">       <span class="comment">/* 解绑端口按钮 */</span></span><br><span class="line">       pushButton[<span class="number">1</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">       <span class="comment">/* 清空聊天文本按钮 */</span></span><br><span class="line">       pushButton[<span class="number">2</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">       <span class="comment">/* 发送消息按钮 */</span></span><br><span class="line">       pushButton[<span class="number">3</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">       <span class="comment">/* 广播消息按钮 */</span></span><br><span class="line">       pushButton[<span class="number">4</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">       <span class="comment">/* back按钮 */</span></span><br><span class="line">       pushButton[<span class="number">5</span>] = <span class="keyword">new</span> QPushButton();</span><br><span class="line">       <span class="comment">/* 水平布局一 */</span></span><br><span class="line">       hBoxLayout[<span class="number">0</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">       <span class="comment">/* 水平布局二 */</span></span><br><span class="line">       hBoxLayout[<span class="number">1</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">       <span class="comment">/* 水平布局三 */</span></span><br><span class="line">       hBoxLayout[<span class="number">2</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line">       <span class="comment">/* 水平布局四 */</span></span><br><span class="line">       hBoxLayout[<span class="number">3</span>] = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 水平容器一 */</span></span><br><span class="line">       hWidget[<span class="number">0</span>] =  <span class="keyword">new</span> QWidget();</span><br><span class="line">       <span class="comment">/* 水平容器二 */</span></span><br><span class="line">       hWidget[<span class="number">1</span>] =  <span class="keyword">new</span> QWidget();</span><br><span class="line">       <span class="comment">/* 水平容器三 */</span></span><br><span class="line">       hWidget[<span class="number">2</span>] =  <span class="keyword">new</span> QWidget();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       vWidget = <span class="keyword">new</span> QWidget();</span><br><span class="line">       vBoxLayout = <span class="keyword">new</span> QVBoxLayout();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 标签实例化 */</span></span><br><span class="line">       label[<span class="number">0</span>] = <span class="keyword">new</span> QLabel();</span><br><span class="line">       label[<span class="number">1</span>] = <span class="keyword">new</span> QLabel();</span><br><span class="line">       label[<span class="number">2</span>] = <span class="keyword">new</span> QLabel();</span><br><span class="line"></span><br><span class="line">       lineEdit = <span class="keyword">new</span> QLineEdit();</span><br><span class="line">       comboBox = <span class="keyword">new</span> QComboBox();</span><br><span class="line">       spinBox[<span class="number">0</span>] = <span class="keyword">new</span> QSpinBox();</span><br><span class="line">       spinBox[<span class="number">1</span>] = <span class="keyword">new</span> QSpinBox();</span><br><span class="line">       textBrowser = <span class="keyword">new</span> QTextBrowser();</span><br><span class="line"></span><br><span class="line">       label[<span class="number">0</span>]-&gt;setText(<span class="string">&quot;目标IP地址：&quot;</span>);</span><br><span class="line">       label[<span class="number">1</span>]-&gt;setText(<span class="string">&quot;绑定端口：&quot;</span>);</span><br><span class="line">       label[<span class="number">2</span>]-&gt;setText(<span class="string">&quot;目标端口：&quot;</span>);</span><br><span class="line"></span><br><span class="line">       label[<span class="number">0</span>]-&gt;setStyleSheet(<span class="string">&quot;color:red;&quot;</span>);</span><br><span class="line">       label[<span class="number">1</span>]-&gt;setStyleSheet(<span class="string">&quot;color:red;&quot;</span>);</span><br><span class="line">       label[<span class="number">2</span>]-&gt;setStyleSheet(<span class="string">&quot;color:red;&quot;</span>);</span><br><span class="line">       <span class="comment">/* 设置标签根据文本文字大小自适应大小  */</span></span><br><span class="line">       label[<span class="number">0</span>]-&gt;setSizePolicy(QSizePolicy::Fixed,</span><br><span class="line">                               QSizePolicy::Fixed);</span><br><span class="line">       label[<span class="number">1</span>]-&gt;setSizePolicy(QSizePolicy::Fixed,</span><br><span class="line">                               QSizePolicy::Fixed);</span><br><span class="line">       label[<span class="number">2</span>]-&gt;setSizePolicy(QSizePolicy::Fixed,</span><br><span class="line">                               QSizePolicy::Fixed);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 设置端口号的范围，注意不要与主机的已使用的端口号冲突 */</span></span><br><span class="line">       spinBox[<span class="number">0</span>]-&gt;setRange(<span class="number">10000</span>, <span class="number">99999</span>);</span><br><span class="line">       spinBox[<span class="number">1</span>]-&gt;setRange(<span class="number">10000</span>, <span class="number">99999</span>);</span><br><span class="line"></span><br><span class="line">       pushButton[<span class="number">0</span>]-&gt;setText(<span class="string">&quot;绑定端口&quot;</span>);</span><br><span class="line">       pushButton[<span class="number">1</span>]-&gt;setText(<span class="string">&quot;解除绑定&quot;</span>);</span><br><span class="line">       pushButton[<span class="number">2</span>]-&gt;setText(<span class="string">&quot;清空文本&quot;</span>);</span><br><span class="line">       pushButton[<span class="number">3</span>]-&gt;setText(<span class="string">&quot;发送消息&quot;</span>);</span><br><span class="line">       pushButton[<span class="number">4</span>]-&gt;setText(<span class="string">&quot;广播消息&quot;</span>);</span><br><span class="line">       pushButton[<span class="number">5</span>]-&gt;setText(<span class="string">&quot;back&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 设置停止监听状态不可用 */</span></span><br><span class="line">       pushButton[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 设置输入框默认的文本 */</span></span><br><span class="line">       lineEdit-&gt;setText(<span class="string">&quot;你好！&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 水平布局一添加内容 */</span></span><br><span class="line">       hBoxLayout[<span class="number">0</span>]-&gt;addWidget(pushButton[<span class="number">0</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">0</span>]-&gt;addWidget(pushButton[<span class="number">1</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">0</span>]-&gt;addWidget(pushButton[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 设置水平容器的布局为水平布局一 */</span></span><br><span class="line">       hWidget[<span class="number">0</span>]-&gt;setLayout(hBoxLayout[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">       hBoxLayout[<span class="number">1</span>]-&gt;addWidget(label[<span class="number">0</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">1</span>]-&gt;addWidget(comboBox);</span><br><span class="line">       hBoxLayout[<span class="number">1</span>]-&gt;addWidget(label[<span class="number">1</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">1</span>]-&gt;addWidget(spinBox[<span class="number">0</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">1</span>]-&gt;addWidget(label[<span class="number">2</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">1</span>]-&gt;addWidget(spinBox[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 设置水平容器的布局为水平布局二 */</span></span><br><span class="line">       hWidget[<span class="number">1</span>]-&gt;setLayout(hBoxLayout[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 水平布局三添加内容 */</span></span><br><span class="line">       hBoxLayout[<span class="number">2</span>]-&gt;addWidget(lineEdit);</span><br><span class="line">       hBoxLayout[<span class="number">2</span>]-&gt;addWidget(pushButton[<span class="number">3</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">2</span>]-&gt;addWidget(pushButton[<span class="number">4</span>]);</span><br><span class="line">       hBoxLayout[<span class="number">2</span>]-&gt;addWidget(pushButton[<span class="number">5</span>]);</span><br><span class="line">       <span class="comment">/* 设置水平容器三的布局为水平布局一 */</span></span><br><span class="line">       hWidget[<span class="number">2</span>]-&gt;setLayout(hBoxLayout[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 垂直布局添加内容 */</span></span><br><span class="line">       vBoxLayout-&gt;addWidget(textBrowser);</span><br><span class="line">       vBoxLayout-&gt;addWidget(hWidget[<span class="number">1</span>]);</span><br><span class="line">       vBoxLayout-&gt;addWidget(hWidget[<span class="number">0</span>]);</span><br><span class="line">       vBoxLayout-&gt;addWidget(hWidget[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 设置垂直容器的布局为垂直布局 */</span></span><br><span class="line">       vWidget-&gt;setLayout(vBoxLayout);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 居中显示 */</span></span><br><span class="line">       setCentralWidget(vWidget);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 获取本地ip */</span></span><br><span class="line">       getLocalHostIP();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 信号槽连接 */</span></span><br><span class="line">       connect(pushButton[<span class="number">0</span>], SIGNAL(clicked()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(bindPort()));</span><br><span class="line">       connect(pushButton[<span class="number">1</span>], SIGNAL(clicked()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(unbindPort()));</span><br><span class="line">       connect(pushButton[<span class="number">2</span>], SIGNAL(clicked()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(clearTextBrowser()));</span><br><span class="line">       connect(pushButton[<span class="number">3</span>], SIGNAL(clicked()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(sendMessages()));</span><br><span class="line">       connect(pushButton[<span class="number">4</span>], SIGNAL(clicked()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(sendBroadcastMessages()));</span><br><span class="line">       connect(pushButton[<span class="number">5</span>], SIGNAL(clicked()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(back()));</span><br><span class="line">       connect(udpSocket, SIGNAL(readyRead()),</span><br><span class="line">               <span class="keyword">this</span>, SLOT(receiveMessages()));</span><br><span class="line">       connect(udpSocket,</span><br><span class="line">               SIGNAL(stateChanged(QAbstractSocket::SocketState)),</span><br><span class="line">               <span class="keyword">this</span>,</span><br><span class="line">               SLOT(socketStateChange(QAbstractSocket::SocketState)));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Udp::~Udp()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::bindPort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    quint16 port = spinBox[<span class="number">0</span>]-&gt;value();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 绑定端口需要在socket的状态为UnconnectedState */</span></span><br><span class="line">    <span class="keyword">if</span> (udpSocket-&gt;state() != QAbstractSocket::UnconnectedState)</span><br><span class="line">        udpSocket-&gt;close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (udpSocket-&gt;bind(port)) &#123;</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;已经成功绑定端口：&quot;</span></span><br><span class="line">                            + QString::number(port));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 设置界面中的元素的可用状态 */</span></span><br><span class="line">        pushButton[<span class="number">0</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">        pushButton[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">        spinBox[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::unbindPort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 解绑，不再监听 */</span></span><br><span class="line">    udpSocket-&gt;<span class="built_in">abort</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置界面中的元素的可用状态 */</span></span><br><span class="line">    pushButton[<span class="number">0</span>]-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    pushButton[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    spinBox[<span class="number">1</span>]-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 获取本地IP */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::getLocalHostIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// /* 获取主机的名称 */</span></span><br><span class="line">    <span class="comment">// QString hostName = QHostInfo::localHostName();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /* 主机的信息 */</span></span><br><span class="line">    <span class="comment">// QHostInfo hostInfo = QHostInfo::fromName(hostName);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /* ip列表,addresses返回ip地址列表，注意主机应能从路由器获取到</span></span><br><span class="line">    <span class="comment">// * IP，否则可能返回空的列表（ubuntu用此方法只能获取到环回IP） */</span></span><br><span class="line">    <span class="comment">// IPlist = hostInfo.addresses();</span></span><br><span class="line">    <span class="comment">// qDebug()&lt;&lt;IPlist&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// /* 遍历IPlist */</span></span><br><span class="line">    <span class="comment">// foreach (QHostAddress ip, IPlist) &#123;</span></span><br><span class="line">    <span class="comment">//      if (ip.protocol() == QAbstractSocket::IPv4Protocol)</span></span><br><span class="line">    <span class="comment">//          comboBox-&gt;addItem(ip.toString());</span></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 获取所有的网络接口，</span></span><br><span class="line"><span class="comment">     * QNetworkInterface类提供主机的IP地址和网络接口的列表 */</span></span><br><span class="line">    QList&lt;QNetworkInterface&gt; <span class="built_in">list</span></span><br><span class="line">            = QNetworkInterface::allInterfaces();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 遍历list */</span></span><br><span class="line">    foreach (QNetworkInterface interface, <span class="built_in">list</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* QNetworkAddressEntry类存储IP地址子网掩码和广播地址 */</span></span><br><span class="line">        QList&lt;QNetworkAddressEntry&gt; entryList</span><br><span class="line">                = interface.addressEntries();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 遍历entryList */</span></span><br><span class="line">        foreach (QNetworkAddressEntry entry, entryList) &#123;</span><br><span class="line">            <span class="comment">/* 过滤IPv6地址，只留下IPv4 */</span></span><br><span class="line">            <span class="keyword">if</span> (entry.ip().protocol() ==</span><br><span class="line">                    QAbstractSocket::IPv4Protocol) &#123;</span><br><span class="line">                comboBox-&gt;addItem(entry.ip().toString());</span><br><span class="line">                <span class="comment">/* 添加到IP列表中 */</span></span><br><span class="line">                IPlist&lt;&lt;entry.ip();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 清除文本浏览框里的内容 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::clearTextBrowser</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 清除文本浏览器的内容 */</span></span><br><span class="line">    textBrowser-&gt;clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 客户端接收消息 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::receiveMessages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 局部变量，用于获取发送者的IP和端口 */</span></span><br><span class="line">    QHostAddress peerAddr;</span><br><span class="line">    quint16 peerPort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 如果有数据已经准备好 */</span></span><br><span class="line">    <span class="keyword">while</span> (udpSocket-&gt;hasPendingDatagrams()) &#123;</span><br><span class="line">        <span class="comment">/* udpSocket发送的数据报是QByteArray类型的字节数组 */</span></span><br><span class="line">        QByteArray datagram;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 重新定义数组的大小 */</span></span><br><span class="line">        datagram.resize(udpSocket-&gt;pendingDatagramSize());</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 读取数据，并获取发送方的IP地址和端口 */</span></span><br><span class="line">        udpSocket-&gt;readDatagram(datagram.data(),</span><br><span class="line">                                datagram.size(),</span><br><span class="line">                                &amp;peerAddr,</span><br><span class="line">                                &amp;peerPort);</span><br><span class="line">        <span class="comment">/* 转为字符串 */</span></span><br><span class="line">        QString str = datagram.data();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 显示信息到文本浏览框窗口 */</span></span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;接收来自&quot;</span></span><br><span class="line">                            + peerAddr.toString()</span><br><span class="line">                            + <span class="string">&quot;:&quot;</span></span><br><span class="line">                            + QString::number(peerPort)</span><br><span class="line">                            + str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 客户端发送消息 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::sendMessages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 文本浏览框显示发送的信息 */</span></span><br><span class="line">    textBrowser-&gt;append(<span class="string">&quot;发送：&quot;</span> + lineEdit-&gt;text());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 要发送的信息，转为QByteArray类型字节数组，数据一般少于512个字节 */</span></span><br><span class="line">    QByteArray data = lineEdit-&gt;text().toUtf8();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 要发送的目标Ip地址 */</span></span><br><span class="line">    QHostAddress peerAddr = IPlist[comboBox-&gt;currentIndex()];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 要发送的目标端口号 */</span></span><br><span class="line">    quint16 peerPort = spinBox[<span class="number">1</span>]-&gt;value();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 发送消息 */</span></span><br><span class="line">    udpSocket-&gt;writeDatagram(data, peerAddr, peerPort);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::sendBroadcastMessages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 文本浏览框显示发送的信息 */</span></span><br><span class="line">    textBrowser-&gt;append(<span class="string">&quot;发送：&quot;</span> + lineEdit-&gt;text());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 要发送的信息，转为QByteArray类型字节数组，数据一般少于512个字节 */</span></span><br><span class="line">    QByteArray data = lineEdit-&gt;text().toUtf8();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 广播地址，一般为255.255.255.255，</span></span><br><span class="line"><span class="comment">     * 同一网段内监听目标端口的程序都会接收到消息 */</span></span><br><span class="line">    QHostAddress peerAddr = QHostAddress::Broadcast;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 要发送的目标端口号 */</span></span><br><span class="line">    quint16 peerPort = spinBox[<span class="number">1</span>]-&gt;text().toInt();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 发送消息 */</span></span><br><span class="line">    udpSocket-&gt;writeDatagram(data, peerAddr, peerPort);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* socket状态改变 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::socketStateChange</span><span class="params">(QAbstractSocket::SocketState state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (state) &#123;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::UnconnectedState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：UnconnectedState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ConnectedState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ConnectedState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ConnectingState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ConnectingState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::HostLookupState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：HostLookupState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ClosingState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ClosingState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ListeningState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：ListeningState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::BoundState:</span><br><span class="line">        textBrowser-&gt;append(<span class="string">&quot;scoket状态：BoundState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Udp::back</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;close();</span><br><span class="line">   <span class="comment">// AppDemo *appDemo = new AppDemo();</span></span><br><span class="line">    <span class="comment">//appDemo-&gt;show();</span></span><br><span class="line">    AppMainView *appMainView = <span class="keyword">new</span> AppMainView;</span><br><span class="line">    appMainView-&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里也是修改了返回按钮。</p><h1 id="添加蓝牙"><a href="#添加蓝牙" class="headerlink" title="添加蓝牙"></a>添加蓝牙</h1><p>蓝牙这里用到Linux开源的蓝牙的协议栈BlueZ，本人还没分析源码，只是移植了一下代码，修改了一点东西，这类后续进行补充。这类代码分类比较多，就不贴代码上来。有需要分析，可以去分析正点原子的代码。</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E8%93%9D%E7%89%99_1786x800.jpg" alt="蓝牙_1786x800"></p><h1 id="收获总结"><a href="#收获总结" class="headerlink" title="收获总结"></a>收获总结</h1><p>这次的添加，主要学会了TCP、UDP之前一直不明白这个是什么，然后接触了linux 网络编程部分明白了TCP\IP是个什么意思，同时也进入Llinx应用开发阶段的巩固，理解掌握原子操作这个概念。</p><p>下周QT将继续开发，应用编程进行跟进了解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;font color=&quot;#dd0000&quot;&gt;这是接下来的制作，在这个车载显示屏中，加上UDP、TCP、蓝牙界面相关的代码以及跳转。接下来，会讲述，开发过程中的问题以及自己添加的修改，部分（源代码基于正点原子，接来下，就不在重复说明！！！）&lt;/font&gt;&lt;br /&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言——题目（2）</title>
    <link href="https://jgxnb.cn/2023/03/29/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%A2%98%E7%9B%AE%EF%BC%882%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/03/29/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%A2%98%E7%9B%AE%EF%BC%882%EF%BC%89/</id>
    <published>2023-03-29T01:46:54.000Z</published>
    <updated>2023-03-29T07:02:45.588Z</updated>
    
    <content type="html"><![CDATA[<p>话不多说开始，看题目。</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><strong>memcpy和strcpy的区别</strong></p><ol><li><p>复制的内容不同。strcpy只能复制字符串，而memcpy可以复制任意内容，例如字符数组、整型、结构体、类等。</p></li><li><p>复制的方法不同。strcpy不需要指定长度，它遇到被复制字符的串结束符”\0”才结束，所以容易溢出。memcpy则是根据其第3个参数决定复制的长度。</p></li><li><p>用途不同。通常在复制字符串时用strcpy，而需要复制其他类型数据时则一般用memcpy。</p></li></ol><p>函数原形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> * dest, <span class="keyword">const</span> <span class="keyword">char</span> * src)</span> <span class="comment">// 实现src到dest的复制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　<span class="keyword">if</span> ((src == <span class="literal">NULL</span>) || (dest == <span class="literal">NULL</span>)) <span class="comment">//判断参数src和dest的有效性</span></span><br><span class="line">　　&#123;</span><br><span class="line">　　    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">　　&#125;</span><br><span class="line">　　<span class="keyword">char</span> *strdest = dest;        <span class="comment">//保存目标字符串的首地址</span></span><br><span class="line">　　<span class="keyword">while</span> ((*strDest++ = *strSrc++)!=<span class="string">&#x27;\0&#x27;</span>); <span class="comment">//把src字符串的内容复制到dest下</span></span><br><span class="line">　　<span class="keyword">return</span> strdest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcpy</span><span class="params">(<span class="keyword">void</span> *memTo, <span class="keyword">const</span> <span class="keyword">void</span> *memFrom, <span class="keyword">size_t</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　<span class="keyword">if</span>((memTo == <span class="literal">NULL</span>) || (memFrom == <span class="literal">NULL</span>))     <span class="comment">//memTo和memFrom必须有效</span></span><br><span class="line">         <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">　　<span class="keyword">char</span> *tempFrom = (<span class="keyword">char</span> *)memFrom;             <span class="comment">//保存memFrom首地址</span></span><br><span class="line">　　<span class="keyword">char</span> *tempTo = (<span class="keyword">char</span> *)memTo;                  <span class="comment">//保存memTo首地址      </span></span><br><span class="line">　　<span class="keyword">while</span>(size -- &gt; <span class="number">0</span>)                <span class="comment">//循环size次，复制memFrom的值到memTo中</span></span><br><span class="line">       　　*tempTo++ = *tempFrom++ ;  </span><br><span class="line">　　<span class="keyword">return</span> memTo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><font color="#dd4">楼主在写的时候，发现自己没有完全记住这些用法，在编写上还是比较少用这些基础的函数，导致只有迷糊的印象，在工作中有遇到几次，但是没有记熟练。</font><br /></p><p><strong>信号量与互斥锁的区别</strong></p><p><strong>信号量</strong>：那是<a href="https://so.csdn.net/so/search?q=%E5%A4%9A%E7%BA%BF%E7%A8%8B&spm=1001.2101.3001.7020">多线程</a>同步用的，一个线程完成了某一个动作就通过信号告诉别的线程，别的线程再进行某些动作。</p><p><strong>互斥量</strong>：这是多线程互斥用的，比如说，一个线程占用了某一个资源，那么别的线程就无法访问，知道这个线程离开，其他的线程才开始可以利用这个资源。</p><p>1)：互斥量用于线程的互斥，信号线用于线程的同步。这是互斥量和信号量的根本区别，也就是互斥和同步之间的区别。</p><p>(2)：互斥量值只能为0/1，信号量值可以为非负整数。</p><p><font color="#dd4">楼主在写的时候，隐隐约约记得这些含义，但是表述比较模糊不清。</font><br /></p><p><strong>简述程序编译的过程</strong></p><p>预处理阶段。预处理器（cpp）根据以字符#开头的命令，修改原始的C程序。比如hello.c中第一行的#include&lt;stdio.h&gt;命令告诉预处理器读取系统头文件stdio.h的内容，并把它直接插入程序文本中，结果就得到了另一个C程序，通常是以.i作为文件扩展名。</p><p>编译阶段。编译器（ccl）将文本文件hello.i翻译成文本文件hello.s，它包含一个汇编语言程序。汇编语言程序中的每条语句都以一种标准的文本格式确切的描述了一条低级机器语言指令。</p><p>汇编阶段。汇编器（as）将hello.s翻译成机器语言指令，把这些指令打包成一种可重定位目标程序的格式，并将结果保存在目标文件hello.o中。hello.o文件是一个二进制文件，它的字节编码是机器语言指令而不是字符，如果我们在文本文件中打开hello.o文件，看到的将是一堆乱码。</p><p>链接阶段。链接器（ld）负责处理合并目标代码，生成一个可执行目标文件，可以被加载到内存中，由系统执行<br>楼主在解答的时候，写是的吧初始化那些变量个压入bss段、文本段、数据段这些里，总体来说，方向出了一些错误，只讲述了其中编译的阶段。</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B.png" alt="程序编译流程"></p><p><strong>语句for（；1；）有什么问题？它是什么意思？</strong><br>类似while(1),死循环的意思</p><p>它们的汇编指令都是一样的，所以效率也是一样的</p><p>单片机的编程中经常用到while（1）死循环来进行轮寻操作，但分析Linux内核源代码时却经常见到for（；；）作为死循环的条件。</p><p>两者区别：</p><p>for（；；）死循环里的两个；；代表两个空语句，编译器一般会优化掉它们，直接进入循环体。</p><p>while（1）死循环里的1被看成表达式，每循环一次都要判断常量1是不是等于零。</p><p><strong>do……while和while……do有什么区别？</strong></p><p>前一个循环一遍再判断，后一个判断以后再循环。</p><h1 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h1><p><strong>MMU的作用（A、B）</strong></p><p>A:内存保护</p><p>B:地址转换</p><p>C:加快存取速度</p><p>D:安全保密</p><p>E:内存分配</p><p><font color="#dd4">楼主有看过MMU但是记错了，选择了B与E。</font><br /></p><ul><li>程序中使用的地址均是虚拟内存地址，进程中的数据是如何进入到物理内存中的呢？</li><li>MMU完成<a href="https://www.zhihu.com/search?q=%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2372450817%7D">虚拟内存</a>到物理内存的映射，即虚拟地址映射为物理地址；</li><li>流水线中预取指令取到的地址是虚拟地址，需要MMU转换以及设置访问权限。</li></ul><p><strong>以下属于DMA特点的有（B、C）</strong></p><p>A:占用CPU</p><p>B:占用总线</p><p>C:不占用CPU</p><p>D:不占用总线</p><p><font color="#dd4">楼主在解答时，总线的概念有些忘记：</font><br /></p><p>总线是一种内部结构，它是cpu、内存、输入、输出设备传递信息的公用通道，主机的各个部件通过总线相连接，外部设备通过相应的接口电路再与总线相连接，从而形成了计算机硬件系统。在计算机系统中，各个部件之间传送信息的公共通路叫总线，微型计算机是以总线结构来连接各个功能部件的。</p><p>在Linux内核中，总线属于核心层，是纯软件的东西。在Linux内核中总线左手牵着驱动右手牵着设备，总线的工作就是就是完成总线下的设备和驱动之间的匹配。也就是在左手中找到与右手相匹配的设备驱动，并完成他们之间的匹配。</p><h1 id="描述题"><a href="#描述题" class="headerlink" title="描述题"></a>描述题</h1><p><strong>全局变量、局部变量、静态全局变量、静态局部变量的区别和引用方式?</strong></p><p>初始化的全局变量在.data段,可以外部文本加extern引用;<br>未初始化的全局变量在.bss段,可以外部文本加extern引用;<br>静态全局变量区别是不能在外部文件引用；<br>局部变量在运行时，栈区分配空间；<br>静态局部变量在静态区分配空间，函数调用后内存不释放；</p><p><strong>内存的分配方式有哪三种，请简单介绍一下。</strong></p><p>内存分配有三种：静态存储区、堆区和栈区。他们的功能不同，他们使用方式也就不同。</p><ol><li>静态存储区：内存在程序编译的时候就已经分配好，这块内存在程序的整个运行期间都存在。它主要存放静态数据、全局数据和常量。</li><li>栈区：在执行函数时，函数（包括main函数）内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限。（任何变量都处于站区，例如int a[] = {1, 2},变量a处于栈区。数组的内容也存在于栈区。）</li><li>堆区：亦称动态内存分配。程序在运行的时候用malloc或new申请任意大小的内存，程序员自己负责在适当的时候用free或delete释放内存。动态内存的生存期可以由我们决定，如果我们不释放内存，程序将在最后才释放掉动态内存。 但是，良好的编程习惯是：如果某动态内存不再使用，需要将其释放掉，并立即将指针置位NULL，防止产生野指针。</li></ol><p>野指针是如何产生的？如何避免野指针？</p><p>指向非法的内存地址指针叫作野指针（Wild Pointer），也叫悬挂指针（Dangling Pointer），意为无法正常使用的指针。</p><p>产生：使用未初始化的指针、指针所指向的对象已经消亡、指针释放后未置空</p><p>避免：（1）C++引入了引用机制，如果使用引用可以达到编程目的，就可以不必使用指针。因为引用在定义的时候，必须初始化，所以可以避免野指针的出现。</p><p>​            （2）如果一定要使用指针，那么需要在定义指针变量的同时对它进行初始化操作。定义时将其置位NULL或者指向一个有名变量。</p><p>​            （3）对指针进行free或者delete操作后，将其设置为NULL。对于使用 free 的情况，常常定义一个宏或者函数 xfree 来代替 free 置空指针</p><p>#define xfree(x) free(x);x = NULL;</p><p><strong>C++中指针和引用的区别</strong></p><p>指针是一个变量，存储的是一个地址，指向内存的一个存储单元；</p><p>引用是原变量的一个别名，跟原来的变量实质上是同一个东西。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">996</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;a; <span class="comment">// p是指针, &amp;在此是求地址运算</span></span><br><span class="line"><span class="keyword">int</span> &amp;r = a; <span class="comment">// r是引用, &amp;在此起标识作用</span></span><br></pre></td></tr></table></figure><ol><li><p>引用必须被初始化，但是不分配存储空间。指针不声明时初始化，在初始化的时候需要分配存储空间。</p></li><li><p>引用初始化后不能被改变，指针可以改变所指的对象。</p></li><li><p>不存在指向空值的引用，但是存在指向空值的指针。</p><p><a href="https://zhuanlan.zhihu.com/p/140966943">C++中指针与引用的区别 - 知乎 (zhihu.com)</a></p><p><font color="#dd4">楼主答题时，完全不知道这个概念，后续会继续加强C++相关的知识储备。</font><br /></p></li></ol><h1 id="查错题"><a href="#查错题" class="headerlink" title="查错题"></a>查错题</h1><p><strong>下面程序会出现什么结果</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getmemory</span><span class="params">(<span class="keyword">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">100</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(p,<span class="string">&quot;hello worl&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *str = <span class="literal">NULL</span>;</span><br><span class="line">getmemory(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s \r\n&quot;</span>,str);</span><br><span class="line"><span class="built_in">free</span>(str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序执行完，是会打印出空值，因为函数中的局部变量已经被释放了，</p><p>getmemory（）运行完，已经被哦释放了。</p><p>正确修改：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getmemory</span><span class="params">(<span class="keyword">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">100</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(p,<span class="string">&quot;hello worl&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s \r\n&quot;</span>,p);</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *str = <span class="literal">NULL</span>;</span><br><span class="line">getmemory(str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>下面这个程序执行后会有什么错误或者结果</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 255</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> A[MAX],i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;= MAX;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        A[i] = i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A[%d] = %d\r\n&quot;</span>,i,i);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一直在循环中，原因是因为unsigned char 范围是0<del>2^8-1 (0</del>255)，当溢出后，会进行（因为0xff + 1是256，与2^8求模后就是0）求模赋值，又会重0开始运行，因此无法超过最大值。</p><p><font color="#dd4">楼主答题时，没有考虑到这一点，很纠结，突然不知道哪里出现了问题。</font><br /></p><p><strong>请问一下程序将输出什么结果</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">RetMenory</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> p[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *str =<span class="literal">NULL</span>;</span><br><span class="line">str = RetMenory();</span><br><span class="line"><span class="built_in">printf</span>(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也是局部变量的问题，函数RetMenory（）返回的char * 的数据以及呗释放掉了，返回的指针类型。</p><p>修改如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">RetMenory</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span><span class="keyword">char</span> p[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *str =<span class="literal">NULL</span>;</span><br><span class="line">str = RetMenory();</span><br><span class="line"><span class="built_in">printf</span>(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改为静态局部变量，则不会随函数的结束而释放。</p><p><strong>已知strcpy的函数原形</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> * strDest, <span class="keyword">const</span> <span class="keyword">char</span> * strSrc)</span> <span class="comment">// 实现strSrc到strDest的复制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　<span class="keyword">if</span> ((src == <span class="literal">NULL</span>) || (dest == <span class="literal">NULL</span>)) <span class="comment">//判断参数src和dest的有效性</span></span><br><span class="line">　　&#123;</span><br><span class="line">　　    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">　　&#125;</span><br><span class="line">　　<span class="keyword">char</span> *strdest = dest;        <span class="comment">//保存目标字符串的首地址</span></span><br><span class="line">　　<span class="keyword">while</span> ((*strDest++ = *strSrc++)!=<span class="string">&#x27;\0&#x27;</span>); <span class="comment">//把src字符串的内容复制到dest下</span></span><br><span class="line">　　<span class="keyword">return</span> strdest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不调用库函数，实现strcpy函数并解释为什么要返回char *</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> *strDest,<span class="keyword">const</span> <span class="keyword">char</span> *strSrc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strDest == <span class="literal">NULL</span> || strSrc == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> *p = strDest;</span><br><span class="line">    <span class="keyword">while</span>(*strSrc != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        *p++ = *strSrc++;</span><br><span class="line">    &#125;</span><br><span class="line">    *p = *strSrc;       <span class="comment">//&#x27;\0&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> strDest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么需要返回char *</p><p>有时候函数原本不需要返回值，但为了<strong>增加灵活性</strong>如<strong>支持链式表达</strong>，可以附加返回值。<br>如<code>int length = strlen( strcpy(str, “Hello World”) );</code></p><p>其实,说白了,就是如果上面的字符串拷贝函数strcopy的返回值是void,那么,上面那句:</p><p> int length = strlen( strcpy( strDest, “hello world”) );</p><p> 就要像上面那位的回答,写成好几句了:</p><p>char strDest[12];</p><p> strcpy( strDest, “hello world”);</p><p>int length = strlen(strDest);</p><p>而这种直接返回char *的手段,就是为了后来函数调用者方便而设计的.不用你这么麻烦用上述方法去使用了,而直接可以使用拷贝后的dest字符串了.这种方便的实现方法,看起来就是链子链在一起的,所以称为 链式表达式</p><p>链表实现：<br>后续补充</p><h1 id="感悟总结"><a href="#感悟总结" class="headerlink" title="感悟总结"></a>感悟总结</h1><p>这套题目，结合了嵌入式的开发，主要涉及了C\C++、Linux相关的方面的问题，在答题饿过程中，也总结了自己的不足之处，例如对一C++的概念不够了解、Linux一些相关属性，明白什么意思，但是语言组织不起来、C中存在饿一些细节把握不够到位，整体上还需要平时的注重。后续将会持续进一步学习，开发。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;话不多说开始，看题目。&lt;/p&gt;
&lt;h1 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;memcpy和strcpy的区别&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言——题目（1）</title>
    <link href="https://jgxnb.cn/2023/03/28/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/03/28/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/</id>
    <published>2023-03-28T03:18:49.000Z</published>
    <updated>2023-03-29T06:44:00.778Z</updated>
    
    <content type="html"><![CDATA[<p>话不多说开始，看题目。</p><h1 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h1><p><em><strong>*使用双向链表存储数据，其优点是可以。*</strong></em></p><p>A.很方便的插入和删除数据</p><p>B.节约存储空间</p><p>C.很快回收储存空间</p><p>D.提高检索速度</p><p><font color="#dd0000">解析：正确答案（D）</font><br /></p><p>A:因为单链表在插入和删除后继节点和双链表是一样的，只有在插入删除前驱的时候才更简单</p><p>B.多分配一个指针，空间使用了更多</p><p>C.回收都是一样的</p><p>D.单链表只能从前往后，而双链表支持从前向后、从后向前，会有更快的检索速度。</p><p>本人答题的时候，挺简单的</p><p><em><strong>*关于“字符串”的描述 ，错误的是（）。*</strong></em></p><p>A.字符串的长度必须大于零</p><p>B.字符串可以连续存储，也可以链式存储</p><p>C.字符串是一种特殊的线性表</p><p>D.”空串”与“空白串”不是同一个含义</p><p><font color="#dd0000">解析：正确答案（A）</font><br /></p><p>A:字符串的长度可以是0；</p><p>D:空串是零个字符的串，它的长度为零。而空白串是指由一个或多个空格组成的串，它的长度为串中空格字符的个数。<br> string str1 = “”；    //空字符串 ，str1.length() 等于 0，分配了一个内存空间<br> string str2 = null； //NULL，未分配内存<br> string str3 = “ “；   //空格串 ， str2.length() 等于 1，分配了内存<br>B:定长顺序存储、动态数组存储、块链存储</p><p><font color="#dd4">本人答题的时候，由于概念不清楚，只能通过字面意思来猜测概念的意思，在空串与空白串之间产生误区；连续存储、链式存储分析不清。</font><br /></p><p><em><strong>*算法分析的两个主要方面是（）。*</strong></em></p><p>B:空间复杂度和时间复杂性</p><p><font color="#dd4">这题完全就是概念题了，对于算法，博主比较薄弱，这一题凭借记忆选的。</font><br /></p><p><em><strong>*面相对象的语言具有继承性、多态性和（）*</strong></em></p><p>封装性</p><p><font color="#dd4">这题也是概念，博主本人是写C写的比较多，C++方面接触的比较少，对于这一类的问题，只能凭记忆选。</font><br /></p><p><strong>*小明、小华和小宝站成一排。小明是其中最大的，他只说真话；第二大的是小华，他只说假话；而最早的小宝有时说真话，有时说假话。小天知道这三个人，但不清楚到底哪个是哪个。他问最左边的这位“你们仨中间的是谁”？回答是“哦，那是小明”。小天随后问中间的这位，“你叫什么”？回答是“我是小宝”。最后小天问最右侧的那位“中间这位是谁”？他得到的回复是“是小华”。那么，这三位的排位顺序从左至右可能是。*</strong></p><p>A:小宝 小明 小华</p><p>B:小明 小宝 小华</p><p>C:小宝 小华 小明</p><p>D:小明 小华 小宝</p><p>E:小华 小宝 小明</p><p>解析：正确答案(C)</p><p>  首先假设最左边的是小明，由于他只能说实话，他说中间的是小明，这显然矛盾了，所以假设不成立； </p><p>​        再次假设最左边的是小华，由于他只能说假话，他说中间的是小明，所以小明只能在最右边，中间的应该是小宝。但小明说中间的是小华，这与推论结果冲突； </p><p>​      最后假设最左边的是小宝， </p><p>​              1.假设他说的是真的，中间的是小明，则最右边的是小华。而小明说中间是自己叫小宝，这也矛盾了； </p><p>​             2.假设他说的是假的，则中间应该是小华，最右边应该是小明，正好与题意相符；</p><p><em><strong>*考察了计算题——曲线的拐点问题*</strong></em></p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E9%A2%98%E7%9B%AE%E4%B8%80.png" alt="题目一"></p><p><em><strong>*若一组记录的排序码值序列为{50,80,30,40,70,60}利用快速排序方法,以第一个记录为基准,得到一趟快速排序的结果为( )*</strong></em></p><p>解题方式：<a href="https://www.bilibili.com/video/BV1yL4y1e7HE/?vd_source=24b6ce7edda541013bd168efa431fa61">【又快又准做对考研真题】一组记录的关键字为(46， 79， 56， 38， 40， 84)，则利用快速排序的方法，以第一个记录为基准得到的一次划分结果为( )。_哔哩哔哩_bilibili</a></p><p><a href="https://blog.csdn.net/weixin_69519040/article/details/127147161">https://blog.csdn.net/weixin_69519040/article/details/127147161</a></p><p>代码方面：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> <span class="comment">//交换两个数的值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = a[low];</span><br><span class="line">    a[low] = a[high];</span><br><span class="line">    a[high] = t;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span>  <span class="comment">//计算基准点，分割为左右两个数组</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> point = a[low];<span class="comment">//基准点等于第一个元素</span></span><br><span class="line"><span class="comment">/*    while(1)&#123;</span></span><br><span class="line"><span class="comment">        while(low&lt;high &amp;&amp; a[++low]&lt;point);</span></span><br><span class="line"><span class="comment">        while(a[--high]&gt;point);</span></span><br><span class="line"><span class="comment">        if(low&gt;=high) break;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">      <span class="keyword">while</span>(low&lt;high)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">while</span>(low&lt;high &amp;&amp; a[high]&gt;=point)<span class="comment">//控制high指针比较并左移</span></span><br><span class="line">          &#123;</span><br><span class="line">                 high--;</span><br><span class="line">          &#125;  </span><br><span class="line">         swap(a,low,high);</span><br><span class="line">              <span class="comment">//&#125;</span></span><br><span class="line">         <span class="keyword">while</span>(low&lt;high &amp;&amp; a[low]&lt;=point)<span class="comment">//控制low指针比较并右移</span></span><br><span class="line">          &#123;</span><br><span class="line">                low++;</span><br><span class="line">          &#125;  </span><br><span class="line">          swap(a,low,high);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> low;<span class="comment">//返回基准点位置</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span>  <span class="comment">//low:起始位置 high:末尾位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>(low&lt;high)&#123;</span><br><span class="line">        <span class="keyword">int</span> point = partition(a,low,high);<span class="comment">//计算基准点</span></span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        quicksort(a,low,point<span class="number">-1</span>);  <span class="comment">//对基准点的左边进行排序</span></span><br><span class="line"></span><br><span class="line">        quicksort(a,point+<span class="number">1</span>,high);<span class="comment">//对基准点的右边进行排序</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> a[] = &#123;<span class="number">50</span>,<span class="number">80</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">70</span>,<span class="number">60</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">6</span>;</span><br><span class="line">    </span><br><span class="line">    quicksort(a, <span class="number">0</span>, N<span class="number">-1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;N; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="#dd4">本人在写的时候时候，一点都不知道，在结束后，写博客的时候才明白怎么处理这个问题。</font><br /></p><p><em><strong>*设系统中有一类独占性共享资源数量为M，有N 个竞争该类资源的进程，各进程对资源的最大需<br>求量相同且为W。则以下M、N、W 的取值情况中，系统可能发生死锁的是（）。*</strong></em></p><p>A:M=2, N=2, W=2 </p><p>B:M=3, N=2, W=2 </p><p>C:M=3, N=2, W=3 </p><p>D:M=5, N=3, W=2 </p><p>E:M=6,N=3,W=3</p><p><font color="#dd0000">解析：正确答案（A、C、E）</font><br /></p><p>N个进程各获得(W-1)个资源，且系统中没有资源剩下时，可能发生死锁。所以满足N×(W-1)≥M的情况即有可能发生死锁。</p><p>保证系统不会发生死锁的最小M值为：M=N(W-1)+1。</p><p>本人在答题的一头雾水，完全不知道这个是什么问题。</p><h1 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h1><p>类可以转换成任意类型，且是所有类型的基类？</p><p>类型转换关键字用于将一个数据类型转换为另一个数据类型。C++ 中提供了四种类型转换关键字：<code>static_cast</code>、<code>dynamic_cast</code>、<code>const_cast</code>、<code>reinterpret_cast</code>。</p><p>在c或者c++中，可以指向任意类型的关键字就是无符号类型void<em>，任何一个对象都可以使用void</em>来指向</p><p><em><strong>*栈和队列的相同点和不同点*</strong></em></p><p>栈（Stack）和队列（Queue）是两种操作受限的线性表。<br>线性表：线性表是一种线性结构，它是一个含有n≥0个结点的有限序列，同一个线性表中的数据元素数据类型相同并且满足“一对一”的逻辑关系。<br>“一对一”的逻辑关系指的是对于其中的结点，有且仅有一个开始结点没有前驱但有一个后继结点，有且仅有一个终端结点没有后继但有一个前驱结点，其它的结点都有且仅有一个前驱和一个后继结点。）</p><p>这种受限表现在：栈的插入和删除操作只允许在表的尾端进行（在栈中成为“栈顶”），满足“FIFO：First In Last Out”；队列只允许在表尾插入数据元素，在表头删除数据元素,满足“First In First Out”。</p><p><font color="#dd0000">栈与队列的相同点：</font><br /></p><p>1.都是线性结构。</p><p>2.插入操作都是限定在表尾进行。</p><p>3.都可以通过顺序结构和链式结构实现。、</p><p>4.插入与删除的时间复杂度都是O（1），在空间复杂度上两者也一样。</p><p>5.多链栈和多链队列的管理模式可以相同。</p><p><font color="#dd0000">栈与队列的不同点：</font><br /></p><p>1.删除数据元素的位置不同，栈的删除操作在表尾进行，队列的删除操作在表头进行。</p><p>2.应用场景不同；常见栈的应用场景包括括号问题的求解，表达式的转换和求值，函数调用和递归实现，深度优先搜索遍历等；常见的队列的应用场景包括计算机系统中各种资源的管理，消息缓冲器的管理和广度优先搜索遍历等。</p><p>3.顺序栈能够实现多栈空间共享，而顺序队列不能。</p><p><em><strong>*fat32文件系统最大单一档案大小为*</strong></em></p><p><font color="#dd0000">4GB </font><br /></p><p>  NTFS（Windows）：支持最大分区2TB，最大文件2TB； </p><p>  FAT16（Windows）：支持最大分区2GB，最大文件2GB；</p><p>  FAT32（Windows）：支持最大分区128GB，最大文件4GB；</p><p>  HPFS（OS/2）：支持最大分区2TB，最大文件2GB；</p><p>  EXT2和EXT3（Linux）：支持最大分区4TB，最大文件2GB；</p><p>  JFS（AIX）：支持最大分区4P（block size=4k），最大文件4P；</p><p>  XFS（IRIX）：这是个正经的64位的文件系统，可以支持9E（2的63次方）的分区； </p><h1 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h1><p><em><strong>*求俩个数最大公约数*</strong></em></p><p>思路：<br>1.将两整数求余 a%b = c<br>2.如果c = 0;则b为最大公约数<br>3.如果c != 0,则 a = b；b = c；继续从1开始执行<br>4.也就是说该循环的是否继续的判断条件就是c是否为0</p><p>举例说明：</p><p>a = 21 b = 28</p><p>c = a%b = 21%28 = 21， 则c = 21 此时c不为0<br>执行 a = b ， b = c ， a = 28 ，b = 21</p><p>c = a%b = 28%21 = 7 ，则c = 7 此时c不为0<br>执行 a = b ， b = c ， a = 21 , b = 7</p><p>c = a%b = 21%47 = 0 ，则c = 0 循环结束</p><p>最大公约数：指某几个整数共有约数中最大的一个</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入两个数求最大公约数: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">        c = a%b;</span><br><span class="line">        <span class="keyword">while</span>(c)</span><br><span class="line">        &#123;</span><br><span class="line">            a = b;</span><br><span class="line">            b = c;</span><br><span class="line">            c = a%b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;最大公约数为： %d\n&quot;</span>,b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>*冒泡排序法*</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, temp;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                                temp = arr[j];</span><br><span class="line">                                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> arr[] = &#123; <span class="number">22</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">82</span>, <span class="number">55</span>, <span class="number">89</span>, <span class="number">50</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">64</span>, <span class="number">35</span>, <span class="number">9</span>, <span class="number">70</span> &#125;;</span><br><span class="line">        <span class="keyword">int</span> len = (<span class="keyword">int</span>) <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(*arr);</span><br><span class="line">        bubble_sort(arr, len);</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="逻辑题"><a href="#逻辑题" class="headerlink" title="逻辑题"></a>逻辑题</h1><p><em><strong>*分析芝诺悖论*</strong></em></p><p>在历史的进程中，科学家们提出了量子这一概念。而量子就是破解这个悖论的关键。我们刚才说，关键点在于时间和距离，只要时间和距离不是无限分割下去的，我们就可以终结这场赛跑。</p><p>量子理论则认为时间和长度并不可以无限拆分，普朗克时间和普朗克长度都是给出了最小的量度。普朗克时间为10^-43 秒，普朗克长度为1.6 x 10^-35 米。虽然这两个量度确实非常小，但是至少给出了一个极限。当然这是算有意义的量度，不然极限不应该被限制。</p><p>如果用微积分的角度来看，也可得出芝诺悖论的错误之处，当两者距离趋于0时，就可以将0代入求值，也就是乌龟和兔子将处于同一位置，可惜他们在此不会停止，将继续奔跑比赛，所以兔子必定超过乌龟。</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><em><strong>*芯片检测题*</strong></em></p><p>芯片测试：有2k块芯片，已知好芯片比坏芯片多．请设计算法从其中找出一片<br>好芯片，说明你所用的比较次数上限．<br>其中：好芯片和其它芯片比较时，能正确给出另一块芯片是好还是坏．</p><p>解答：</p><p>在任意偶数多的芯片里，如果好芯片多于坏芯片，将所有芯片两两分组，根据抽屉原理，<br>则有<br>1）必有两个好芯片分在一组。<br>2）同为好芯片的组数一定多于同为坏芯片的组数。</p><p>测试流程<br>1）将芯片两两分组，比如1和2，3和4。。。。2k-1和2k。互相测试，则必有结果同为真的<br>组。<br>2）保留结果同为真的组，丢弃其他组。必有好芯片组多于坏芯片组。（所以当只有两组或<br>者一组同为真时，则必为真，测试结束）<br>3）结果同为真的组芯片必定同好或者同坏，所以可以丢弃一半。从所有同真组中任意取出<br>一个丢弃另一个，组成新的测试组，继续两两分组，直到同真组只有2个或者1个测试结束<br>，坚持到最后的就是好芯片。</p><p>说明：同真组可能会变成奇数个，当为奇数组时，任意选一组取其中一个（假设为A），在<br>剩余组中各取一个来测试A，如果测试结果A为好芯片过半或者等于一半，则A为好芯片，测<br>试结束。否则A为坏芯片，判定A为好芯片的必为坏芯片，剔除后剩余部分形成新的测试组<br>，继续两两分组。。。</p><p>总的原理和淘金差不多，刚开始好的芯片多，在每次剔除芯片时一定要保证剔除的坏芯片<br>数量一定要多于或者等于好芯片的数量，这样就能保证在剩余的芯片中好的一定多于坏的<br>。当组数为奇数时采用投票制，多于半数的投票有效（等于也有效，因为好的多于坏的，<br>相等则被测试的一定为好的）。</p><p>因为每次最少剔除一半的芯片，所以最坏情况出现在每次只能剔除一半芯片的时候，按等<br>比数列递减。当有N个芯片时，测试次数为n+(n/2)+(n/4)…=2n<br>答题完毕.</p><p><em><strong>*蚂蚁过桥题*</strong></em></p><p>已知一只蚂蚁过桥的时间是1小时，现在你是蚂蚁军团的老大，如何使用蚂蚁计时1小时15分钟？</p><p>这题还未找到解法，后续补充上去。</p><p><em><strong>*项目问题*</strong></em></p><p>项目即将提测，自测过程中出现Bug，并且短时间内无法解决，这时应该怎么办？</p><p>解答：</p><p>项目提测的时候，发现Bug,此时应该及时汇报项目组长，并且把产生问题的原因、如何解决、花费多少时间等信心具体分析出来，一同上报。这类情况下，存在轻重缓急的区别，轻度则，不影响正常的提测，待提测后，进行处理；重则影响提测，需要上级安排人手，集中处理。</p><p><em><strong>*谁的成绩好*</strong></em></p><p>玲玲和芳芳经常在一起玩，有一次，有人问她们：“你们俩经常在一起玩，这次期末考试你们谁的成绩好呀？”玲玲说：“我的成绩比较好一点。”芳芳说：“我的成绩比较差一些。”<br>她们这两个人之中至少有一个人没有说实话。那么，到底她们谁的考试成绩好？</p><p>解答：</p><p>类推1.如果玲玲说谎，则芳芳成绩好，那么芳芳也说谎（两人都说谎）<br>类推2.如果玲玲没说谎，那么玲玲成绩好，那么芳芳也没有说谎（直接排除没人说谎）<br>类推3.如果芳芳说谎，那么芳芳成绩好，故玲玲也说了谎（两人都说谎）<br>综上所述只有类推1和类推三符合题意至少有一个人说谎，而且最终都指向芳芳成绩好。<br>所以最终答案玲玲芳芳都说了谎，芳芳成绩好。</p><h1 id="感悟总结"><a href="#感悟总结" class="headerlink" title="感悟总结"></a>感悟总结</h1><p>这一个卷子，在完成的时候，问题点挺多的，自己本身也没准备好，时间挺赶的，充分的证明自己的能力还有待提升，也是因为，自己在工作中，很少接触到这一类的问题，也造成笔试存在一些概念的缺少、忘记的情况。后续，会加强这一方面的训练，加强概念的分析，简单的算法编写。但是主要时间还将会花费在，学习操作平台上。</p><p>工作上目前接触这个些基础的问题很少，长时间未处理，会遗忘这些信息，但是这些又不是特别的困难，因此后续将会，花费一些时间来写题目，保持一些手感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;话不多说开始，看题目。&lt;/p&gt;
&lt;h1 id=&quot;选择题&quot;&gt;&lt;a href=&quot;#选择题&quot; class=&quot;headerlink&quot; title=&quot;选择题&quot;&gt;&lt;/a&gt;选择题&lt;/h1&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;*使用双向链表存储数据，其优点是可以。*&lt;/strong&gt;&lt;/em&gt;&lt;</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>基于LinuxC++车载显示器开发（1）</title>
    <link href="https://jgxnb.cn/2023/03/24/%E5%9F%BA%E4%BA%8ELinuxC++%E8%BD%A6%E8%BD%BD%E6%98%BE%E7%A4%BA%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%881%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/03/24/%E5%9F%BA%E4%BA%8ELinuxC++%E8%BD%A6%E8%BD%BD%E6%98%BE%E7%A4%BA%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%881%EF%BC%89/</id>
    <published>2023-03-24T12:21:51.000Z</published>
    <updated>2023-04-01T13:52:57.851Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#dd0000">这是新开的C++QT开发专栏，接下来将会花费较多的时间进行讲述基于LinuxC++车载显示器开发。</font><br /></p><h1 id="项目要求"><a href="#项目要求" class="headerlink" title="项目要求"></a>项目要求</h1><p>此作品将会基于I.MX6ULL MINI Linux开发板进行开发，主要功能将会实现：视频播放器、音频播放器、地图显示、蓝牙聊天、TCP、DUP等的部署开发。</p><h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><p>基于正点原子I.MX6ULL QT开发手册进行开发，主要软件准备：</p><ul><li>QT版本：qt-opensource-linux-x64-5.12.9</li><li>Ubuntu版本：18.4</li><li>交叉编译器：fsl-imx-x11-glibc-x86_64-meta-toolchain-qt5-cortexa7hf-neon-toolchain-4.1.15-2.1.0</li></ul><h1 id="程序部分"><a href="#程序部分" class="headerlink" title="程序部分"></a>程序部分</h1><h2 id="整体界面显示"><a href="#整体界面显示" class="headerlink" title="整体界面显示"></a>整体界面显示</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">AppMainView::<span class="built_in">AppMainView</span>(QWidget *parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setParent</span>(parent);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setGeometry</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">480</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setMinimumSize</span>(<span class="number">800</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">    bgWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    bgWidget-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;border-image: url(:/images/bg.png)&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    mySlidePage = <span class="keyword">new</span> <span class="built_in">SlidePage</span>(<span class="keyword">this</span>);</span><br><span class="line">    mySlidePage-&gt;<span class="built_in">resize</span>(<span class="keyword">this</span>-&gt;<span class="built_in">size</span>());</span><br><span class="line">    </span><br><span class="line">    appDemo[<span class="number">0</span>] = <span class="keyword">new</span> <span class="built_in">AppDemo</span>();</span><br><span class="line">    mySlidePage-&gt;<span class="built_in">addPage</span>(appDemo[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AppMainView::~<span class="built_in">AppMainView</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AppMainView::resizeEvent</span><span class="params">(QResizeEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(event)</span><br><span class="line">    mySlidePage-&gt;<span class="built_in">resize</span>(<span class="keyword">this</span>-&gt;<span class="built_in">size</span>());</span><br><span class="line">    bgWidget-&gt;<span class="built_in">resize</span>(<span class="keyword">this</span>-&gt;<span class="built_in">size</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显示的界面如下（源码例程中修改），先把滚动部分的代码去除</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E5%8E%9F%E5%A7%8B%E7%95%8C%E9%9D%A2_1786x800.jpg" alt="原始界面_1786x800"></p><p>可以滚动，但是不能切换界面，目前只有一个界面</p><h1 id="添加新文件夹"><a href="#添加新文件夹" class="headerlink" title="添加新文件夹"></a>添加新文件夹</h1><p>这里将会学习到如何在QT项目中，添加.pri文件</p><p>首先，在项目的PRO文件中加入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">QT       += core gui</span><br><span class="line"></span><br><span class="line"><span class="built_in">greaterThan</span>(QT_MAJOR_VERSION, <span class="number">4</span>): QT += widgets</span><br><span class="line"></span><br><span class="line">CONFIG += c++<span class="number">11</span></span><br><span class="line"></span><br><span class="line"># The following define makes your compiler emit warnings <span class="keyword">if</span> you use</span><br><span class="line"><span class="meta"># any Qt feature that has been marked deprecated (the exact warnings</span></span><br><span class="line"><span class="meta"># depend on your compiler). Please consult the documentation of the</span></span><br><span class="line"><span class="meta"># deprecated API in order to know how to port your code away from it.</span></span><br><span class="line">DEFINES += QT_DEPRECATED_WARNINGS</span><br><span class="line"></span><br><span class="line"># You can also make your code fail to compile <span class="keyword">if</span> it uses deprecated APIs.</span><br><span class="line"># In order to <span class="keyword">do</span> so, uncomment the following line.</span><br><span class="line"># You can also select to disable deprecated APIs only up to a certain version of Qt.</span><br><span class="line">#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=<span class="number">0x060000</span>    <span class="meta"># disables all the APIs deprecated before Qt 6.0.0</span></span><br><span class="line"></span><br><span class="line">SOURCES += \</span><br><span class="line">    main.cpp \</span><br><span class="line">    widget.cpp</span><br><span class="line"></span><br><span class="line">HEADERS += \</span><br><span class="line">    widget.h</span><br><span class="line"></span><br><span class="line"># Default rules <span class="keyword">for</span> deployment.</span><br><span class="line">qnx: target.path = /tmp/$$&#123;TARGET&#125;/bin</span><br><span class="line"><span class="keyword">else</span>: unix:!android: target.path = /opt/$$&#123;TARGET&#125;/bin</span><br><span class="line">!<span class="built_in">isEmpty</span>(target.path): INSTALLS += target</span><br><span class="line"></span><br><span class="line"><span class="built_in">include</span>(../slidepage/slidepage.pri)</span><br><span class="line"><span class="built_in">include</span>(../appdemo/appdemo.pri)</span><br><span class="line"><span class="built_in">include</span>(../video/video.pri)</span><br><span class="line">RESOURCES += \</span><br><span class="line">    resource.qrc</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>include(../video/video.pri)此为新加入的文件，先使用该文件，进行按键点击跳转的功能。添加完文件路径后，还需要在pri文件中，加入文件的信息：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SOURCES += \</span><br><span class="line">    ../video/video.cpp</span><br><span class="line"></span><br><span class="line">HEADERS += \</span><br><span class="line">    ../video/video.h</span><br><span class="line">RESOURCES += \</span><br><span class="line">    ../video/res.qrc</span><br></pre></td></tr></table></figure><p>该文件中，还添加了一个CSS样式，用来绘画窗口的。</p><h1 id="新窗口"><a href="#新窗口" class="headerlink" title="新窗口"></a>新窗口</h1><p>上述，我们引入了新的文件——Video,接下来看看，几个文件的函数部分</p><h2 id="video-cpp"><a href="#video-cpp" class="headerlink" title="video.cpp"></a>video.cpp</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;video.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line">Video::<span class="built_in">Video</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">   <span class="comment">// ui(new ui::Video)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setGeometry</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">resize</span>(<span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setMinimumSize</span>(<span class="number">1030</span>, <span class="number">600</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setAttribute</span>(Qt::WA_TranslucentBackground, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    mainWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    topWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    middleWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    bottomWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line"></span><br><span class="line">    mid_left_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    mid_right_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line"></span><br><span class="line">    mid_right_top_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    mid_right_bottom_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        mid_pushButton[i] = <span class="keyword">new</span> <span class="built_in">QPushButton</span>();</span><br><span class="line">        mid_pushButton[i]-&gt;<span class="built_in">setObjectName</span>(<span class="built_in">tr</span>(<span class="string">&quot;mid_pushButton%1&quot;</span>).<span class="built_in">arg</span>(QString::<span class="built_in">number</span>(i)));</span><br><span class="line">        mid_pushButton[i]-&gt;<span class="built_in">setFocusPolicy</span>(Qt::NoFocus);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">5</span>) &#123;</span><br><span class="line">            top_pushButton[i] = <span class="keyword">new</span> <span class="built_in">QPushButton</span>();</span><br><span class="line">            top_pushButton[i]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">120</span>, <span class="number">60</span>);</span><br><span class="line">            top_pushButton[i]-&gt;<span class="built_in">setObjectName</span>(<span class="built_in">tr</span>(<span class="string">&quot;top_pushButton%1&quot;</span>).<span class="built_in">arg</span>(QString::<span class="built_in">number</span>(i)));</span><br><span class="line">            top_pushButton[i]-&gt;<span class="built_in">setFocusPolicy</span>(Qt::NoFocus);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">        bottom_pushButton[i] = <span class="keyword">new</span> <span class="built_in">QPushButton</span>();</span><br><span class="line">        bottom_pushButton[i]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">60</span>, <span class="number">60</span>);</span><br><span class="line">        bottom_pushButton[i]-&gt;<span class="built_in">setObjectName</span>(<span class="built_in">tr</span>(<span class="string">&quot;bottom_pushButton%1&quot;</span>).<span class="built_in">arg</span>(QString::<span class="built_in">number</span>(i)));</span><br><span class="line">        bottom_pushButton[i]-&gt;<span class="built_in">setFocusPolicy</span>(Qt::NoFocus);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    mainVLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    topHLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    bottomHLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    middleHLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    mid_left_VLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    mid_right_VLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    mid_right_top_HLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    mid_right_bottom_HLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 主布局 */</span></span><br><span class="line">    mainVLayout-&gt;<span class="built_in">addWidget</span>(topWidget);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">addWidget</span>(middleWidget);</span><br><span class="line">    middleWidget-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">305</span>);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">addWidget</span>(bottomWidget);</span><br><span class="line">    mainWidget-&gt;<span class="built_in">setLayout</span>(mainVLayout);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignCenter);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间布局 */</span></span><br><span class="line">    middleHLayout-&gt;<span class="built_in">addWidget</span>(mid_left_Widget);</span><br><span class="line">    middleHLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignCenter);</span><br><span class="line">    mid_left_Widget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">305</span>, <span class="number">305</span>);</span><br><span class="line">    middleHLayout-&gt;<span class="built_in">addWidget</span>(mid_right_Widget);</span><br><span class="line">    middleHLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    middleWidget-&gt;<span class="built_in">setLayout</span>(middleHLayout);</span><br><span class="line">    middleWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">795</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间右边布局 */</span></span><br><span class="line">    mid_right_VLayout-&gt;<span class="built_in">addWidget</span>(mid_right_top_Widget);</span><br><span class="line">    mid_right_VLayout-&gt;<span class="built_in">addWidget</span>(mid_right_bottom_Widget);</span><br><span class="line">    mid_right_VLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_right_Widget-&gt;<span class="built_in">setLayout</span>(mid_right_VLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间右边顶部布局 */</span></span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">1</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Name of song&quot;</span>);</span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">2</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Categories&quot;</span>);</span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">3</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">3</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">3</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Top List&quot;</span>);</span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_right_top_Widget-&gt;<span class="built_in">setLayout</span>(mid_right_top_HLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间右边底部布局 */</span></span><br><span class="line">    mid_right_bottom_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">4</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;New&quot;</span>);</span><br><span class="line">    mid_right_bottom_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">5</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">5</span>]-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">5</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Stars&quot;</span>);</span><br><span class="line">    mid_right_bottom_HLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_right_bottom_Widget-&gt;<span class="built_in">setLayout</span>(mid_right_bottom_HLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 顶部布局 */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">4</span>) &#123;</span><br><span class="line">            QSpacerItem *hSpacer0 = <span class="keyword">new</span> <span class="built_in">QSpacerItem</span>(<span class="number">150</span>, <span class="number">10</span>, QSizePolicy::Fixed, QSizePolicy::Fixed);</span><br><span class="line">            topHLayout-&gt;<span class="built_in">addSpacerItem</span>(hSpacer0);</span><br><span class="line">        &#125;</span><br><span class="line">        topHLayout-&gt;<span class="built_in">addWidget</span>(top_pushButton[i]);</span><br><span class="line">        topHLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignTop | Qt::AlignHCenter | Qt::AlignLeft);</span><br><span class="line">        topHLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    topHLayout-&gt;<span class="built_in">setSpacing</span>(<span class="number">20</span>);</span><br><span class="line">    top_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Select songs&quot;</span>);</span><br><span class="line">    top_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Interation&quot;</span>);</span><br><span class="line">    top_pushButton[<span class="number">3</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;More         &quot;</span>);</span><br><span class="line">    top_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Back       &quot;</span>);</span><br><span class="line">    topWidget-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">80</span>);</span><br><span class="line">    topWidget-&gt;<span class="built_in">setFixedWidth</span>(<span class="number">800</span>);</span><br><span class="line">    topWidget-&gt;<span class="built_in">setLayout</span>(topHLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 底部布局 */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">        bottomHLayout-&gt;<span class="built_in">addWidget</span>(bottom_pushButton[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bottomHLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">5</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    bottomHLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignLeft);</span><br><span class="line">    bottomHLayout-&gt;<span class="built_in">setSpacing</span>(<span class="number">62</span>);</span><br><span class="line">    bottomWidget-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">100</span>);</span><br><span class="line">    bottomWidget-&gt;<span class="built_in">setLayout</span>(bottomHLayout);</span><br><span class="line">    bottom_pushButton[<span class="number">0</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;led&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Score&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Volume&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Original&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">5</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Next&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">6</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;List&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(top_pushButton[<span class="number">4</span>], <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">top_pushButton_4</span>()));</span><br><span class="line">    <span class="comment">/* 加载qss样式文件 */</span></span><br><span class="line">    <span class="comment">//loadStyle();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::loadStyle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 指定文件 */</span></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;:/style.qss&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断文件是否存在 */</span></span><br><span class="line">    <span class="keyword">if</span> (file.<span class="built_in">exists</span>() ) &#123;</span><br><span class="line">        <span class="comment">/* 以只读的方式打开 */</span></span><br><span class="line">        file.<span class="built_in">open</span>(QFile::ReadOnly);</span><br><span class="line">        <span class="comment">/* 以字符串的方式保存读出的结果 */</span></span><br><span class="line">        QString styleSheet = <span class="built_in">QLatin1String</span>(file.<span class="built_in">readAll</span>());</span><br><span class="line">        <span class="comment">/* 设置全局样式 */</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(styleSheet);</span><br><span class="line">        <span class="comment">/* 关闭文件 */</span></span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Video::~<span class="built_in">Video</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Video::add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//qDebug() &lt;&lt; &quot;a + b=&quot; &lt;&lt; a+b;</span></span><br><span class="line">    <span class="comment">//this-&gt;resize(800, 480);</span></span><br><span class="line">    <span class="comment">//this-&gt;setMinimumSize(800, 480);</span></span><br><span class="line">    <span class="comment">// this-&gt;setAttribute(Qt::WA_TranslucentBackground, true);</span></span><br><span class="line">    <span class="comment">//this-&gt;setStyleSheet(&quot;QWidget &#123; background-color: rgba(255, 245, 238, 100%); &#125;&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::resizeEvent</span><span class="params">(QResizeEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(event)</span><br><span class="line">    mainWidget-&gt;<span class="built_in">resize</span>(<span class="keyword">this</span>-&gt;<span class="built_in">size</span>());</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="number">222222</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::top_pushButton_4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 设置主窗口的样式1 */</span></span><br><span class="line">    <span class="comment">//this-&gt;setStyleSheet(&quot;QMainWindow &#123; background-color: rgba(255, 245, 238, 100%); &#125;&quot;);</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">    AppDemo *appDemo = <span class="keyword">new</span> <span class="built_in">AppDemo</span>();</span><br><span class="line">    appDemo-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 槽函数的实现 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Video::pushButton2_Clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 设置主窗口的样式2 */</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;QMainWindow &#123; background-color: rgba(238, 122, 233, 100%); &#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="video-h"><a href="#video-h" class="headerlink" title="video.h"></a>video.h</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> VIDEO_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VIDEO_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QHBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../appdemo/appdemo.h&quot;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="function"><span class="keyword">explicit</span> <span class="title">Video</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line">    ~<span class="built_in">Video</span>();</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* 主widget */</span></span><br><span class="line">    QWidget *mainWidget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 顶部widget */</span></span><br><span class="line">    QWidget *topWidget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间widget */</span></span><br><span class="line">    QWidget *middleWidget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 底部widget */</span></span><br><span class="line">    QWidget *bottomWidget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_左边Widget，也就是人物Widget */</span></span><br><span class="line">    QWidget *mid_left_Widget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_右边Widget，也就是小方格Widget */</span></span><br><span class="line">    QWidget *mid_right_Widget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_右边_顶部Widget */</span></span><br><span class="line">    QWidget *mid_right_top_Widget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_右边_底部Widget */</span></span><br><span class="line">    QWidget *mid_right_bottom_Widget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 主布局 */</span></span><br><span class="line">    QVBoxLayout *mainVLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 顶部布局 */</span></span><br><span class="line">    QHBoxLayout *topHLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间布局 */</span></span><br><span class="line">    QHBoxLayout *middleHLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 底部布局 */</span></span><br><span class="line">    QHBoxLayout *bottomHLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_左边布局 */</span></span><br><span class="line">    QVBoxLayout *mid_left_VLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_右边布局 */</span></span><br><span class="line">    QVBoxLayout *mid_right_VLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_右边顶部布局*/</span></span><br><span class="line">    QHBoxLayout *mid_right_top_HLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间_右边底部布局*/</span></span><br><span class="line">    QHBoxLayout *mid_right_bottom_HLayout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间按钮，从左到右，从上到下分布 */</span></span><br><span class="line">    QPushButton *mid_pushButton[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 顶部按钮，从左到右 */</span></span><br><span class="line">    QPushButton *top_pushButton[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 底部按钮，从左到右 */</span></span><br><span class="line">    QPushButton *bottom_pushButton[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 重设大小 */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">resizeEvent</span><span class="params">(QResizeEvent *event)</span></span>;</span><br><span class="line">    <span class="comment">/* 加载qss */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadStyle</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 声明一个QPushButton对象pushButton1 */</span></span><br><span class="line">    QPushButton *pushButton1;</span><br><span class="line">    <span class="comment">/* 声明一个QPushButton对象pushButton2 */</span></span><br><span class="line">    QPushButton *pushButton2;</span><br><span class="line">   <span class="comment">// Ui::Video *ui;</span></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="comment">/* 声明对象pushButton1的槽函数 */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">top_pushButton_4</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">/* 声明对象pushButton2的槽函数 */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pushButton2_Clicked</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// TEST_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如上即为，新界面的数据。</p><p>在appdemo中调用如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;appdemo.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line">AppDemo::<span class="built_in">AppDemo</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">resize</span>(<span class="number">800</span>, <span class="number">480</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setMinimumSize</span>(<span class="number">800</span>, <span class="number">480</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setAttribute</span>(Qt::WA_TranslucentBackground, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    mainWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    topWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    middleWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    bottomWidget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line"></span><br><span class="line">    mid_left_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    mid_right_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line"></span><br><span class="line">    mid_right_top_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    mid_right_bottom_Widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        mid_pushButton[i] = <span class="keyword">new</span> <span class="built_in">QPushButton</span>();</span><br><span class="line">        mid_pushButton[i]-&gt;<span class="built_in">setObjectName</span>(<span class="built_in">tr</span>(<span class="string">&quot;mid_pushButton%1&quot;</span>).<span class="built_in">arg</span>(QString::<span class="built_in">number</span>(i)));</span><br><span class="line">        mid_pushButton[i]-&gt;<span class="built_in">setFocusPolicy</span>(Qt::NoFocus);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">5</span>) &#123;</span><br><span class="line">            top_pushButton[i] = <span class="keyword">new</span> <span class="built_in">QPushButton</span>();</span><br><span class="line">            top_pushButton[i]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">120</span>, <span class="number">60</span>);</span><br><span class="line">            top_pushButton[i]-&gt;<span class="built_in">setObjectName</span>(<span class="built_in">tr</span>(<span class="string">&quot;top_pushButton%1&quot;</span>).<span class="built_in">arg</span>(QString::<span class="built_in">number</span>(i)));</span><br><span class="line">            top_pushButton[i]-&gt;<span class="built_in">setFocusPolicy</span>(Qt::NoFocus);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">        bottom_pushButton[i] = <span class="keyword">new</span> <span class="built_in">QPushButton</span>();</span><br><span class="line">        bottom_pushButton[i]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">60</span>, <span class="number">60</span>);</span><br><span class="line">        bottom_pushButton[i]-&gt;<span class="built_in">setObjectName</span>(<span class="built_in">tr</span>(<span class="string">&quot;bottom_pushButton%1&quot;</span>).<span class="built_in">arg</span>(QString::<span class="built_in">number</span>(i)));</span><br><span class="line">        bottom_pushButton[i]-&gt;<span class="built_in">setFocusPolicy</span>(Qt::NoFocus);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    mainVLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    topHLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    bottomHLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    middleHLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    mid_left_VLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    mid_right_VLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    mid_right_top_HLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    mid_right_bottom_HLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 主布局 */</span></span><br><span class="line">    mainVLayout-&gt;<span class="built_in">addWidget</span>(topWidget);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">addWidget</span>(middleWidget);</span><br><span class="line">    middleWidget-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">305</span>);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">addWidget</span>(bottomWidget);</span><br><span class="line">    mainWidget-&gt;<span class="built_in">setLayout</span>(mainVLayout);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignCenter);</span><br><span class="line">    mainVLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间布局 */</span></span><br><span class="line">    middleHLayout-&gt;<span class="built_in">addWidget</span>(mid_left_Widget);</span><br><span class="line">    middleHLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignCenter);</span><br><span class="line">    mid_left_Widget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">305</span>, <span class="number">305</span>);</span><br><span class="line">    middleHLayout-&gt;<span class="built_in">addWidget</span>(mid_right_Widget);</span><br><span class="line">    middleHLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    middleWidget-&gt;<span class="built_in">setLayout</span>(middleHLayout);</span><br><span class="line">    middleWidget-&gt;<span class="built_in">setFixedSize</span>(<span class="number">795</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间左边布局 */</span></span><br><span class="line">    mid_left_VLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">0</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">0</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">305</span>, <span class="number">305</span>);</span><br><span class="line">    mid_left_VLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_left_Widget-&gt;<span class="built_in">setLayout</span>(mid_left_VLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间右边布局 */</span></span><br><span class="line">    mid_right_VLayout-&gt;<span class="built_in">addWidget</span>(mid_right_top_Widget);</span><br><span class="line">    mid_right_VLayout-&gt;<span class="built_in">addWidget</span>(mid_right_bottom_Widget);</span><br><span class="line">    mid_right_VLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_right_Widget-&gt;<span class="built_in">setLayout</span>(mid_right_VLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间右边顶部布局 */</span></span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">1</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Name of song&quot;</span>);</span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">2</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Categories&quot;</span>);</span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">3</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">3</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">3</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Top List&quot;</span>);</span><br><span class="line">    mid_right_top_HLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_right_top_Widget-&gt;<span class="built_in">setLayout</span>(mid_right_top_HLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 中间右边底部布局 */</span></span><br><span class="line">    mid_right_bottom_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">4</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setFixedSize</span>(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;New&quot;</span>);</span><br><span class="line">    mid_right_bottom_HLayout-&gt;<span class="built_in">addWidget</span>(mid_pushButton[<span class="number">5</span>]);</span><br><span class="line">    mid_pushButton[<span class="number">5</span>]-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">150</span>);</span><br><span class="line">    mid_pushButton[<span class="number">5</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Stars&quot;</span>);</span><br><span class="line">    mid_right_bottom_HLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mid_right_bottom_Widget-&gt;<span class="built_in">setLayout</span>(mid_right_bottom_HLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 顶部布局 */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">4</span>) &#123;</span><br><span class="line">            QSpacerItem *hSpacer0 = <span class="keyword">new</span> <span class="built_in">QSpacerItem</span>(<span class="number">150</span>, <span class="number">10</span>, QSizePolicy::Fixed, QSizePolicy::Fixed);</span><br><span class="line">            topHLayout-&gt;<span class="built_in">addSpacerItem</span>(hSpacer0);</span><br><span class="line">        &#125;</span><br><span class="line">        topHLayout-&gt;<span class="built_in">addWidget</span>(top_pushButton[i]);</span><br><span class="line">        topHLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignTop | Qt::AlignHCenter | Qt::AlignLeft);</span><br><span class="line">        topHLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    topHLayout-&gt;<span class="built_in">setSpacing</span>(<span class="number">20</span>);</span><br><span class="line">    top_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Select songs&quot;</span>);</span><br><span class="line">    top_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Interation&quot;</span>);</span><br><span class="line">    top_pushButton[<span class="number">3</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;More         &quot;</span>);</span><br><span class="line">    top_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Search       &quot;</span>);</span><br><span class="line">    topWidget-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">80</span>);</span><br><span class="line">    topWidget-&gt;<span class="built_in">setFixedWidth</span>(<span class="number">800</span>);</span><br><span class="line">    topWidget-&gt;<span class="built_in">setLayout</span>(topHLayout);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 底部布局 */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">        bottomHLayout-&gt;<span class="built_in">addWidget</span>(bottom_pushButton[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bottomHLayout-&gt;<span class="built_in">setContentsMargins</span>(<span class="number">5</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    bottomHLayout-&gt;<span class="built_in">setAlignment</span>(Qt::AlignLeft);</span><br><span class="line">    bottomHLayout-&gt;<span class="built_in">setSpacing</span>(<span class="number">62</span>);</span><br><span class="line">    bottomWidget-&gt;<span class="built_in">setFixedHeight</span>(<span class="number">100</span>);</span><br><span class="line">    bottomWidget-&gt;<span class="built_in">setLayout</span>(bottomHLayout);</span><br><span class="line">    bottom_pushButton[<span class="number">0</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Service&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">1</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Score&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">2</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Volume&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">4</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Original&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">5</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Next&quot;</span>);</span><br><span class="line">    bottom_pushButton[<span class="number">6</span>]-&gt;<span class="built_in">setText</span>(<span class="string">&quot;List&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 加载qss样式文件 */</span></span><br><span class="line">    <span class="built_in">loadStyle</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(bottom_pushButton[<span class="number">0</span>], <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">pushButton1_Clicked</span>()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AppDemo::~<span class="built_in">AppDemo</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AppDemo::resizeEvent</span><span class="params">(QResizeEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(event)</span><br><span class="line">    mainWidget-&gt;<span class="built_in">resize</span>(<span class="keyword">this</span>-&gt;<span class="built_in">size</span>());</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="number">222222</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AppDemo::loadStyle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 指定文件 */</span></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;:/style.qss&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断文件是否存在 */</span></span><br><span class="line">    <span class="keyword">if</span> (file.<span class="built_in">exists</span>() ) &#123;</span><br><span class="line">        <span class="comment">/* 以只读的方式打开 */</span></span><br><span class="line">        file.<span class="built_in">open</span>(QFile::ReadOnly);</span><br><span class="line">        <span class="comment">/* 以字符串的方式保存读出的结果 */</span></span><br><span class="line">        QString styleSheet = <span class="built_in">QLatin1String</span>(file.<span class="built_in">readAll</span>());</span><br><span class="line">        <span class="comment">/* 设置全局样式 */</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setStyleSheet</span>(styleSheet);</span><br><span class="line">        <span class="comment">/* 关闭文件 */</span></span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 槽函数的实现 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AppDemo::pushButton1_Clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 设置主窗口的样式1 */</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">    Video *video = <span class="keyword">new</span> <span class="built_in">Video</span>();</span><br><span class="line">    video-&gt;<span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>整体的点击后效果如下：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E6%96%B0%E5%88%9B%E7%95%8C%E9%9D%A2_1786x800.jpg" alt="新创界面_1786x800"></p><p>到处点击跳转的功能已经实现，back后的效果如下：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/back%E7%95%8C%E9%9D%A2_1786x800.jpg" alt="back界面_1786x800"></p><h1 id="收获总结"><a href="#收获总结" class="headerlink" title="收获总结"></a>收获总结</h1><p>经过一天的时间，对源码的分析、拆解，逐渐达到自己需要的效果，后续再进行自主开发、学习。对C++的开发有了跟深入的理解，在这问题上遇到了PC端上的现象跟开发板板的现象不一致，应该是存在着细微的差别，在PC上运行存在一些问题，但是在开发板上，是能正常显示的，这一类问题，需要后续注意，双方要互相验证一下。</p><p>这几天，继续快马加鞭的开发，把需要学习的地方，深入学习一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;font color=&quot;#dd0000&quot;&gt;这是新开的C++QT开发专栏，接下来将会花费较多的时间进行讲述基于LinuxC++车载显示器开发。&lt;/font&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;项目要求&quot;&gt;&lt;a href=&quot;#项目要求&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（6）</title>
    <link href="https://jgxnb.cn/2023/03/10/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%886%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/03/10/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%886%EF%BC%89/</id>
    <published>2023-03-10T14:52:48.000Z</published>
    <updated>2023-03-11T03:54:45.993Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="453e7fb1aa9e19a36cbe3a251fb7280f49beba0c709a1a57af3e4799b228e4e7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（5）</title>
    <link href="https://jgxnb.cn/2023/03/03/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%885%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/03/03/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%885%EF%BC%89/</id>
    <published>2023-03-03T14:33:54.000Z</published>
    <updated>2023-03-03T15:36:37.153Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1e9afc63f2b6d54e8b05f752697c09a27b89dc6a5aaef19d0bf6d18ea8d37b1c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（4）</title>
    <link href="https://jgxnb.cn/2023/02/25/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%884%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/02/25/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%884%EF%BC%89/</id>
    <published>2023-02-25T02:06:41.000Z</published>
    <updated>2023-02-25T04:48:00.147Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="6c9fe2feca3f0eef44c85468d0940b50c5aea33119b22551537322baff20fd47">3e8f7111a74be2a52fa169d25e9f445fedd66e00890444e8a4c926f70839652383737652266c578ae134fd5b152077e7596824438ad9c30beebc317b68198578d72c8ef116fc30ab423f0dfb2c3c007af4a27ec0be324434d9665fcdbdf59deffb6af988c4ae8f72eef6fe42645e661c9634a5e49ed3cf99ca5e7bf757d8316b5ea3c41cf80fd3d7c5e94e4875471dcab2ae88e68d7b2eadce1b1c9530b5107dcfb23c5fd1cc3eac6fdbd0e777d02ccfc82dd02564ff1202e826d7b6ffe5a7e2943340955184dcff6c8d91da0cdc0f566e6421278faf60ea026784938d63dbf6f20fefebceb876ee442eaacfc99826df916244b79db4a5e2763c5e8f6c7081f9f8e88a7e1ad2c6159cf494c64e7395d2c1ff63b3be7c899d6c1c9720aa3e1c75b42faaf2c3ad6b09db95d299aecf217b458591c750f08d6794d17a0a86eacb43cacfa2af50c82b56eec813a233c291454df38c30dcf6e1163b8acb322f6213d669a5e80bacbafebf4b9905a1c44164fd8149eaa48dcf602a65b02b51bcc0542018cd1c209c24acd3f661a6fbca42826ffec75ab5cfeb4c2bb74846fd805c8902ef102b821ecadcbf903806ae03a07bdd29a0f1bb8853dfacdf705bf655a7ce48b66e45d340c7bdd936180502bb630209e251840a0813a27a3ec4b428e44ef4d5339a71752d3ff4251033a293212bcb938e5857bf3e3907eac4da922ce59b35056f8bc441e2afec51ca54490b92f5b3fa43e76f90b381d8ff9d3a938a9650a3627cef22f90c554554918c66e894260df1fce8ecceb646c75eeea338a5423548d75a3587977c29636a4d14dd00acc472e703f6bbd6605669fa18b7e5df0873172553173eaef1e025028e0c128730ddf31bd40c11eeca31574f6e5eafd596f021fe1e809a262eb95445461c0731209ca1010f57b5fedc39c4a5fd1f9f819412c12700178ccacb067f48a2a7bcbdb301488b5afe211e1db782da1984cdbd0ce79628df580e929c1302dc58a2c4b02ceeed4ca283ece576934931b48c7e841bb61f1a9e4d8f3a6f2e68d48800c07cebb955cbcde47fd5081c0369145c6f807382e80a2966595051550f1fdfc83bc71d187aa4ec96451e1c4337e845307c832e20475ea74c6817f1fedb49c0b754fefb4d0b9757d4c4f9b922e4d90e149eedd805c2d11a27d747ceff77d37d41ab1fbaf1d06c5bae5b0f5617285875eaff4e4f3bab0d02703e8e419dcbc1e8f9e9e646a5dd7c4bcf05b4731ca4bf28268bf51ee35c5992c7129afb22dee714599399ecc32eff71b60179f328d9b32e3ac4de340933f02b03e467bda686ef86411f618d31f7f3978afcbf626bccb2de567687509d777efe4d760ed3957d1e47497f3eb5cfd75f77f3b2f58cc00cf1db150ebe715edb20c098b1fd139a5ed47061f45438ba740a001b181c0231ceffb1d9a5c46a1b197ff6296b6d46c2adc14292dce7c486383079b051eba7be539b801a4d6d8352b0e197f7c77ac1a4c89070a868dafe68de42f2834980efc194c878f0e80bef45fd1c52403a9c0bd009f388712ea208e4114982b9b10bb9d73810e061c2d8781b46f3fb707e8b47b561af550665a072664b249ba1ec8ac875b7d7840c4b119c9d56142727ddff0d5f4ecc3cdcc18d3c0055319a4b93e2c4f862989fb9f2bdfb4db7ed12ff55e9bb344bad38d2466d60db14fdb4c0cb99aad9761b0b596277631c6fd47ffa8e3eb1381f39ab200bde3f31856d813b0e5ea761dbf8e54151529e77066779bb1688278e934df7e3f7a3091a9b43d651afff491e4f69a70390561272cdb3fb75d8f3ec9d61d94c578066ffb3c49d695d1085d788c916bcc39f44bbe325b5fa58beb61ff8857cca26d5e13caca535667f2789312e3f2fca76e14415a380152f50aa57f499881588e2e1d8e1b5167070d266bd9d7f396b66d41d5464f364d6858bd2874c17230b88f8687aa39acdd8d17c0ff1a39fe95e2ef8695a4b29662c8d9136bc90b3270c9700bfb78e2a3fb4e96229144ea74e2a7f6c4570786b24b59e9c082bf9b7f93ad20e4f3093dddb170476d75095c6c571aa46446a4750d1a54b75e084c8896a06a634b7ec7bc91502d506bac815935b6a538c57d5118147a63720b44a0eccfd76fb139ea8744c5a2a3474e1652fdd05f24e8440a67f5113ef99274fe50e235fb3a49aac4b9a4edad695eb1568128831aad1c24cc496e55e728e03bce25b6c016f3c046a4797ea8a78e908237309549c003290e5bb6e3d7420d6d54b2af064e525e62d58b5517e53fccacd4f95aa2bd8bf26a07f1955df52c13470f3aed145839355a70f1d16b2f78b2dbd37290ec647097fe9fa9df34679a8d5432a315a1860c9458b3c1f0b35320850d8d519d36b5a222a24d59858c9d58a44815b91516a39ff2b1e3ef90f1142b899e4fb1c8e7f0a5f949ff09f0475842729455fdc26559bd1e3b0dee534e6090af38421a45dfe91c7c2609a5ab398b4f1a52dc7928f776f2c2d1e731895019125704523f4cbf380db390c1c26365a315c97755873530346f330ccd71c912eb9490d06004e9912c4184121c17f67fd87cdeb22dc16fde0b57b411db57a31b8b43306268c1ec2c254e3100d896bcaa13a2f64c61a76056cf630b407918fc21fcd77d2785d87a3eb96363e17611a0cfda5721437584067efd8800c396b6b1af792d5572f9ea05bf16d90a9268c3a83a36056fc926965c919a1ad2e5715c95eaf5e6fa663fc7c43cc228a6bbbf6be4a150d1dde505698e7c5ef6a071b613713d3b8602593d04a1db6976827f0b2e9b85af8239bcb69a3b75ab782e1dc89f8b1caefb8ffee520eb0144e472ba8b679091e3d66af65fc27ff30937c1369abf4bd7952f4b6071d1aad241b5e64484c7ceeb53486770a0167c945de11d7991de48c6b1f446ee0a77657b5edd78955f11cea012a29bbfbb26954407526df4d73bd4c5e9a7aa2f3bb1a7effb934a5371b658e41b9b2e77e9ad9ef233ed51dab2fed5a88f39d3bfda7f515c2e86d63a5cc7b2f5cb6ba9da3d082aed2a0681cd1fbf8bfb7811a7e48cc97a11aa93d0762b5338bdd589ba31b2f710b53726f191e0ae9def7f635ee50db6653e3239b8c807033d497e8febb9a30efb8b3fa0cfdb11481ad4bbc69ea6201ee4ac8e3694e59d106c3338c2d76d3bfa904219d8ecca39602876fc67e1b31f83864b2e88199cde0d97b9de28266fdb04f685b3ca698c007def644c0961b081055b86acb2a007deb9547c9a05474b8fff3c9a662be2b90059af59e4ed1f5884b0b6c8977548264a789809ab1c7cf26e87ef33e151c8825382820b82c2a686b5af8426f0a1f0e04462892075111a1995d19420d372648f161293210972460eb86caf9c5505446aef54c4f1df182a1b4ab63ff388a67db171662ef0ab16e3bea03db23f0b0aa576fea1b79a4c536d8d700586ce3d618a0df664c5a880a77ebd14abcf8838a4ed79412e598168b5adf8ad15b27d27f90f33723cbf928236204f71c7bb5333b7180a0f463aea179d4875b88c1da9e3ef9caef0122c8b5a17408d59ec1c420296e7b47ca5434fcf1f3c6e6cc045eda37d79fc4b6563e63635c1cba873891c86f465ef81206513f65be34bade591bdc97b9c869853cb1585cf9b5af8301c767aaeb1a69d664b9017d7e92ac4e461125e68313c665385b626089980ea36940bab9af1d688af9620c40b41a2d8f8abaf263c0db03393dc8d302b5fa4185697a0b251c99bbdede903c21381bb588460b0bfc47d2e62fbe42925983fc9721ca2b03e4d8e18c756986682e78302973f1d3335e1c458f9b747492519c0eeef3428f065c5ad26ed6773940d027d7838ab99a97e1e9a94025e00cba1302e5298a3ece40fa4c6a361cf497f66197bda6d6f648a4349bb0de63830f53021cb30c907fe32ce455c07df981b6a4ac39c3ddd132ea9bf31cb828f19c0c18e3bce0590e3c1bf64753eea79194101939bf818ac2e4c468e50816550ff807bcc7ce603e47bb2f4833f8acf8d6206ce46a82979b29258556e1a1fdf4c6fea4ab8e18590c07ac35436fcc44607807cb865f16efbb9e966683eef57dcd33fbfa8bed2fd2c0a3fb7df525084cf7d59ada4721fdf1d2a284d69db2fce21a362da8e32f02426d9b8e32360fb251f40a3492951d5460c13e2d6c0c4981c60921a964dd10f43dfa64313e9881ee38c83787522e8ef5729767f99459b31f2ff9d13c741f2e9a1d080ca0a9fa0b78d1632ace47c9493c4e477a01476cf845689a8d90404b276d56f2fbb018fa1000c8ef06e3f97ba7dee8226dc4da4ed05e79ed4d99c85e4285eb2b25f40bfd2db9ad871f32242d9cdab7d1d057606d9c1044bb8dc8c7df485e926debbe00ac583d0a4e323205392d248343e0f3ab8228707406bcae501807996ccf0cd902e5400430e7a091baef006792a270a966aa1b9ac2b30c5d207c7fb792d226d8a599dd58f8fe841ead4c75f7b4814d4e291b7998fe58ce4149cdd4dbe15564131fb059d57c16d6a8f13158b4c9b8751add38e7afd21805b1642fbbe0d6721e7cc2c8f752693956b67817054497e71389f7e6a6efb43db671782cbc85c1ddcbd1f68cd96d179cda93fffdeb0d994997abf031c79ba0741cd76e45d11d34d6130914206f6aade188126082b5848de448e8a248295e13bac20478bbdff1cf64e947b2792f83ceaafe55340f44013f5f406eb3bbed823ac8ac97687c89899f60443fcd796422644078b8d9de639c87c88765a4482e832783cd140a60e3edea88b293aac2d73ca4a1596c3e84e71465ceaaa1d9d30366bfc4db30b1d1c29235d81b23cfa136b51e99b7c41fdaaeb9cccf0f0e2bc1d8374bc38323ca550eb07d1ea7355342013acab38b768a37ce092834a5431643cd6eb0af0375d9d67fed22057c8fe362dd5578e6d065a390de8adcd01f9aa28e4483b847a3d6e8907e1bcca7f87bee725b824facff7fba0af17718f06ac9c74f2639499d3a8e029d09cbbe3352ab95cdee59b65f8795ba497abf17a42243b553b85f15f9c406791818a0d537afe9233e57c4c162669697a24cde4057c79fe25db6540e6ad03d1e5252585ea282f0fad0d90e930b344cc911893bc831d9c358704f9eff70aa406ead3f82d305287194e4abf7ad0f2d0675eceee6d45cc9162ce29b5641c1964436b22642e50ff19daca47730e4c889b4368af553a265bc3d87b2d6abd7daab67dc833ae336a915410ac4290aad6f9eac418ddc7f55c811dc0a9d20d7672cc12929a8efb499a10759850a6fd33a13500e9ecf201a3bdc79b87b133cb94306004f3076605646fcd1091c7d90247c8c08016f1a7e62e83b4199cb89d7135d98862e7ca5e0eab9367a726a3fc905bad7ecd1c782ff823c19954be6e36e111d7003eceab34b719e566e942b585bc6665981cbf2c589335738b614563a3d9d36d8ac0c248b8dbcb321f915c041406653f25469f9909a91be26ad8e390621bb53db732a50c5112add61cca9e67526200212c463d2ba16e115b2ddb7e60123c64c8342e0145bed0a9c399f2de1fcc1d415bc1ae14b01a8a9dfa375039a48be4524db420eacbe5a376329bc4e1181c868bd26c645f57f7be57779c6a2d81c1bfe8031eff5d2fece1d24ea45fe7b17fd268263b22f917e3b7b7918fa546daeacfac771b68a16f2bfc62e15e1c69b1f32d0963a69cdcd687ef96e24879a31482b4fe7bf34295b83c1757d6234d66e0d66f69055175c0f8d8727fb73d95d1a113d14d5008e62fc1e62dba645c9bd089df69e299b2c1237b0b2f7ac6e76db16b121712fe583f1d9b7f14f5cf3c891bd032e7e0a3c1cfc2ac9b1f0e9ddae6bf1ec39fa256b301c1145f1c672b298279729face252ba0fb60e50efefb402781cff18152b6b7795836aa81f8d056aaa5d3107944c33b3b8c6a6e05514f09cc8266c9f1e4c0ff2d53da4367c63c8dbc4c05a57a7ce15b14bd2959ae3adfc64bf9d78670fbf8e195658ec080417dc04752750b5e79a9c406ae152e821a14abf4611c628a49dad0dddcbeecbdac64febdd471c4cd3315e59b2fc2ff5be544b4551b9fda3c052896e27c4635f4a1f375ecd4d4b5c2b0423f6f1d4e91d10d1f2f99f014c56e8b4547b072a70cd68fe38150deb9bb7cd89d4d9abc39240fa31e13055eaef80eeb5bc22f5e7f0ef2a5070f277104785726a11f43899805bbe607d52df7d3eb4c5acaf83658e34917a0d2bf523231a75c4f5cb9801907d1f45fc259209190cc71c72150e5a50a3f2245774bf59c35cb21b21cbe4cd3b3082ed3e41b04b655905439c9b633c51e07eea12a99b114f374e6bb6b2054673ce0f0ee27ca1757cce607a483b25b45fa5801d1b81db0fe1e4d2832c70b8a5c43c856f3280abc3023859a112a5685d70a2f77485db94e37833bd9b63a36c055abf643b5e1d4ad71d84c12980c02c8e9873d92c6589d246067cbc8aa274baa9cae3da0919209ee940300bcae6df9050bab3e769cb9f74b84af56bae6b4b282f51f568b3bb9a9db185b9c775f7d5f2b440b4dab530f8f700f7e7a1bc1116d94af53bfe93f694e3d73aa9de987f531f8a81bd6be3612425fd6193415f0465ec58122e0ccf86e5e9fdda3ba6797e1ed8d9fe7f2437b4afa103fad16cffbfabdc55705601e4ce2a3b363cb407f054b21fcc4a830f1a4832b942db00c1b01fbc803c19e2d08aeddb6c68c5fa0f9ee573721a1a4641df591f4fa269d5145bbfc141d724d33d015b7c4e58c7b30586f1f786d738bfb865942febb141e31ca8dd50afa7760881ce56d1f29d94e29dd484693faed2136e8f07494f80f170110c562996d28425cb3247ecd161bfbf79175e0d0ef2690a5677e5add608431b917e3cb9979f6a4bb0c07b1a994260d44c322ad957cd1e2d64354b2c7f99d4c7ae37a7536aa5cf1d8b8bc7477d1417af5c86ce3d300381a7ee6a47abaa7f2366a3282571b5a51c0392690d49695544f118e6448e6970078a38293e3eaab9f4340af520f25e724273ccce272e46dc19160dbcaf45ebd9081913f1341a5423cb5098cf299c984267ced44fa6565d8ee5864ce94fe2562d0ae82b9fdb602d2620beb57213499fa42d901f11b1845ee9b3f82883456f668d2f7d3a3ba8c1a32f05ec8884abfb01dd329032bc844a30bd473b6336c42c5e75498927a5bdc62b4d6c9c37e51d2dd7b05ed9ba16dd8e513da959ac55b49ae6af91ae1135b632f0391b450bd7f452b1893e7e0eafa31ab8c87df4035b53cc6e387f1a8a32a551797d29fb7683e644bb43965a84e95c3ecf915386ad8c6c6121812638bc1467f201143264c6b5be02f499f807aa44a047d7db384defe2cd5534019cacf199d6bafdbf8128571215eb353ef77a7e2b91a2cb8f38676b62ded8f4b59caee189cda4631835aa76212597f70cd5ffefe72c32b457b6f109441c1ca897fb5004dc054b79d4e0f22f96e23d9cef3064ef4319ac255d256e5caff65d0e82c1f278a24369595984db52243e4247d5bb1a359df3b7ac8132b2afed603a00d90754e2b5ec9c963c431f11431a8e0568d0b02e6182ad10ca8b4c8eb9ac49f5e7377dbcf09072c2eff2631d631f23e5b69c09f9247af7ec95702967b6cee3e88eae97f82cdb0d20d5a9a25badc5b77a3fa1d843c23c26941edfe22831941901fca40cbbe5326ecdd7295c72c028a8a3610eae7be3c662524e8430b51d0a8aeb14c2778e91cb140829420a396ea3aaa06e3fb27ed65da1c5abc7f1ea28fb02119f6ba29bfc7fe601f713b34290bf91d750970d6b117ca4678abdefa123285a0085321bb42e92aa5de85dc9cc5c366c1c5c6b0401ae8b57933e766adb1ff4877441f1226eb75d643cc35f6e70a703f4805f0dd6cc3c22e16f50c28458eabb1dfd48dccf71ddfed7fea323cca17b73170c6c84ebb95994b1866f04c804e1079cc1d9f129f11780063be1c69efa08162aa567d2e11d98c3f142e9615064d78da2de4268ce6dee9f1b884e5c97f882ddd1961b80c4c07da3b94bf50ab94be480ada057aa9a61dce0aa022ae6494dba9447d40b3aa76661f6cc383ee7041b9d2b8bf0d68a936db12cdf0a947b68998934fb17c7bd8963d1aa959acef6217aa49d2be89b9c498be97f7d37248485630630da3d7b5b61d740ce2cf06f6ca94b59b1afbe3f8afbba709f3d42825f4ff24753e4f71ceff27751dcf17d80efd30846a75f5162090495655a5edffb86fefb78b87541a7a1ebccc033edcd37c3f3e5b341931c75d42b9636f2b8192b3b8441c0bcbc814844c7cfa274c469d57506492b8d3d9a48c80f6ee534d1a2a12f3e1f29563d5f489f736911e72209e2660c540e3303758cdc083cc6c0cc2ff55f83977b2edd984fdc41e0f20f443e03699607a6128cae556001261423570e11a60eb0d924143741350cdf0b99bd07f187c663d4bbf60c5d0d569bd4e1fce94decae552f17d21c7d49bb104574b400b09cfaa3d8df40e0961ff3aa8efa523640d6628fadeb273b86ce23c527566f741aa1bd51d7d01029860afad88960d9a1f80130633c1649e92668e7624baf85f234d1f464b837640ec8b77238ace6ecc82c41c21f0849d9e136485646ba8052501a258d9381424866a61a0bfed6e25a7f3d629140d23e2ec8495a7e9fd19e4f81bf198af9dc55d7ed42ae519ae8d45e7b14482e1437ba87141084aff4540c1094cdc49aa77c826936e567aab52297ea59a1d18b4300ff5f0966b84f8a58f78b8779a91a2bcc80897a5b2d39a56c5f6ac86edf42b5c81d833fbe7e96f3792c94f712bbf42a72ded5d4a93d695095adda538d1f64a3e0bed677ebecdf1c32f575005c76b7b2a5d4ea8492961a49d4e25b76d2f105e637ef89c3926794d6bdc9227d4223615f06ecfb053b62b5f760e4831398df3d79d399e4e23746d4db16ed63113b0df357fb8413a40716ba87dfd1d5b6dc79818e3ae1eb41f10898962860316c9c7d7a8588d8a27900bd9e95035991bac2c2e8cc7ca92e6e072937436cefe4854c48a2516677a9e4ceae3189cc94a478f31048729ef5ed23a1fbf54ba4600396b3783aa93b8a7e6877ee6974bc8d0ae6f12e3f3ffadc6ab84ed17d8db1cda98274c6303bd9b7984ada2a5b35d0b6b1e757b58c1e4c7b9fe349976fe8e92bc102dc1475d04556a7e7fdef7aee3c2a3d1a74028b87d86efbb1dabc50db72c75113018f5b38547770d847164dad821167d7a6e91316f9e4baf7c57983d6075c0f78bd7b8ffb3d3166d4e149bda3b6970b6fe511f5d1d576337715357713c3a4e160fffac795527c7b7c01610f8a2a8824cb6f1b60b01910c6390aa210b0a56a3ace594ff1c289aa22c572098552146c0a323c361c848b227ed63cc3b8e7974fa2dd628bd140dd8cc9f5fb20dfc9265314fca83a71d317d602692591e6eb422f592ccb9a543dc1bbeeb19d74b220c3eb97735eb1e6a0526f1ad6435cf5d7ff7fcbda35e63d47dac89dcafba67e55f80b13559ff8dd563f9ceee09acf05bb9a339e13794661bd4bb26347f10d57c5d09cb515c1a4f8caf93ea9f37b6f86d2e3b36fbcdb5102009f7a8c5aa91d8eadaea6358d70835fc4548a5d0f8468eca7efa7e2c7004bdcd33db98fe28d87e26a835e7960043f42a1ffb91b6bf80e42cd24bd080416a92ea7d0d3633443328ea5907d07ff1c1387543b83a95bb092961c59cec10e80f2c10a7f99d4be9f4f196ca83c89cbf0bd73e99494cc9cfcda038c9005f9da56f6b86ca1f8cdd735d01547d8a373546babc53e97c49b3729831b25438e164283da9377836954ad86888287c6e8f1b7b5ee5b9e0f5a1245a6b135ef6def6f30903aaac59070f29d1c0782fa2a5ee632c229a771e796af96498f4cb4b5c7013c45858952108fed0cc77b87a1c37c4518feacf37b1a96fdd7bc003ed40647517ab381aca528930795a1ca25181c06391851d7d53b3c9d8591f319da0ebab7ca98bd2573662dd853084823b7f2c6e4da8b67650a29e49361ea9d0717cae23b7e57d8ccc95633a9f78a309d0dda0af00f078fe3130ce89d49a2cf5c3fe85ccf3311ac1b904e3af91f43aceee7def75a814dc95bc524d551c75273731e431f879bd4f888135bfba237268fe438ff116d139d0d5c89ae56afbcd9ece9e91ae820d19173f3af492d9ff0c1090255592af9e082d00f94519582fb78ac2c15cd07e31269aa63b4ccd7ccbf1ae4340e55232c21a2dbfdfed9ea36be541224b46dc2b269c11707c3e76033f850a51959dacd56f9b58e4bcbf31ef5fd408d7bb7032c13f13227bc7077882f6d17e3d58e32924eb11192408d12ed7318a418d5d92137bfa7cccdb27e61dd797d5b4145a2e95d0c95736ede3c127476ae6fd1cae64bab701acbbc8b7d0cfc07a5e16f9fc7cd27d3e0d640367e7d4a3658db1edfec7384a70af9d789b8ee7fc42f310ccbf8e4e4cd3119534137f30299d517726a7895d7459cbc28687e69ae965a00d47d55ef8cf5d3b489aff160d1fcfcf1cb8efe668d36bc65af0558919bdfbdc5c89ebd8db108f6772cb8a4e393f8651ea714d156fced4dea3b565c065b261bda3a47999b0315e8b1022669ec18b11fb2a522cdbb4b77eb9a12023463abfaf1245dc578a9159c3f6caeefa27fce5ed412c081e377c91dec458b4e73b5f0e8d7401450439dac14889e16a6b5f2b726a919c528d78ddc4414b76b41ef86a8991f870b3397794a59778760c7709e91b295e8e5138134c13d61b7c5831f28b2217e6c3b146904b07f91ac550084d9145d40eca911c8f735a1dd7e45f5f3513bf4c4bcc072785d951ce101bb7be6745b81c231129a04238ba27a9f54eb1d5beab98f22f454cbe5188bbf6403808ff5623ac7de41f90b3a84638fabad79f7a7c15d849f9dce2c3a49079bc85c624a4da9310f0493fecd059bf1d61111d708798acdc97a813ae7332f2a3a57b7ab6bddb3f88411cbb3970ad9ee919c6b70115ed0dbf5ae19f76e212085d945cfcd149d97fa8e8906e3d18d3f478d8c75d5c6af8c70bdf9e5067cbea64a3a105f722dc9dd5b6b684d621e5b3d91fc779c238680c0de76501c9370b1749876342b471a2a3af8c23afac65cd38cb9fe5cbd716d17fe5a43708cc1500fd3a73a8860b2fc11eafe4a12d89a092b6256e6cb75dd10201bf3b1ba51bb8778f43fbcaa411e04ab7dc8d2b50086c17b2d7f2ace7f9f65f21846b7b74cc45f2d4e4f81412c67212d6d22f2fcdec4dde04a263f25e2aa1efe89903ecdbb3c7c9bdebbfcfd35fb284ef02521b7d251d43c46bd0ed55987d74e342d6209dba45c9e3202473524517596a5ff840b8183b8253d4092b77ac8fe78319ced70a20950fda9ad86f4df60d5507b9b75dae2ba5d7dcef52f5b66c2c688516ee82d3dd9f554a5de4f57e1f5cc1fe36dd4f7bda32e3416b05537743272106f92d6f961a6a3f0ac4602dc8cd6383931d04b714f5ab11d4afba4ab25b9385de45731bd7aa7a7e0f71cf76e7f761ec01b818d16e14ffbc8203c065e3811ba4a9694675d7fb0571dc890a34fab7be8b5298a88ea27de967daca5e35941bc26ad261737a25eb0435fbc684991b2c292cc4ba0fe2d5b0fb103147e9300232a3db656b180666a61a44ad295a260582edd6875e6602ad5c5bc1051ee864f9c1a34bcc80dabc0e419970146895027d7f1243c1e7a4701a79bd9a594e60a25cd22f9f0e38396f4b9e3160c1fe5737cc6d1df2db52c1b5e21f83bc41a9a920caa23a68e710ab932f78672101b15975172601307a38353f405e66ab55c8ade25ae9592af841d3712e1e858acc4f49ba90526b9bf5527c91ef0b92cb456e63fb91a615d4ba520156d5ee59feb7d955ca13842a90af117bce35cd14710e3ad06e2b6ff89c3a9a867ff20aaf1f478d56999c761002efe6826c530a685f06daf75406a01f2107931d011613b64c18bb9e80e7be3fec456e5a92121c4a6544da6552eec0f84606f645468ca762df6c4d465f118ae6d1ae73b4dad73d2d54423a98d76a58b22a6303cf0e392943d5475c77f59103f8c36421d7b0113208dfc5ffc264df050016460d79548b9b83cd42e674fd58529955ca730393d4b69ba196daeeae8e74e680fa0751e56a32739cf04657263e996144d0aa09c10984ece95db91569b88996e9fb49e37d035b5bc31bf6a932c4963aac9c22f1ed2c23191549b9f0998ae0287ea0af59244837c666ef9e004485decb79008934ee3b0fb8ac0a1c1d80c43185eda7beb8fa3bec3041ad238b46192bd1e37273f7a1ac35cb36a13de2c288f1713699ef015be92cfdaf842457e6a6b2b27fb814881ffb3996f319086b1bceb6dd8e896325dc812114129d4d3f436d138672c968f6421bc4d900baf80f10fceef6a98a13901a9e1bd0e2a24d599e24b9cf9a1ce4b459528a869545c45d7335416fea1d8a8d0fe05196d2e65d08daf747b2aeb49f63832b3d2bac722d8ec17d64afd572296b5792edda74834dd093d5bfd6717ad8374644f2de7567cb2abd6bcf1cc0faad4a223e32ec3fe529598b9fc7406d7ec1901fe97c08f90067e4508aa1146980d438aa0adb48b592fd5b402e12f1556fabbde37a74e6cc4c641439d1dff4150502878d2b7158b1d0a4c53ee4fef23af81831581349bf4eaed8d6be589b36b8bc8cef918eadb7205aeee89d4be29a5aef8a5c51b96ae3d230dc0302ab9dfdc068105a8d123f4e1f973322d8121d81388935249a9bf5e90a7b5fca406cbdebfed30d5a9ecb4f5e7f8bc56f73d368468ac48eee29c6198221e191bd6824247216a81021b8d40777c9b45ba210033d297c3bde14274f3c81d7108b596353d004c75e0121d4689ae258d8870506a6c426d3147e722a7aef63c1192dc4868da9c02ad1f8f8bb0edff9a766c09b6a20b9ebf8d312ff69936c8e39896b91bf7651697fd3287555c5676191b4585bb48db7f9a220f05160f4e47408ce81e5cd3a02790077b6a0e4eb7c188fcebba13430045394b4bbd9533af3cf867e209577cc81fdc400f7dab78039bdb455734b1547fd36514c5c07d6d540f3d2e2702526b571d9fb2de37d36f588fdbcffafa5337a52514f80819c2ffc0d50af8a7670b5e7fe01315e646e942f3bb190c100aef2a0fbdeb853962ae7574a319d1a35037aadc6de292d496d340054325ab61e5f0284f304cf3377d64ad4598fd7a52d8063a8c3439c6dc241db6c5937ae65ef9981067a9250982ced5cd141bc6bbeef8bea04ecabfdbf87b0aac33c1156152ccf83990fd6f5221e2dde981e06be359248c98e6aaf58607eff400c0000a5faa78fec6fe442fe4f8e8ca68c77b6bc73c44b8c1a7460e3e0d668eb02080f29d96170881f196292e60dfcfd5fbf8fea545820c79afdf258b97d9648ebb8f2e13ca446b8aae1515f400f385d56c1dd97f3f26d2abb2a5183d1a426d697b0aa4bf3410e689f262d0c0b647fca80cf44b46afe6c8b48f87c62d1896053ae22231d578a493e8f7912473f359f9870d623c4553b61781c613a6ba3cf4df789ea37ab888504ef5088eac810d158a6783e6c4909afd1e55d342d6ad135040cfb97d33d60d734d29f7f20e2aa7eb7dfa305f311195e016a24e182c8a330d5195f0a609304de8bdfc0a77132bf77bc1bfa8e829090dd94da99aa1f13e48212ca75fd2c14968af8044396aa60cdec2dacb0b6f54d73537057b6b18eb76ea78ccd26b45378ee888119ce18adf4abddabaee777bc92e630e40a84a65ed7eeafcc4a387788b3121ec1e342a9004570be8c9d544315cbdf86ff2a23731e91c744f721eb1afbf76c8d27c897a17ebb2d59c62368117d4a9f6e3f14648ea08441a3529f5983146565abbd2d1e6ea152f6a966e2eb0e4eb6ab7e9b62a17c8dffbd41fef7fedd53eb486469abdc5c5adbaedb3ce21c651ec35f60b759b3eb72b2fd9911e3240792e5519f3baad5555d54c2341414fa0e1c7ff8121e51376e42457714d8bfe5551dae6af51cd52614717125ea5967ca47d72428bbbaccba912064441ce52ace0d609d860f11e1633b94669167d4ba83adcc9243cd63fddf44de1debfc70bde0d8f34ae816b92e71351e4ef4ff55571812a1704dc979f221ea21082a65f5fc306349846b7b1fe826bf8be5979b51de35ba49ecb32810d8a48a0a5514f8ebd4a35c5c0428da507985924e0e258071463da112d36d8a5a89196c8e1d3bb378a778e3f1e3ffb709bfdc11db905c210ea8ee036e20d2e2d4ca98c9689e0988872ddbe181f149a6c6356341548a8c333e4670ccd899a4b62a75d42e4da4d56f1827bc4bad6e6e0e78df3d396d6e8c5f0cd427160f18bedbeaa1c765844e0043fc19872ccda13e32e70858292a4ecc838593727a0fe75c8aae462c8c2869769296892f8e08919f099ab9fdd75d0c1e55079b70870f9068a2cdf4f1ee4e783a4d1078b63caf67c356ec4ba1828dfd6ef1dea14093fc65eca58b7947e084542996d17b8ff6cb2dd026447b6540a29a6518b1a96bb0349b367164088c7abb0986ec946743ca03f36957317b6b5a71058c1d1827d62097a803239051b13016d275c8d763dbc5f000dbdf7d02d89ca4f93a4b4cbb8e449bda4fddb12a943afc9f8cc7f44235f377b19c8ae0bf0690c941eca620b113a8fb0152361082f9515977f77a6427ad976f9eafccc35fb2267867161cb52c66e981afbd9327fecae83f2f7f6bb1593be4a28ee6d2b4b1ead360174e0eab17e13afecd7532ebbcfd4c2f1489a24e7c18f74adc8157b35019a68d2aa304083ad9ccc2e629c1fc13b430a4b10dd110cf2316e38d4ca767375fca0c35cd6e90df35eb5d672f03046b825dd348f0a2cea8fbc8753f8d40ebec2f3d0be5bb54b2b0c8ad7ba8bd350acd93ac650328e038ef69c085a4f4f4676796d290b0f267c6a4f6b451de0ce9b44c4c2add6c7dedca0e2764a9e438a497c0fb3970b0c31907e41d3bad08fb6b8022147483caca63878bd7aff88accbeede0e82e57d8f6ac12e33fe78c2c7169c4c6671ac9bb82c067e8c020213c800ed8179b8bdae4131684d83270d120a599f1f9a01f08558b8f86ca8145de369b9e055195f4691dd7cacd6d96314183ba6cc409b11c3123954149752344482be59d941523b2f16c525ab6a322b94be10a299cf7f40f363c51c2749ee84fc1fe37931e96bdad57b645b33764df419ce41f2f8539cdf2d8780a4e50c7d1b8f0695e80661472790ced26bbc8d85d1ad873bedddf367079d893640f0bf6a2aea6da79e264f28c20a39a022e29d6562593bc2d646ed254ca7e17def4f76a82e466995dea9b07b9c8d01c4eb9ee1207329252663402d84c26f9a4c2d3162e99ed8c7f8e8c1e572b5019f6a92fd56e14a4efe537fae17f5f3c33cee82a126c157a53f0d8d9e28174ba72f7408a4ce1cc7993274a10191fb10095ab8cf687ba5271dc5a8f2f7d24a05b9881cd8c89911750c13296d172647c85b322ad295e497e667756864dcebe4c04a358b91eadd5d43c229653bad90610e0d5a965625ae3dda7cbbdfe568a09d3dd12d96ee247aa476a656a3589d5137926217723a4cece8195d7f857aaeec06b6f4f455a8d6b2fbac2fba3d01c486e6181eabdcb232351e8351b862f656c4bdc5b07b63af1b76cc94cb7292c3f980652fb565d99f0b644706c02c1bb7aaad72336420d9ec2912dd851e52b0906ba3c8df1b3de790e49f3d38bd9fa0b5d8e4475c037bb8a55f2e13bc09147405d5d624e8db4bea4ff4157315d61f4043e7ddc50e1a0e2b9ecc94b5ee95e871088bd81142d8ae7835a1610d73c3ebd7dbc7a0d29f02e40367acfec8bca4bb045df886ce234bb59e533017f650cff83477dbd2bac75e4f6df2543f084520e212c02959887139c81b930a13d6c74be48f9c894095d9b50446d3e733d5b875d955e89b056eea93a9b2622ffe57488926aa9826488078e6f0f03459c9653e1dbcdafbb3e5a2111748eb497032a3f8466d2b9e283f57b660c517830c3528b2b1ff13f36715cc0a1961d5676ab2126c521492a5458d6bad2ba37796e7484bd2201977f4c74808c3b7335f8f509da7a69db06a6bd172cfcd3fa58f0280ee6dfce21200228f18d3fb0f02fb8aa2b6adaf4cca41a28a927d030420bb2bbd6a0a9ea49320fe3e56cb4c1ab4fc6c12b2064c3cf8c872e020d6427fa3de826207837e9c7f4d770165b6ca8859105e81b27a3124495bc42928bbf451e8b359b80e42f3126427f7ac8475020864f20944ec675b1b2193583f2f695e0307783f6c43d9595184b9868408a56779594315a31d8226e1f208d145b60eb505a8d62829291422d91cd1dc08a77163f705bee9e7c9f487cb77f0ad8bf31fe49ab37a207c5f6c98307ce96f424b775a87fa94a1d0b282c5a1792d03709c10ed443178bb789de704f5ccacaeed8627e0636aa773e37cab35b4b9abca807b03d56d540d581260811cba0e9ce1cb83163d87fc64201eceb5554fed35ea16b2e68f1e37bd5db7b9e37a845c4bfae79955b7136a2a8f80e655d8f9cadc38248f316ef3bbe48fe8750ab8c88fef089adadaf697b2be3a94a84f9e711be9989f6f2059f5bbdaf48ff86d1587e7076b1818b03fe0fbc702e3ddcdba1ab38da6ac764c16e3b70ad67a55661d9ac5a88aca13ea5ee32217d64ab1a8f47e3af2f14389c56deef324d5fc353df89431c6a52dcfd3ed395e84fc447b72bbe3f3760d5d5220e169145de516bcd8d232e526a754935885bb7112c6945c758373be1377a67d9b8200fa6b6216ab8786c3c9966898a598a8045f972a9b61413b9b109309e84f29dd88511e22546de5829e3d8f09735a05167a9a755d682fdc114df82915a8a030094294ff49b6fa1075f53491bc471fa89a76a7c0c286bbb0c77ce08a60e489a06b2a9f64df13dba27162f3fa494d0358c6ff8e3a26eb8c5026659d10e4e8ce23208d9ec19dce446165de0272df8f1549d0b621ae176fe44776e51622438b7f79fed1780732bec095a806ff745b1670e1d83f5c82e346a8d636e045405ffcbdff94109513b8b532df5a139b9e3aec579ad2e941d0ac490efc009c435b48c8d57d48aa2001cb46a40e743a2cacee0d9e8e0cbc823a550709e78e21e3e443414dbbe6e1ff028ae85a28a1bc70893231bea58c6c237d09443dc63ce438eccc43c71aeb52455c16b4c5918af33f44bc350c795b418a8b2cf3dd5fbf0706dd9477ba00a91335b91c8bef9fd63d457001c11f6f28112ecee12df31f7319f1a65ee45d8ae2b86ba0b500253de7a0658a672cd01d20b6833b07f6150a18132ee8187fa973417349a1968df138c17483c6aa6fec68ccc59bec2e0020ed8eb40c2d2473ad6ed7be055857537e10dd4559cb9e809e626a60c115642982651965f25f32a0e587da40f1c086d12064213698b8637f2457875ae65e6acc41bc79cd1f455f37ab00e5e153fb85f5a951276dc0969f1696216081c0db844f6df1d71afdebae4d75f59647b8c056d79aac861ea2cbf0cad157f117e545abaa6dc63fc8f3f9958f82aa78827780a69e0aa00111053a924adb2148158b573917ad76a32cab1bcf2a39697ab1d245e5dea953e6d9631d6a3624d981b674876a1f888d0a52923883bf084a9cf6332aa7f6bb72e624aa3b4469dfc35d828039df3aeaa114b9a0766b2748ed97a45f1986d37bac0b14022ee18e7cb858160e806970c1cfad6b3a90a0adea88bc3aa1031549017d56516bbf52b99c84652b3263a755c015173b9bc019b2cb5833784267f65323f5a13b1ca86d23494d0d40ae69b029b1dcee175f50b0ae9de04a5e4b64f2b8799bdbf6d3380dce6669f73e87bd09a92473cebf0e5c049b91812777e9158853f26ac8a96aa5c76b962ea4efaeff33e5c55f85b56e7f9d2cc92fb3a37dc7ae034fdda6f8b0f146284053ed10ad2553085feebfcc7322e0726b353c490d47254789d2cb0a2b0dbd47f6b21d4ca532f889064538a02aa4dce503a0231ec8f4a2c8445a2509b469a0ecca9a5e5e98baaebba7db3e479b8966ae183a190d9d871910948241df5d1ce80bc3cfb3ede7c5798f6b06cb9e965e7ac91052ee66042a0321f65af109310fbfd2d87187598a8cd3c28939fe7e0d1401f805f28d68e40df96f9835acc354f1e3b39f33bff834351e78a126fab08bec52d49af16ce05c86114797c6c341327b403a92ce5542b5266f0874d35f5092f63599c2f6c0dddc90b82d504d49565f08deb1f4aeeafe97f9c9fd4cb76f67d70576439ded010a598ccd3646004a83009ea2d5c757ed2ed2b6655c6bfada95ecd8939292c2669c3f08e14dd0d0d4f19589b902c4dc6f2d6afa530aee0e174d47a0f4504daa8eb7bb61f0e4b4b3168927e5be16bd7d02ceaec937e1dc4d25e4d842a557b1cde1144751b222bdbeb3801b2ed5dbab8b124efc38a6205abd033a825b33f3170eab48c8aa7991c20e9468b5086a4b195d80517ff7048fd5b2bb0b7b96cf13fe3979d20e0201cb4ece4055d36f0fb817ce9fd2f9413d729b0f47b79de1a7fabe215519026e8e7795df9d55177cd65feac134241af12f2d0f1e4c4e50314578de72206b31a967ccac264f8b9439b58a844f4882517a41fa35c55076d858300f12037c0567970ddad7652a5eedaf54169c2a4c687201535a782a8e99325d43eacd51d58906bbaab1f0596c72e4e327bbd7d62bdc1718533a7b5f635fd8fc37dc1ece1e239554451039803ada9cc5e6124cab0ded22c53d1a497a67bb442b4fa40a6c01eaf3b007f40568d5a5bac2a36bf331a7ec1a6f289d87d3b12f982344e44d0841445d8cacf34b938610554438e8d5df738c9b72535f51b0f4d93d0730ce37caa18884e4f80fdaf4aaa7d69180675c080f0b5907766c61ebc2e325b53a553638f751afd81bab8d272338b40aa1c9ff868727f23630fa93e60d3f5e12ae9ba644407f2b4ed4864576e6940439dd78ea7a3ad24471c806ba1c5a2ce72f6e91d28ac1176fdeaa4f6086636478fbd1ca5dccf2392df917e7c6338c51c863c6ce303f6c0d23b7a10d4dec0347d623a5e8c606d6bceaa29772395c0bc205734d9be9552f88235471e1e9857bc7ae7f4b544911503adc787ff9a4589e448f18364b2e745391a607f576a36bb980821989efe929a2788c7dd25e7f7ac460465e4b125a4ba3cfd809b21fb90f7a6e7e47ad4f59f8d60da365dd2971f9b0447eeaf2a5b9fee3eac9a4d04fd0e1aacb1ab67d8f81ac7143a520bc0baf889e8a4fa545a7366e2ac0ba256068c81e5f143e1c0bd77220ee34380d63a000ed8ea6f93f7e3d4c532b06fafa64c652f18f2a384481dd6a2f4df4a64c88e4b7cb06f596c038fef4dd72148752f52f5b55b0bb3229e5561cab8e12a2bd879ca6f13a6d505d487a643ca100374d9f476b48c5aaf7c606d50f47e73a98d44b5bc0d8102587d33abb5548d4df185ee05915f766945e54467272dc29dfd179b4359fae3e72e0499d71c0865382119493915a5a4e085fec43666c5ac62c2d73d298eb6b1071a1b4dedb55c8411d87436ebb8f37b0f44413ee986ceeca597549440e7a1a0cf61ad8c5045c33e4684202e739b4a886bd2a8ef7704f8839f107aec1086fbdfd4186e7346f0f973b2a6468621ade980a0069cd1d88783f80a1a6d8b7686f5eba799af67bbed545984d88b76abb60775a6863751dc65e4bb0df0e46a80ffa5e56402ca42eb10536840c05c3bee8559b6fdc00e35337e43140e7eef78101f904204bbd80931baf36740f85083f7eea9c057f35c2570f929baec94caed3c531f27929a389767f7aeaeb0f26661ce02c5f2a410319d80677d46a099bf526bc303756599a244c7ae0a266ed8d03e273032d7b6f43dad013ef0da8d2f7fca012210644e1374234efc6fa71b30fb660517575f8d749b13e7ef07a204133fe3d2838a6a4f3cec3f18372de84a510b3a8ce51eda33b9f80950b281d5ef767e106d434bbf2e34fffaf1b59b37ae9231422bfdd44ca50d483bda8b186ad29607135f4651266f61dc1c4a1f47b54672bb6854712a47ced564a6b9d96cabb9bd8581fad8050d7670f532b03486f4d3a9537714997a580206717db3911f28a50c1bbeeb26f8d97d850147c7d1bdf7ae44087f296c7c088670d95e2f0d6196c0c5b5b7dd35bc94901353e163638c0c3004b15eb6bf4a42e6efbf622dc3b87349d260e49612387f7a57ef5ce46512f6a961b3e765463139e4e9392d317d15c5f91efe95410aab47bfb24523db614ca47ff8e009a3ab65c23180da036b3a913dc5d98f6f7e2f2e90a7ba616d05f4be6019aad18945f5b1b78191ad099c3218886bc2657b3cd17842e94c7229321fb84e7a6dce98079f51485502df9f5ac80ee0e4bb745d26097631869bb85000d71bc154d7aa1df8903cd4d5e4e5a4cbc77c6c29d782d0d43e5513e7bcde5b17228aa6ee960175f5f065e9cfd27671fd8e4af6afaa6e5800d22bdb5ccb937e766ec50888d50754435199782f260fd86ca2e559d262d4c22a96ba88e3b6e3ed527083b275a45d38b5b6e5ec05590eecef1fbb10e74db59b5c65db2e52a49db7404a5aa74ab1268dd53081e03a30a08d35cdba78d9b451628af4aa540be6137613401f3b28d64b68d8ad6715d0459e0c4c0481cc18a44facb4b0c4bccead3defc5d03db45714850df55d1914117a6ae151251c38e1952c23e5d619a9fe9e238a9539790bc44c3dc47a9b60d9e5ad26b4dedc4b957912ab1c7dbfb7310ab69fbc944103f2580788b560bb065a4d5048e4a5fe38fa3a5a1c69c0f9b38275202b18d0dccf47279cacafa8f6607b7929f9f1a1f56298cc7710c3e3872e6f264ccb43de2c714bf439e8e76c9209d0645846c6500c9f5b99534532e5e2900fcf05bdb0573ce5ae514896f2e7bd3f89f762adb1df4bbd7a09a975dc09e6fd17c76007ce4ddf6a30bf90d25f8ecc05dbc70c21a0d2f632b3354fae6872a2871d4f98f664462709f0f17a8e84dc0a764b1bc6f569f96b65b26d26b2bdf3638a7df7d9d7ca336124bb4d987eab2c55c26c827debf243d54f4e1b315d2f4388b2528071c6bec45cdcd77c1d5ed2a7188e4a2a0e05fd86c581d5c473aceabb25bfbf7915dbc51f409c4a0bb873dfa7b49c1216983219e6a3cfc26457ab887523f68819b7c2dd2ed6ce6d9fec0d869d7643693806af473b987323f10ac68507a34819fbdf2af4e0b4940f19ccb662a25962d96bd22e7c18fe9a765ae92959bdbda581bfaa5077f040b8ddbf84ac0be47fd13c944b3b93209626a7c343a46eb474b135489c517f5f4bdda58bf03e4f6a9240726d60080213ef0d347d6b82552144e7e4cd00017064531fd6d61d4a8eeb5c9f00fff4af9df6258851e0629134ea784f91de002a7835cd557fb5dbc86936847d48aea935c5543c723cef8a5b4ab2f28f077efbfd18a595a459d0791debe3363684ceefafd9098fbf204e524b537c80b866cf2c32c588714a47e06e3fa7c16e80c72ff89212dc43e970765ca109392dfa8b08d6ddb40a64af70b51a38daa96df7146ec4c3d378d254c252dcd110444eeac6fa163044bac0670563b99e69a26df225df4b0cb737a19125e476032fe8dde4bae35f2c7169f71039204dc69ca0182c11bad88015ffd8091ac2814f26a986dcc9745880f20089df79a23e5b48000c6002454fd4f8ffae4b5fe648f201313d200299cf928c3da2c5e60d483b35e04f5b0f7344ccb3cc8c7ebc080b8db0f5fc7e5fe6f8d1d3d6ae0b30159d32f695cef277ae72be687e091990e26102f4604433dc52155eb14362e478f6a440f67c566f919018f05aecbf688b6c295f1e76445c247ca6571e24fda366ba666311f9dba3fa6fa7b4ddda77ab9a15fd9e8bc970b4bd34d47510844e00ceb49cb4aa2e969639880a7a68d207f80b552167176733a885d81505f4b6622e5c493828d032ab0e42d2327ff2e4840baec3fa0f1ce553a0f05b9f5c77d537a8dfc5792a041b1080e8d00ea5ac492af2d3b5d016d5a7e539997985c6ac0d356e91bd8c9e6625adb16cbd50ef64293f19f35ba1bdd5e4d118b585a0536d619f5c57ad75e08b0ea709e610a65ee45cfc52fb5479d67bf785699ea3aa82f3a8ebf35d20253de981f5cce839fe28e6eb5bd848962f1ad048f179756801ca4ca9492d79dbfd3ab43ac7470546bf5b3e2bf156e3d116589f378098a450b2a5becae1756584a63b92a515c85649b845b4256ea2da82b0602ea32080ee2e90d05de315c928d080fefe298dc4a2d40cb446117a8f3ed4ae0fd7c2afe7a926f347b73e8645be242bb493f099694ba1afd4d8576dde451e721f97c45266e3c0e6403001839f2e8c5a9bf7224e7d7c209a7c02077d3635e7b5fcf4f519f823eb1175a212d56d5ed8300e78cc4ffc364cd88667b8832e03732561fa7668fdeb21739b9e3686a516180fc4b253fc879e3c1c5bfac683b0c51e7fa770e561943ca8e3360571c26eb9dbbff7bcb24d68daf134bae3fff58d71c3464ae50c6e808e251adbe53f95f1a39b7b5fabe9c100842329576a8ddbfabc75468d94e2b5510aa583b5223f6be9d1b6b2d4e288513d8ea654288246d710455c7365d44825e754381aee9887a949dd2b1cf182e1d4b3ee37366606c7bbab994d9fec3664fecefcf2528bde7d206bbb64c0f01c7426ef2f34d2eca1de3b37027f87136399b79080a0a5f3ddaa63600cb3b9f78aabe2f9b958afc940895403d7c5059147f562d0a80d1188876fb62986f22994b7101dab6af40b75b8f29f1482ecab551c099c55ab74f288e57858a6975230e097027090883e5c63aa7239c90309bcbf48a544b0673c4f94345a76206689d6eb8a4a2c01412dd167b53c7e1b54226335fd0a72007f8e5dbdb4647cc52603d0bda21a4305121f37f35c884ac02fa7bb2fdccba5820a7616a936441ae7b9fc3261b3cb96a6a37d9fe4ae3e511be3a616eef0fe95abfb7e419b538325d8828731569416dcba459070b482fce5d88bfd1210fc9bf4a9a0bfd0c3396c9b31e853218f2ab2b2c5e7397047b6b355d1f59685cab0efdc8873887acb037edfd4f3484722ddf3001ed3f9f6780ef714be40d729e57126e19964eb804f157e0899df06ad26f721dd6e95899f79e0fc5a5bffdb63a97d2d3bf86418a5ef11013b92599f7f2ff57a84863836b1a70c520bc7ae368edf8820d21d574cfc899b5a6ce89b63243836b9a8e78721a60785f7f0bb0b592cc2dad6b6e8cbffb86fc5efd126e87086e138b0cb0af7e89d70867ca5adab2c8ec3d5b853b683ff3d84d5efb74f819f47ae3ba122ddc2e27165ed9a5cd8c26109b8b0e2f66831c0ee0bc0ce8b4f274119a9c744eb1cb15524d57cbdfe4b207865bcf543a8fb3a51be7d7743cb1359e621b22e4f0714146f3538fe2afb1450f75d0b8b1c21203433c96242c3a4d6705054087d746066ca8aacfce9999ee3e8984f9ec67a6e22150a733f138b7d99a992a513b5d552165580d356766e9af9cd54620a882c57bcf9139b8daf0c1d4e92095111030e8a6773b22835622b3ae4d07e1c76a82e70b42b87bc3e8572875b9b3af85575bf699ff3f17151abcca63aa9e21b11beb5b98450b9fcab54378c10b0ebdda88d66fe18642b318facebb2c4b2d7fe82f508d481eb6e79ab0d5bb467d9cb1e988300491e7b9f1d58b8bbd2c2d1e1b9a25f61137efb4996008ca395cb7afb68155edf901834d12010e6cdebbf1d09ac5c023b89c31b8e83c493ba4fcd1bab22eafe0f461ec4d29070a8ad4ce36bb22f31a4fde32702fe29814d56133bc1a7625d12cf72e7b76fe9058c3337056e1114c3770dee9b312191dcd6069b9dc03b1311578e426bcb0fbbf67408de1a74a16e36b0d4213ed2f0eab4918741246e209346eac7d2a81406b0f374a268dc59c8dc00a08f7c86a6d2ae8124dd1d6daec5b687c3fcd667cca5a459d0cfc1bcc9c1e82ec53de02266696105415a33b0b3466c842947768ac4739e80c4c4e4b60b284daecf17a43872395dd9c8b3d91eb0db98a7fcd40e6acd294e297b8bfcc8ef706708fc373dfdfdc179f3bfc801abba63b205bb675e59fbce12de6fa69b5ff33222edd8db04b3fd142870c818248ba7662b0b711a2e5201f750fd4629b3feb52626e82d9708c2791bf53553bbff2b3a13dd1499376480d7f17f8558bd05c122fb0e8b0658695b68590f0c749cb53a2d3194f36521f86a5d385d1cc730aa4e35374b701b5b0f08594ff0fe676ce40599e5e593cb40f6863cd6d4581eb620b43d007fa184466086e1a512c5f80ec4bdda48ca4d1057fe2bb7f7f5984393febae8a237b1cb7465293a3b1558e07b4f308dfb36ca47374ec4fb9644aa1c4c8ce18c8de8bb9bd42772b2253cfd7b27305b2d6a700475e17043b2583e64523980831f4ee0373b97f3ac8d482f11218009e84ab4ef417e222c86c3fddc2d7e285f689edeed19f00d3ba4614ca995a8587eb348394e71a2203039b8c9f9e9be525251d30643dd68e96a00196d54b9878602bf3e71dc76d77ec98e594125d4656ade7ed9201037c9d692141ea0edcba2831e37643e69f14602f2846abdec409d114a62611edbe942a6d558e6c55d9a779f7305011d6d26a4038dd3db92d79a58ff4710c1c9f34f3b6dc486579c63b3a869f90c6395cefea848694d00bddda2e132f128340927341a931cf1853950ea03cfe381ae193514e7f4a6af21c5b1f89279b1f885436c163c3e8e7e4cad8ee419ab74b6419980a39319d4084a5475eebcf076c4c7641eceb3f973d26eb07f0b23fc980c93e0befc34da3ce09e53d9847454626424f8906d14c7ba2e7ee913b12acb1cb6565bc6c56aacbc9d2f3ec20d529e81c61b63d636c0f2b997c095ff5c86d592f1819ccd66637607313c013a1cfe0541a75db42c60ffbccaadeb2f9b2d2030deb8519f6ad32d485e5191b8aa0adbab8fbc70fad99ec915b90dc1f1f7ffb97f15535f26d36114a857e516da3c255330c063a546fb357358cb4b128a39afa64ec9958084014499a7f1bcbc96984dfb541ebb171717f44a461e2c5864160259a105dc2dbd957f6278c660481ecf903d2e52f4474afbecdaaeaa3422c7e5d6b4acb47a220c27a16e8905242b3a81a7fc19792648e2913ae89adf859fef2d42f5e5618e53746447654a6c93740c43d789ec37fc8ca04644736e03da43ab020706fc9ba99144e81c01c10a857a9bc485bb0f41c47621cc2cd3dc0883b68638bdb3078bed0f9e86fad267f83a4b021cc9c90e088a6824ff24550001929afdd962ef13946d69db5c1651a44676e796307fdce1ec1069964c7b3dbcc1c7dca6ddade8b5720975f87a324306faf68cbac457e86f5bda902f842d16c287e905119810a8644b08fb5c691c71cdfd3ded5819cc058c687d35c5404597fcc6d5c0c612a2afe824b499254ef8fc5c48c29dec5a33d26b6272a31e94cf4d8761487632fa4c2bb634d3cbfb05c3e81522aec656509ecf2d44631f87f9e0404f826fa139361bc546a14dd0be53ea659cf3f031e5d67b822ce6d0e4e24b97189ac69111abb557b03c0b274d4eb24231154f656a0a7212a90dedf9b9df6b48f6d34458131318f82b1c10f16badbb6e85ba3bd1be9ba16bef8154c458d31ce1057df65c562d241d42f1f957120969d4b9b6a1d36cfc1a290f1b92c21295304cd9886c44017a449335126dab685087598e92a53f08c1380622fb7880fdf108cd5ea3919871e6ca228d152972c2e4c569c3943eae7c6723fb87dc21a4a72742755a2b6d321b67ac65f4cf804f3c504417e706b40f4fcf3681cce7e6da746f18a49f080e90790fa093bda4ae3b996ef1a718402bbdf3e6afbd846a2ff92d16cbeb92ec9a1ecbefc165982000d3ea6b75884b334cd365730f41e6a81dce1ddca5395146e3eaafc2f18da5d62f54ee54aff85055296d0a2b39873290f3a4224300e9d1bdc8650ca2192f392ea3a99f00fd441947caff767f43c7227f713f6fde9f32fa3361bc17951f5434d220539404e4510d223833bbc9861c8789fed460d94a24c070db29ada3d2c297d3991d6d1502aed07750f99f2f3407b6c11538ac2129fc59c5210dc9f8803a2efbab16743dfa5646faf9942f8bfe8ef2de80944832d644b591a5396af29bc0d670299c44578341c472b6797070038f6cc7d35144fbe6f33d456b8d32745f3c9e3e3b7a411dfab8b40028d9f60b16125ff5e6f8cc183f15e8505944bc408b4863f3f54df49ae57387dba3c396bfd5cf81d4d46dee865d5c842435deecd15b0975f4ce675ef2d456f4e88a8c501e451b2476ffe4dd13ad3b37b43794e3a1c6078083183d5d47cc598b8732e7a6f9f8965208061e32626b71ec93663f28926b4e85de1679fd5676c699a31de40b52a427611db375389d03a8db7d52968914c66dc6de030be3a33eefe66f12e941a1261e19c8c82736f065b13f594773ef9484e9678a07beee664e25c882067264520f2810427cce5b46428160d16310320b55917c6b6bba70f8745e42d9cb878def11716b9ebc220115aba5fbb9add3dd9573a207e333a28146da58af4627463cfaa275fadd724747612a0b117e1d8f961ae63df259fe02ab3caa06acf2a2335f5e99b319c11fffb45ac9b844095070a5180f77e135f15b1f4b5183b36bb94ff31d807345cc2deda63fdb8e0de032fb5b6bdcd7974f45080c7719da298a6f771c7fe91580c335fdd739e26597ce1c6c48d9f7f62f9569554b54b22b2d0eb49fadfedff9599c8acb490c00998717d51edf8404ab376cd7ac37ce9c8d6913d827504b6fe14d1011d53751a7ae910ae506db610a5ff5dc219e72471ed58f831b7d45804a97f8434e1ed272bf66b84c800a045e2dd1d9f0f4971f9212e1e9c23998f069dfcad1d739f2e03cdb56e18a309afe1351bfe7e584daa5f7d78530de9f75d8a059d98ba8ec719f939b5cbfce9e467084aad8d96be0f7f6f844d86753945250cb264a1d5d2f494810d84cacc154a44c6376f1d7a3ed7db46efa32c4140497c569ce76e3b758b33216cc02eb2ac6fb6a70cd0cc28adcd2f0f4cc1fda498c09fb301405b1500637b2b15601efdb97494c800983aaf9b020638a60bd5d942cab9df9c8e3cb5b4157c4a7a1a0919b6d57b117b8f064ec4dff07cf617d5c181526cc310a435d865ee6f9bf6c8ee214b7b2d31fa474374ca7a473eee039bebfd74292c86557b676c6aea869f15219992162b8b28be880926c1d670a65409402f79867588e2fbac45a1c8f6fabb7f32559b6835e84191767faa8174c513892169f5ef0b865cf141d98d6e14e9fc15414ca246a9542617897762b18cf4babcd02466d8de73453af5be3b59d2679a78b44ece50af4c3877c0671fe25690e627a1a8979b5a51923ca77d215b9445359c16dddb40f10cc06a6a0003fd602d581b19e18a7d883b005c0cd20321d256ffdf8da0521b8458b5c6bdbb546217490aac37dc00572ddd856544ebdeaf1b86ab6b051fba2c4d4cf7b5ec8fbd641a965d41e15d8f3d0bda53688b1bae24baa2a1162090e54aa35a23c4b44f4cbba69ef3f91c9b136a7a705cb4e6827db77df40a07fd0ed99447fee006d83d9cc72aebe921a4ced471bb516660bba15ece64332eb84e6f61f98300cfedc8dbda108cb71fe7b3b4764920fed7ecd67994d7b362dcda0bee43e160c1687c9ae98f93c1167638651913263b8e6f83612df7103dc75acd4187684c2cf86636346426dd8aead171ebb6adc96dba46555914e6a4b921ff2d025870f3c39f6d04d0dfb372b18e07f657006e144925e63af7a69374c4bd6a7d6869ba92b0912f5368664264f19f05380ae49a41304e220854c970089ed1b51e6c673a7015fca2f2ee6018d993f1e02e8e85d5c12a80a07b1b355eb239c6a78ef9f9a0a5f72e8f759ded342706e3f0a05eb5a604e8ddde2d9347c4699ff74ae3f1d06d8953441982a336c95a883774aa9331c6a831abd63e1839807b9dd81ba8cd2363cb1c1f9767eefd29265adcc98d5d13e31e8c3a29b61c55a4c1a5c1933a3bcdf83c276a8fff8f44733f0a1b594a496957fef056287c8aa83603fefc59c6a478de9aeef4ad8667cd09ad6e10002c193d0edda9cb69c6962e15cb86cbf22bbd9b35a347306e1759078e387b0e977c1c95184726203a24ebe67f1a506a74e9f361869372ff24f9530935609ca57dd49b7ae4e96b6890c4eed086f05b50386a8a2f96439d295eafeb280e66f31ee3e1fe83dbc4f8571292ca89640a3ccb7a42e069a0448601f06c154c06301eee2ca120460cadf4d3ae3b64f098a4cc14008feceb0f99bcdba201a5be6dd20bd4b6e4596e39e2a006e6b7fa7451494b49fa4bd04dd47d13e53c5909500bc0115418d0665d9bbef5812853648cee3e7ffa25f86f6678075e6fe3eaaf783166568399612d86b3ae35a56eb5290532bd452545324c2c6ce266346a16d4d13061c3d613fd47ebdeed381b1906f9507610ce57cd1b11f255c7656a5eb39f52f5871b3a2e3ee8ef849fed6e9d99c5a2f7e761ded7135b0179499b5999e5e295aadda2685a91529f9986d33c4f65a6d307ff913e707518103d8c5e896803ae955b444b5aa3d60d85a3781119fec98417e46985e57badaf75c1c1f5f79fd5298d64f3829bce2ee40824fc2928fc28aca54869f49e4df5cd762b3b949319e41d675d14f3c34dc941823b0692aa3edf5598ca61c8a053e06326e29d19cb1c625ed148bccc93541d74722c88d1f26e822305c1235032a4fa4a4ce3b15e8dd1937244b54e6ac6c3782dabd1e289425ce282fa0796477be1923989eb73f5ddec2c38554ad29cb5947c428a4c13b6e84f6744316d0a2306ac8019f42842f2a10268fdc68a407d0a4d3b04ab26412b44d165aecdab99fbb25f78d0d1460623f5f484b1ccc7fc818b90e1e64b10278a525a27d6849298aaaeb6ef4e4be765105518c4d14c6317c831d97346e69f31a8c513f11a4f85daf44e454d29ff8229902c767ebb00985a45f66492ccd5940585d2fbfeb57fbde0b55ad7cdb59d0bca4e2b3bdd85c39db31b23642bee3c34185f6df4033e672f4a47d355bc00b03ce5d1bdbfe4cf4056031a1ea7fee9976979654aa113e2b207be572fadf4be8c03f7d1842b27c766df6a09b553709f7d5e2743d66a882513b521322e8e22123f2c6a0f0b2af2d10c2231aec06285f6acb40c054923d7485fd59e12e9c04cd441270d23893786e3de50026f4b02541c69bd75a2f3693a1e926b5d1eca702cc52beeef5a9cf8493ca39ce4025043b7d67d53aed9b6d77cd24b38fad8828019105d284cbe1b4ec4c006cf9c3ae272e33b35012aae94001f0017fafa38d30815442ccfd4de26e3ee84280400c6a87246bdba7e750a5845bc9708ad4b81731dc608d64337ba533be8929d657a45602d4c955484d977c10ae6982bb280e5e4071a9c643a42accd67aa2c8a04eb364157b89f7324eb4e34e4020228db76906eddee7300a1f2e81f65605dc18b294ae813eb32d040ed5ef28421cef812db6ce893a1a59c53f550b1f75fe2b2fb43da5b799367b883f26f2db93d00b18d5ad39f17b5199a86b7541633d4b893b3e3709f599ae81e1b7dd9c02ddcade90792510cf89230e5202088fd73c84dd06d2c3b8eaac3ed6d0f9dca7b54fb21de2cb24bc9a2965e9ce384eec2ed4bba4c0c77bef988d19310164feb50e6db131c99506d9b3654502e719f81990b3557d76014e70596ea911a39d86db917afcce2b180e2bb8d1f37a22446be33f9bdc4a1a01061a09c2eb6d8387c85261d2932d95aff9618b4acf8ffcbbd9f890138798819166ce3330e637000fcc6d21d382a035d83793fa252fd1ef90989ca565ce5edb7a0d8d4652c96891bcdd1c55b6322fccc6bb780a8131adb7c404d267b9c600f7038b15e08a1cb610b02e4f997f8228b8b6f6143772e1a882844f9aa6decbd21a1a3430e3d3eecb92ccb86307012c9db3864094aa199fd8bdec9122c512f43ce520229a95256635e95a6a5f4a75aca3806b43f5fc01a48247d4efe4dbc1e800e036a1991249282cfa2c8faed9c72d24cc553c5643c86f23278e4472a3b4dcb4c631e0408cc93914bd5cfe1e637975308ea875986006a79cf5223d293ba4daa9b12afafe20105deffaf85f4272003c2351c70ed125658d37f29785ef669296f91e295248a2fe2531d433348384254ab2118e0f764df71b5d504ca256d6f6cb33c1780628ce40cc2da9c4c09ae02e5a6d7dca3eaa26d4ec21c99884fbe4f4e751165f6a45fd16f9fe42de91ca793f1e931dac091caf0d942a25774c73c3cf55dbd64465e24a80ca73e05f8c51830433068ed4e4573369fd1d2a3040822b5478317fd6ea63a80c771f65126f04a44cda8e343a38b31108fec24f3d38bbc028231c31d9fd46b3cd1e75fcc4d5dcdfdad9e5ecfadbc41d261d7053908c3568c0e2abd964b6d31bcceee19ca63194bf8dda9188fdbc871c90e01144b2bb0596609944c596e8ab484696b695f1d87240f3f29b4ae7255c3f577dd1496f80b664064f5e4d35cbf707732665e7dcfd694714f26fba42a7d9c4622aa0d0e06b72ee6b2db36b15c2101beeca5dac83bfb5df669e384709b02db087e4447c82fbf67f8f7311948584d79a5274cd5ca94009f531cfc02e1bb98e2dde011d049e785a5c5dd85752914e18fcb2dcbaba39563b1cbf108e5b0401c3118927cde0584e3d104345fd20bcbab856ddf54549e35b05e36d7bb13d11cc6bd6050ca3241325f69d7fd1cb237386e84d5913eed8f4408615d9622572c258131ce8f65a049af0249f783af837541227f5b5d55f7378625bb1b67ea5fe9731f8ce6ec50e695d1c233447affd12bdc81fa85d232bcdbec792d2d0aa93ed6220df9c8a1eda16419fe442d7bae6363a2e984e0867fc442a0f1d13b56855e19061314fa9d6af1b8f45fd2a66b8cf853a06136362fd52ed31450c49216a0d75aa0bb997bf9ef0e9f35fd47ad8fdcde8d78b142949509ef362593e69ad5307df35088c6292af62a3dfa55d9fbe176faa1a1cb4ac12cbae95dac80029a87bcab72260601b7506a03feeebab72bcb339764d425c4de69d6614eb8df9d67dd9eb0f581b6b3ddc13d0808973b339912a208540b7d3769caf3e2beae5ad84b5a82416ddf56c63625e6715821770cc67ca4645f6c8e0bca77ea9eea57e5a0dcc6c7cc5669c75b2b56edda8b72c269083a2931cd49ed98691b812ff2dfcfcafa20ac491a13a4cdea6e51e0e5b495efc53afe0df572bf3929a91b764b9b7e8a0ff2d3371969eee0887d1e1fd2b30e0b738c3c6058ca4c6ffe2fb326931a61b381efd9deb99c8e479c836816ea40acf49e2ed8601995a91d4be5da4d336682ca1cc7da6ca5c738e8a1f974d24277b23cf6ff4139d7717633742473b989b6588de867f7ff760530b1dc7ea0dc824dfe1b3f064f39080693040a51e0cdb405a735a813772daa6d1ef90c45a5b3239cb326ba2309686e4978543b8fed46e762db7732a67837038a0c97d5709dd2f03d2f14eeee25d165396a6890dd15c43da2ab23ef3890594e46db20479d294298596454c293de2b53699addc667445c7a424f1c677b81221510b2f2febe36c2f5eeb921660e0692b0ea8f27fcb06ddf86fb427219bc3951149a4c70a6055680e5dc92795804fc5e222bb90f7b6b4fa85c966a9acbc5b0345e7d6708adc2031f53a00fa9bf305c35aef368d7ae31966321b41f92e4d83650c59cb82766599f9e1b96f6fa52376aea0a9e50eae5246e12f49e61e46dda94efada83c99dc27a42ee1d44073251b82b84bc2af201e87444089f0c64d309a311e40b22f5936bb27ee1d06500400ccd949c2d24725c4e3845ce7991b34e6b25c77281653f54b41bb8c4c86bd9cf805ec4569ab53dcf0cbbd3efbbc64bae91fd272b7369942cf84d6a21a657c8d8549f87738c4784f59fb6071d79de37234cb99e22e150070daa36b5311fd3d8234d8aec71577477605759388251d53afbaf90e385c0470eb08699282756f7b69aa7642a0a3d5a71316ddbc1a2cae83769a1d5c856a175e129b2e06d22a241775568b8d883ad64489ce1e4a9c8a18c6fde30e3fe6272c7ef185b3c223063a4cee0ee00c66c8526ba07548819c4d226277c40f751fd62b7997e790e9bd9fcc402c24c8b97d4ef8e23662ac5d407c43d6831b7babcefc234e89b63cc4a85bb20e24b4e5d40aa3df4106f3a2bb31c95c8946e2dcefd9c5da55b7f4b767f9059326ea7efd524c102502a0a16bcddfbcb44029ce61a91fc8344d27f6d977436fc591be6f9cda7b386f7812cd5df0b944153b01750ab09260178f4dd6015d74035f91c2b92927d138f9e9c034a357c8909bef9528f501d14b6e89d89a7fdfc20a8ca9cc759043be3a5c30099b36721a781ce456bc13550155f6747715fb412ba6faaca1c35123c81b9cc70cdd6c6e3affdec02c010bfe635b890bdca7994a10f3b2552c5312a429af1c86af627400d4fbf3396e8b23a548a076a7009f7d9db8ecff89b7163e1e419a463951f5ef216def26ec0121c6a4e8a7db1d40494e5636bfca9b4392ddcce8fd678f68123cde7db2b4e1eb283a19a729a982cf7ebf510a80ac92b24c705116bd1d028ed8f636138acf88ebdb9f1cf9fc3f3821378acd16f0ea42be68bd488fba2bfdcc5c18f301f5243dae97e0895673f6eae603e927e3ddc0adec6582bc923f6f295510191dea0e64568aa4f12e922f36431c47652d0afbd8ed9f1632403bef350ca2b86ecb5ff07b36243a0e0ee6957d1fe0084c3053fc8550e1507fa054640ad97f402edc38430b0fe156be59ca224af576040d094b63994a3e710311f115be006bc99bde1565f23fb60347822559e65860cf2bce6633d8ea5a39bd02d542c0d174fe55ef8ffc292c02a5713fa7759e0d14310ba5e0fee5d00be45e0998a443d3f18e8ed0d752f8687d5b64938</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（3）</title>
    <link href="https://jgxnb.cn/2023/02/17/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%883%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/02/17/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%883%EF%BC%89/</id>
    <published>2023-02-17T14:07:10.000Z</published>
    <updated>2023-02-25T03:40:20.782Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a9e89920905218d9aa535d861e195aa66c980c5872573e1b3811c1fc751535f8">3e8f7111a74be2a52fa169d25e9f445fedd66e00890444e8a4c926f70839652383737652266c578ae134fd5b152077e7596824438ad9c30beebc317b681985783819176f48f753eb3fbe6187f42b5afcfcee51a7539f087b583c4ccd1b1268fcf3e27aa703fce95f95c251ab3a89c413b2c2b2823a9d529728fbad4ac0271ef8f593c00abcc5450923e91cc8da852576765de0f8702f47f3a767ac2e0b5ff0f39c409ffed1ba5061c38af483b007f3a574e61a3d8da8e4df65ee6aa08b4d525cfa138bb4ecabc8db8e5380e59b153808946d81f1bdbc9fe54c66e79a3ac4e7dbb4330a221030766e14a27a2c9b3828c6e98a6e28268b5363cbc701e0dae63fedda193149256dca7e36c639de3001b5af03df17865e5002855d7759a530c2444f226a081425fb92086f5c9284a6c0315412e1085207f27da582f752f5000c46e04d24a6630ecf718862a06aa2500075f95e8c001d50cc34f6998b5bc7dcbc21b804ce709cf056c51f0290fdf7a0f0f051608e1dfd149cdd7f0ce2b9dfe82635325fe413147fa6122c9bf65d15169ea9146c033b034fff0dcf27198b2fcf3ca4828db4faa45a86c7cf7e34a3cec9b1b9348c82c50e1aa5215ebe38bfff28ac5e8fd9f8aab056f9ad449d3fa7fc0e27c52f2989788f0c4512687dee5aa117d491fa6d767606a1fce2f87289115352932ac01297f6a6fb1f21d58caecb2bcee5c990030684a41e074f606f64be6db30239ed3da90a063dd4e99edce42461247088cee3f9c58c49cf4f4f3d6466a443bcbbc1d10229fa8feab3e65e4ac0f04345423c42fe13b78e16968b4dc6f7882b8f8630cfc91167b7f080b6968c60a9f1e02dda59a34f739a743170b35539b2af9458797d22c85ec68a349f1db958ed1edbafdbfa27c161059fc812a3642dd5885630fd97f256c27c0321cc071e49d7d603f2ca124e610c2d3b039d6239c460d7eb19d22f53d66e710c1fef35d87bd96ffceacebddcf147b925af0a5f51453d1fe35848226782a11457cea61b6ada192399facdd96a4e15cc745e05d0194579b7246c919202b46fdca3c3583c909ece332ba51ad6d9732fc2bf182ddd0635f08ecc3be5f3641bf88449c5b93e747b4c6898e68c9e5ed8ec23e1b00ec6183cce2e6a860368e3691ad3320f49f6bcfdaf2405a450b6aa52155b3940e7d96024df9b2b771307e612140806242ebc5245c9a0ca5c160f4d77772cba2ca009b012c8064fc54daa4a63740b45d212df793902984250b0b2f14d4a5c887307d9aa985f6f0ff08705fc04a7cb82299c51eece868bcf83b30ff3b4c3f8235c33dbb53cae4a4bf6f51b253b638e068f096b9fa5f746871d1ad7d572b328180b48dbcc97f77b055e205074af27c78947df040dd242a02d08aef375e42f566e52f8c47a6ef0e071667063853b0e487914f69b7bfa1d8b3530e50693cf96bbdec32b599edfa137832b511b84cf986d9b3257df86745f1a1362f628b3370186679e8c3acc36b3c983c88174292c548361079a7c329a32d744f93d20bc53269b124076b463eb9eff8211675b01de06070bcafb2b6017ad7f4dcc5d865cfaaa43e89b0ea258b6b983e6d43b71fcf36547396fde0ca540ba676331b4bac82c59d68709f94f62031c6215dd4665ef52fdf9abc6e20c9b8786205fbe0a500a5d04373203f646ae8855886c408c6a8615ae287d5ea8b009c9212310b2e2678fcc0534badf8878347ab014d8234ba911e98457aec9ea2a3dd71d106c35c63cc05c758c2c8a599f361160054365a8cf8da31c425f52ba788a092335e654c485faf47a8f6d0ad5e25d5aca07021aeebca3be7c3c630b972ad4656decaed4a2dc94c3d107520519bcaddfd3345955a63b7376cc72e216586bc9da4122f41ee8b2425bd5a80dd1e44f822ad239e1d7e31f3507782dc37d48d30ea0134e5ce54fb9098b25339806b3a98db6c55351981279d2c38e4ace29727efe277f1953feaeea8245b10ab827fbb14269dd7cb6bb7b51a446e574908d727606c3dff2da6e29073d4d9a960c636720de61a161ee1a2faaa2355b36f09f243cb5a7b5fe427f3cd475c21e86c2813d2224288a4132fcb8453897362f7e10de756b6e5094579d4503f32e214e7fb75608c9f63d1f3186c2359da0658e810dd5ed549d38e6104e9fba317710b2f44c94efcfa40b76145a93e7f3453c00570bab1c20fc0aeff4819c4a0d72ffabcc550afff63ad038e0c3f9cadd96e9d3d9f608a54a77179c1678fcd111795ce33608090d268815648f446efa7b1f1fc0c7c015d4bb731044b953692fe88bf4406ecd48843aa954960b7cd7078c4cf2e9b4dc24021ae92b7a1a848d7d66d4d82a767abbaf962f4e77e8d64ac32460b5234ac9c42db63673cb88ed5cd023407e7c6ef3d145bc2d88ee2a65fd6496998cebc8a178e0a5ace06a7d4916b6b417605d53c29e975eab2b4891953c348fc9c47cf89dd051b1680b91ea8da40182d4937bd456eb6efba0ca3d9c78ae6431f00546873e1d4e8b109e08de72dbb1a449e465acdac662d57d47b51d25b49a57f63cf443dce220459b3b39b52086aec2e22934b6bc58a516b93f4624e51bbc21da308495a2ba153b73b8eecc9cdba0311bcf3925cc91049c0db62b5e6b06761923131ce9b450bff078ad0be2d9d0706f0177b823ea91bf0c86a50a82867f50243d9c4947c78d4647e0dfb8c5aeef2b94b45d82827244e4e32b2346a1f78a23a7f60ff91970acdc32ef59112c68a179f19a8f2e38714ebfcfa31e4b43b1d3aee0efc193248d36cc24b529c82f66aa49778932015c62cf960dee588f6d1d137010a83b6286b54e4e94ead8b311715db00364bbef33a44733a85eff12039db9e1c84e7c69cfcbd7eb90d5352de76d6d9e242fa2a9ccd8020f6e5081a039e032d832d15a3d8790f9c710e7a59d64d93b14d703dfe98f136ce8619724ab07263f2009140270b653331ba83c3074258139635221d9a6f10bfd5c17d9851a12d4f5595edcd0c571f701f945f78e1ce8200d0f4c6ccb92429cec25d2bb999c9d2244f2aa9d4829c577d6f0abef65802d9ae00b938274fb99a7ac883cff61115c0759854614b61b836814cc9324bb275968ffb01be9dd1729ca911dae14a744eccc688406e6e498bd30750eebe0f5ad059dbd3383921141579b2fef4074bc2589ca9c85029febe90b91219c5c9f81b9013c9d589ad1db7ccdf4f9730923dbd333b8ed79ef9190d0ec83f8266b81c0feb3aacbc97d49cabcef6bcee19c5cbf1b5378ebebb66cd06fab1d3944bda975d5f894659c9cd4d192974a86edf64b2708983aff0cbdb87dbbab40b89ff81abd11f2ee019b6fda2d27b8f59745bd48c53f2d73dd0f25e9b687b44c2f25f2c44f85ae92fef468bc4a71a413fbe4da296f4c75d8a3bf3836e7572e182253e216fa4976a11a3eb304a6c0dd891dc5c0caa9fa70e0ab64753b7e1ed591e3e2acba37c7e0cf2de08b85b0c44e91e694fbf590bb561091d69327c37944edb0afcd1b50d1e7ead3a32cb5437711021d727bc3342a6cd9871068c4f5df3a277bcca20d799d44f60a58c719509e34889c58952857db1e559077d635956b62c91b81c4dc08739f327e35d2cae25d8a7ec4880e908c153e40032ff80e6ed8552968abd8cb2a1f1f66e128adf062b2acf858a2e219ddfb6ec951f655f269fcdd8d01235d892475961d0796fb3f3d04518e65476a256cfdbd4307457a840f120157f67e309afece3c7505bc835c50f939fc08bfb9ac153c0f1b21217ade4b3a478e7c7bbf890a979e0780fd781425c0e733aca355ed7a047e83aadcb54aa440ff0c4ca1e1b5cc9bdbbd1249c33a9e01593f403d0240ed6546eaee89cc04a359e1383cdff2dda41e34baca0de5ce3824452620d295f376ba394c34df6bce35332e04581638c927e138d3456d2cfad8f601380261faf1a154430178045de35c60bf4746ba547b2c93c8f4e15022b4b2ee07c389eebb3e825a342f3ce7deb14b65b905d1453a448871646d5b70c9d7b87250a6d0ab91764d1291113bf63d5412fcbaedba2e35f18c1b00110293fd3c5e92b6579109d1fc98104496c0f56a11f4a8bf4f649f96826c6f554b9011fa6b7696b3f53208716b2e3cfddecc83fba70186fd88ff368cd7929373985105f63f4b277545dafa5d261c1f5d410206b0ca4b9e8a70a8baa7ea9550f65abc2aed22af112321114fea5061bf0923fb4e1579dcba844e3ab686b4739d636e37bbc399d0c537b7573e686544fffed6150e8c58722001b0936ae5c64343f97b12a2df957daf3ccc4902ecdfd539e2a946c4726fa69ddba83290e552ba2b5a3bf36cb3349c940ac44f4970ea676393129f4e60f91c72615b275343e3e0cf9a5c49efdd4328093035e3d3c24265d7e49a54feca31597858335963927ddc3f47cd89742830eaeaa1627abe8e3f2b13bcd590925f4a461486a58caee798c6d7da4a4bcffd5ea94f03f6b189e00a09fd3b3a887c9279e6f395fe302a23d8cd0bef16fd9b119ca11982768eabc8a540aca18315bba1f5c6a02b0a65081da2e2826c0b99431cbcade9136b909c72357819ca4d7b455cdc562a66945618acf5887b8cf92d069db0db8fd1ec41c49dd67197619cbd0c386dad9f5f39ff68bc6d92dec14cb9900cb85a4d315c3a034bc1b10f270a0b66ed9b9f767cc36b606998f2f4e1ddc5aefc5d68f10581f9785d371f6497a990dde57938f4d5ca8f1af7ec228a5d92372220291df0b6b9a5ea90144a73b52a6431fa07668d811213b351a232c074acd24910f43bd57dce9d35bd0ef94f839646d2ea32355a0a4d29ba226f775f8d929e53e197dfedc885d9bd1977caa3e0c6579c68c0419c70405896050343642adba77640c6250fd12bd2aa84fe27da18c27835691349c47914a87bc39fbeb404057bbdec7ba7475792c0233addf66db76418d8b5ffba43326313a00095ec01b9dd24adf6ff07c7e1c65e3401ff4f62ed5d49db0c540ff192de604f66aa2c017cf6505a5a175aeecd299b46cac1ffa88ddd53fc520af60b9a44d23ce63383785327852ba8291e89668c8a18c27f4a63f79222bf6442d257ee46214c52f4782e2321ae8d3b458c8520f29dfcc53a052f84169011f869b0bf81ba800253ccdbe84b2d4eee69bf099dc611e1b2db471002a97cdbddbc7fc707a059542bc0cd8f01d8a6b7d032adff3c6698609fe6b7af694bb5894d27e7b14acdc3e8b9714426aee871424b721fa75342f992a97939afd294fcfe277f5b536b927f1994ba30ca08973d7b45d0e6c398a09e29653873c053d68f9eb7b59738885aff8d0f383ca16eefb0de938561555f54ce859a1ae7ba78e06c744685deae5a2ec443ddc125f6e17cd9c478b1253ee91b0e1929737013646c930b4a3d9249e30d2b3028d7b858cae109b8ad37a62d5cbf6ebbcc73268d4d21ca89634fbb195c3e0e459257a00c91ea56ddc1bc2d500a98a18c024b364726f2fc77f7bf22d0c3956c69663894134db9a07667e93441583f8e63be1cfc9140eeb84d36dd50edb3b52dc837d83803272f0819d807485f83c525b75d062b138f71694b66cb06718f6ecb1e8ada27f75484584f97427692f4c56f2f1df41afbdc1c4fb7f5a493282b1ee6190f597175c1783fbbac2dd249d47f0984d698604fd472cd012e878772577d3a74bb9f957c4138577f2e07fd7bf83b37fc1a96238e23e0dc2d931cb40900e0c8058be74e6e55f5db2baaaa0d78034ef5085dbf07d6dca3ed522d205412c135934fd8383689b0179d1712cb9b9687bdc9d3e6043a4dc6654d9b8bf4900ec11112018b72c72d1d20d1935e6755e46c6a1a4d51ea12af0a5a79de67f5a20be000e914d1d1714be2be0721b1df98250cf6e93c803504e3892c3f021f5b26937eb908198513c0cfbc0689fe65d597e5030f933d2259f021f7aef8d2de13fc9a6be633f429187c40c62a40b160d11598b76975a02be7ca354fbe6d3d475d434b9b91ef55cc137875945c7652684e2c24481345f0463cb4244da4d6ce2f6a8a1aefdd3494337ad3012e554bb0995b47c3c7e66618ec92349e24e046993e648278ccc98179bbb01b40338a6fdcdfc93ed317de6e70c0727dabd049219f33c9c8228f8b6cbd0a1d3190f2deadcc11404340200b760b57476fc8bda6429e920f7eedff4f2fcaf05f27b07b42af22ae04d68775728f05a50710b57284a7d0b2757133dcd0a2345f064b57849d14de02ab269b0e948eb4dd2864fcf45462506a717104145147df3fda0b9c6b976d94d8cc0abef4acd0b544440fddb533ea4ef8224ebcef02cf3358c1be999edb61024cb85d88a97466949b769ed0d0c1df2994368cb8250053a9b5c6b020d7eb51a7e8d0000f8f36e4ad1a2cbc8cd93ec65faa6a637013f9799b0f3c8f1a30241f79b4f94e27e5b9569af83ec871fa178798e9f891af5b4e13090746bcf9c70cee683a8edc5417541d99b5fd66ed6eca798f088619b45c5f34cd75d529d34fa1166938162264125b9938a3b0581314f166759bd37b91efbd834230d4819d078ecc1958f7a366c0fe94721e2c31ad80a138eee8614f99087108f3e7f656dc7956b7e3854f84ba2a02cd9400ebc156dd4345e4721b97c70af3d51e274dc28d2832d010a4e48c08b389aa1e7636e4b8e164c80e68dcb988cf879881f6d9c09e699c274e1d2b11d129a7919016d070540bc38fc8e0c936b6a9bb35c3c01bc5804d2d6fc944d720090223f58e9b4fcabba7770f7296989ac75fc1ace877e60adda59b57a24fd2365397b347df64bda3f347d1ae8860b1352ce9da99ca782411a3cc28fbe47e53efd5aaf1563c6a858c198b48a846c023a4fa1f31d8a6861c4a4f8d96b74743b6b45c263b985106157fa2ca7f947df94a7120f8cb5280058cfad72564eeebe3a863b5c5986f7edd37a78b333f557de5e1ed23f4a92717f5cd7a87ec8f3f97c16c6d92739fd8cc3ab721e121d86012834de25e9e8aac867997652cee4007ec218a4a2820171340141295c5405eec0d83bb9e9ba610850b081a4dcd389e3d08b35b7c0452ef2b26c1cf7a8d0dbb8dc86511451561b121ddfd4d444fad131a0bcaa0aaea4fc13839bc56ed6a910120823058a8aa8f071bcd414a2ac05b6a1d0d95df94ea2e9ba1c3deeaf0c21cfa6d83e269b9dc74806d4ec2c9d43202b0f1b694d0d366b0c3aa762b8fcb7e5b13c27475c9e096d25c64ddc63a811d641b10e034de5fd8a8f270136c0aabf8a098be85a578093c84e8122ca37caf18d1b01ee287865a9538080f73ada3517e3456ac662b36e9d46ae911bb47d0c12f0b2d3b94c2717f7e288af60b4583d0970ff9fc0a271ef69c3995a81917dd50fc8469cd08808c1d846120a7f408cf4ed7bd5f033c7461afa0359f985f3846857be097d90ea10108d2cbaebbfe3739478a0acdb612424d40e8ed1838b21c53a4de990db6b43b846c5a8d02966945e902eb79c06b0dc3d738c4dd324d5db06a56214a26d8b7743aa27cf120c12b95560d0026fecc1596e376f4f2aa218f3f92e5c9a974af240977c74d8fd56c2661c3d692cb9f477849e9697af40d81835e351d596d89d198ca04b8374a371ceeec1d8822af8f8f9de1ace7cfd24be60709502c4cdfe2477bf2bed62bee68dbe13c8f6fb814abc7b75af573b62bc957066ca7294d347559673c22e112f155dffe7fa6ee8b4e4ed68ac3119c1b426b02c573ed63228129ad1f20a86e47c335309ba0cf5706ac4e2ccfc4c12e6d81f55581fd7f9e1908f8f4de18de021bc55cf38078eccb1a1ab4475c55cb48939dfe5ff6b5cf601091b74d4869fd79a2d0785b7a505dead49e8121c4225c65e3ee5d21800b1d11a477c038433a8cd50358edd66019543318bb641c093b8d2cd9adc98e20c8d089fe1633c2e86bb379b7b9d81c3f60451894b6a30b39d73c1eb8d1b8ff594c7c3f87367cff532271da82292c1e4a25b5fabb82884bf554028bc50141027ec13a16be2d1cfb31a3010a546ff7771eb06f4fc2aa83c504cc283a035fad7ec6cc99c5b6dada4dfd11b1f82cd4abb6fa0c347a5eb625e2b42093937a3ea5e538e9381a5d89d35af424a49a0a7a6750e19c0a631430619d6d41cac16cfb2fd78814c57042e7c00617b4c966ead9e268c5ed051109e64215f8d3af72c83466a106d35f6c1e77332530aa8eb69a9333e090a505aca57e256ed3ed56a6c5cd83f4519c1b573358b28c3be2f6bf556bd3a310eb9ff5fc296b90dfa58e0e75a3458be997f13d57dc6016d25dd1cee4f58f97160f6b2e74b1e7875c209663323a061e5df0355c3265eff0e55b1e82bea6a818a3254264ab926263a8f76fe3ae917910e61497712de9910aa2a56c0d42642f0514cfce5a856ca930cc9e2203eaa1ff5e7b2cd98fff397fe9f13457f269f1e3163d0d2686bc7f50cfbfab6f3e726ff9429b2cf844ff377f6effb912297d4df189465ac779f5283a105e59a0d1d269f128f60b5261a0d6d14878d554017d50f6b642b497daa4f8ad34e0a6cd431abd2ea64b765d4fb63f5eef402f918e20e8b158186af44dbed25b53484c8fd942bf5c4e9ee0593911eb0e5c6a1a3c09bf0afe49fd3558ac62787466d47bb1a04b3e738f952b3fcf7bb2a58a8da08ce90cef52c03e1effb14b663d0cc95ed563d129913e48654d8fbfe4568e7d3d95b9996bc86432e855992e9abae971934a3ec7067565de4149e531c0e08a412ee49313cf617fbc7321c505f9cf83cb9c18b2d29852607bb9b613cc456f67271f68941d21e67facd41c9eab7a66f5f45df47288e881000528b482a87f9026269b298442ddd0d4fc15ae30c43b884192aed90a8bcd91904d930aa5f5edc972a590eac8b963846f3f7f4f5b54dbc41603ebf9e19c74edf5219998550789c62a1d276fb6f65accba0630d215f08ee7e5243eacf7aa4ccce9393a05f75ee808535ce2b4e1db4476779185143f3416351d0b85e740fdd4d5d0df0a0eb83101edc06d2e480a52cb0a935638512f0f6c2a2ec3af2dbeff49d832791ba90c32b2e946103ad91dc6ee710d94bc72a73edeca0fd81ea6c6df0940a98d4ee1a27d8521e0d68235f44ca3f90a395aedafb2ef214a5e8a6659f47a1e361f39209dcd47aa2813df8c4eb8613c141ec0ce213707099a8f42144fc0479e5b00c47f7a679f112983d494bb0ebd2ba83460768ffc915d754b3e83f406e4a9ded084b25da1c2b96bd364b05e96fabce5df66a2ef7ed7faef98aa6ca053299a395024aef1ff661604625176f8f118b6e0ba3fa694f5fa909056e35e9fca7283114f5d9b6e266e19aaf278aa0360064439d1dfdcee313d16d4bbb373b82b22d178601b0bb3e709c74fb51f7ba81a2442c74da8fe3a15ff61e068ca658e3e9ff5241280e352a3a3c150f941d9ca154e3b7f942f6c40dcf62213c35a836fc458f18e25919047d6034401b03e6f1d6b878af18a111ec8841c4ba836e244aee3b455ed5cddd675460ee51465711f64d273196e9955c6d9fd93b5184580eb10617a1ac81bd684b4614ed075dd51b05ce05fe09d1601fdab52703534db99706f287fa77c59fac9aa40b9b874b332a1a4c58f8505dba67a28055a4ce0fba7f2c845e304efab72fb5ea37fedde6cb404d4fc1653f0fe056c19d1298941bc309e752a178084ab5b957c050cd1c23c41be6017b30e0582062e8033bb4b6b436833c775e84ec40eeec84401eff6a8da8420e7b37b12f714a4b6f541f7c680336853c5e3a7e1d2fb7bdfe298ebf730c6067e3f538cc1ddbb1fab4f22b5f29a73f99c858d5bd786028a8ec9b0f3172d1627a4d1b354758ff2d6abb1459754385f42a01d02caf15199052bb137dccc7acef7857b0325423489f3ddb4de75ab06d62b1fdc47459ca6f2213baec4bdbddc63b5724e1d37064b1c0833b22c61bc8647638be147022c2db308b6eb02a24d039470a1a6b90d26c8623ff4551aad8d6eff428a9835c35022303179858a374441cbc550e7aadd1022ab9fd6628c1dee2a7ae94fba0a3dc6e3224fbf33f600eb39c8b248a3fa8b357997dd9c802fe61696fb4600fb7f024a588a6b7058fface73460ac8e599bff9b8fcf58ab2ace17ade264f0846e4ebe054e57e2c8321d6071329000a95f00cc16b2c520191c4d046c7e67f0763852a9bb82ab1cbc4f9da17cfcac379915ba82418362d0b4b5115e3fdef70b72abd64287294b1d25a2ec0166a258e285126ae2b97b300483c20bbc90aa0e3cb9eec90f92afa6cf7c551d2aefffa14b44ee420e3982c5d80c2e2cda21f18a1bb3621371c761aaf96550631b09c52b0e1b27f7ce5ec85ff8ce7b5d33570ff93067bf12f879f9798b57b28aaa49e8a8bfa4610bbc3935765bf2eb002cf8e35cc98265479947df3fd2642fb18d493caf8138da8ff1b67934cf4bcb4da8d865bfc449651495b22d0ce500a44c1517bc3f7867ecf27e6841d6dbaa758702a5f742ec1f8e70e6d00dd99c2c905b4ac566152e1dedbd088b053150a5150a7ca96722d67796eea2169141614c37041b277970496f298f736a16bcfd49f8f6e80c1a080cdbee6802f0c3b30c5d5e0504e24ccc8ec91356a6e263614cb8dd5e3ee40c2d7b568714977f46a3b96470d0ee32e20e88445dca86e25ec9367c5a28c0213dd325d18467e09f5510fb099b2c6ca5b25981fbd6db68d1db1f0c381d12a865130d05ac1e2ada382d8793475765547a196d508360f193b588990c3eb0285ebf8c3c63ed2bf87e4cbec159b80c5776de6e1a5dcb32820f65a37ef16053237c3a8be05a16992d6f5923fcd0710eab0dbb147c7a97159d02d5e56c2d77dc18d4fd4c1384623498a402b4a05155f9d3498d9417869564ca68588dc22f7f275cab77c9ae23d3ab73473eabaad063638ccb2e8521ad3a13c1daa0f35234e6d0e049d97c00e28fb3ffff5162516f842830d795a80b72aa2395aaa345eb6b48c5e3794a9c694fc20ffe6b5f1d692646a8c1521d999f700c4b55bbbb894c01a35c7e4a2e2d21a29e16a5240ecbf7f3bf9c126fb49c5b713a5bb181652033c4f2b92a6c180c5723145aa646816c16d00dfd2d29db0825f9f4e253f1aa830f20179e1bfa5be23c75ae0e15c706e6f69b21c797f9b514c60855f0aad4e0a12eb5341e0202258e788250e2e7ea7003b36d70dd4880143d670bb977f6ce0cbc3a5af3248471f2c568bb57bf4b0fa076f0b3cacf78333a2620e12f2631166a8c944b2735f0c624cf68fc40d2289252da73b696fbf19791b8919b45a2871452065bb695cf459d6f748964fae26dbca760278c84a55849b0454a8522cd0cd6a65bfd4fcbbd8c976e1e3f0167a36ea5799481b39f67707021a7c8584e7d3ef003645f18c4c02c5d7a0963b419130584f16463b6f53c10e74dc8eadd4292d70bebbc996ea10f72f5040cd5fd428b5f977c7b516d837253c6e3093b85224844e4260a760fdae3811259e9f278ab4ac368d615be40e1b8e866785d0deae53df8c15d60deb31c61c7fdb71ae9b9050df8668e0ac525199943658d9b9f496330b087560249de60ce5e12413ec8fdcad03590d05e3b46fb4514e00e92171309686031d845c58f1638a8039a5e7a3b3631c78aa65171dfc7c624eafd2866d5313276b557a3a099a0386665bbcb5afe11063b54dc17876112e16cf45c48885af73715b28f74139790ed6feb1a8f283e2ba801ab123668f5f19f7471ffa6d3685283e07cad8e5d185fd4626fbe532f27c0aa04ade4cc23581efeecd8bcc97da38e1d9c7e2000d5936b37ec73ed3ae40671c6356bf022b3b48ca8aa3cb03761b6e8bd658b68e6a8d0219a881fe2639e9bc9ec5118ae1aafcf77b7f2f99917908ab40f705278b5ed05721fafb2e936e55f207f1c89948f922cade8e5865c24e3fba5a46cb0a74c9a59b5da61610698492bbf896a4eebfa4cebf20eb6b8a9122806fe2d540bf3024de0ba3e98009ef2138ff0c7e730b0be46bb7431ec113558fb2b62e9195b249d30e51fe2bb75a2f5b3325b9818e1022fbbe19474dcb09494a2d7cbf9a08f7345ec869ba4ba7e790b73c8de2c708f4f8eb7cab8c4a6c60d81cc11de73355a894bd4c1f8f178d76592bac82c870074f87ff8d4f7b5cd7594d53fb79121b42d54eea911f025aedf70af172af103e4f6891a65f4dd3701be0111c7fe24c0507f688b3a26f1a7d4e12df0a5319a1b573562436743d7453284f505b8f847ec99b05798c03bbdf25ced3422dcea060c6702e4925895e19d4286a1429dd047fd5831d55deeb57855af4d6aa0c1ce240e9afd1e5a5d2cac30d6f7cbe9692311d2d7def87fc9f3c0450ade678e1e7f78540bf937448609d9f47c71e48dd0928f6474b52c0b4b4800d4a7cf830836ef0726241e463475710b387dca4fcb2adc13f964600f605da726188c7851cfdd7d7964b6fbb3082a7a377e708cfe3063d3ad4f48051b1918d54e5cfa04a065da1d53ad1b52873f293a733b775864f45fff935c84112a056ee7587091f6c5f27e13824ae5d50430e2d7957b425c7b9758c0c7d4708255d39914bc9e5dbb864f519337e325480e7a637aaa111f860f993e73c8fc30ab612d444b774f8436fb2afa6c8a7b4914ea49d99c2602ce53a6b7dea390662ccb5c72c93a41c19627a98ff68569cb0cb6693bdeaec425b4e72f1a3842614dc359a76cf7a113425aaec57f7aae6408209b69c16786dd1bda881a379dd8e38c4f8af57f53739026fd63250e74b2a1a53df8ec34336f0809b9edfe1ed7b9ffd9cf48b7b07e852e4b28fa5b474ef60d4709d5d982eaf456fba02614c3ac9fecfeac1e8cad77d0571075e4cb466bfd0217d817ba75030465c6f036bcd4c77a0c9c2d939acf33fe9f54888e2c62d5c95e593641bd2ce99e7a3a7024f7373b9cd7a9d5a445371e6d24249b19bfce7fc74741db38889c7f81f9e5e3f9d317ea3decfb89760b1046b8b826cc945d6efb0d027d8523cddf8aa2270c59a0e184a56b12a29b5314a9a7dcbcb16e732dee3e64134bde853811f4bfaf7caa3a50d5c0b5f0d90ac0435c15394a3f6b6e9db38143773f89972c9fb16807ceabf51d6b9e9c1fa380664f1a8ad16842df707f7c47de041ff97d25be9ed9c6443ae5324fff87e564f13addf257eb7ba3d96a59a1d3f9b9a208fe07f79a1e78d2537f4a61db04faacdaaff7bb5864cda7b45e1976f1fcef73d311fb24e51de7a50cabad1f3306b78cf756ff7761e0928317102c3024a520ff02b09a09f169874fd0e5422dcda4dbef328f43df197032faabc10d6da60400d7e9aa12f772d9a2067d7f9a2f37f7b6a7e2d30a041e75255e58fdba0b1bb33093a4ddcc139eeba5eb5b3ce2bf66b2b1e004c5382a14e148b5ccf39a8eeeac35531d411e463c7804f5b5be994a6742a9e73121aa68f9eaf40edabde0545bc017bb85c8faeb02292d4a782f1d61070cbe4ef7c775c7c3454301d78040aa5f0b711ce6108efd5a9bfce54b80d6d4ce81c743f42c8904fadc67844d927e34ed0a6ccff7c21f5542f1f8bb2b5212e55c290af61c8657a34d3c0ae720a1c20e72452a2d75dfe9e1b460fc3d33f383b398b1db8d19f7c0791ee6612298ffb66f5ec16c3c473e9a387b3b51f8d62105318a325915839fdc5d1a3f34d4b82883570cb4978f7d5ea6cb3679b418e1df521a60a6845f639aee424b1f1fb594fea92db809b51a02b1cfeb1d6ae690074066952fe21ea9dde826e6f25b558484fe70a1a482bd6a1e5ea657be898b10c0bada85ce2f210eb257dc962f3ada81646081cc2e21e545104d15da70c919882c56a8254cfd13536989c3f6d6140873dd23d2a83f3a9c163088f99a3533ddc73386e77b8939999f813ca4f37843179ec8fbf1c221478117ffca43809207ccd9f291d56847187224c6925704c0eac9fbe9e4e0940b5fec1bfe0e7bae38e883c4ad0bf6a0dcfb681ef5f2fd3687f08bc875acd92f3c2deda94f9c237f11c2f34eca1c3fc996926371b9dbd64e9acf12780030eb729f3ce3994ec28c663abc900620db44c1cdf819af020699053d624aae60b1a5f28dd18ff0cb05ebdb8007e1f58b8ad09accd96b200f4f46930fb3b39f41b6d840fba291a2f13dc5eec16672ec043abdc0ceda8d003e589a9d1d1b1a26b35dfb3eb370314bd7ad4e55527d88521e40a1849cfe68d52fabef5ba02c7a48ce80c120c5b6b9b9809561751096d4f8d9b553462a628c40f3809822df539eff6e2bc0fd9e5f5db89019eece0bdcd7483f94879e764aedcac48ef1c749e069cefa946288ce18d040f4618e2882fd9a3fd13f728b5fc030dca3e42c2e89d58e3e36dd263f8edc0f1190ed59f8f852893d3a6f9108610c60d9497e04b38a27ed6284b0e2012e84e58ab2419e9516724dede06e6c8a72c5c2d4fd0e49d178abf1d36e9bde02d9f2eab75ac5157f5f509e893419f4336b029eec9fdb40d28672f868af4d4ad48ac1559f633829505df8f4692e2cca25744309f475bc92fbf4668eeb4115832c6b2ed08ceabaa24f51dc5ef4d1d40f0c472e9c3fbf6db32b67c408350faaeed1e08b798faee774ed72be6ce13b7a56762a3402ea52448f212b8be2f5c1ce9aa5b1694068b1f0a2deef154fd5e3263d0e65764b3f966daec9f927c9930bb4ba6bf8344c9da55b0e0d9f5a5cc3d9e4edfe176ae2d0a02f8b90ade4d025231642d099aaacc31ef43e363a3bff9b2e9dd4f4dca003dfa6695db1d545c73056f3b674ec1b1a958ef8b9b57da44e86b3aa4f4d86500345fe711d7b02246d0a6ede715d18ee83193fe715973825eb739d095defcc7a539e8f32e35092f583528eb3927d100faebf6536b30abf8f1ab2784047eb81a5acba4c48651607e7888c6a0ade5cf6912160f6d85815ed390a9b8235e0958241526194ef3d65b1903daa67f5040892d203aeda85202f28c9501db5a4cbea5b8bf8c81ce6acb28ecd56f7822473c2abce68adae93fccbac51593eb66f64ab5093054dbc7036d4be6d72133250e405db575a7f4dfd228e43ee495e3c772b34349f2b7f6f8f7940a3ff52264821d1ae4988fd25ca53d386695e4e1097f3e08630b2520762b61d35e41c1fe851fe083b3f9e8d8192216923a0bd5b9034e91b981cb191d48dfbe2aa7b56e097fb8492b35810dc471be9c24250e58a1ab344b12e313635798eb17a543ba977a46748976fe94d6e02bcd774862da926221526a72bcdcaa16a9b45a40882313b0aa07c95f0386f4fa5a7d6d77d97a0355a0080172d00bf3951ad6ddec73b689456b4037133a2d6032116a26f8cce66ef8cf8d12ae6d8e36b3edceda948f9f544bf8cfe2c38a38e67b9d0a6816ae0cccb180a9fd756e9ad51f9c06fa3af917fd1fec3c4a46f43fd4aaaf4f58b8d9438c05a5c3265bf71557a20f6ce9d224f4299fab9b7c3ca5819bd03b9c80ed803cd03519b194c3bb18a658fcf344bab15bd508515082dbb7b04377d61a30908010e38c98543a6c96d4be24498af1512e5727d2152888dcc0a08a1e37d44d50ecf3ef2ccc0a3825ad53b641e387f6ad6e27cc56bf9370c4c1827dc9f2bb7a6a99aba8c277dc27bd1d1836b1502f9ed926cbf18291f8da5bccfa219006d702e6375f88b50eb82277d2f3e9aef77ee925ea3731c8d8bb61f70e1e457345255614d76dfeb6d104287dd935680ae93398d529f6553688ef2882c2dd8cdcaef14aadcb4bd02b7e1c295c8187c1ed471ce31b8653775cbd41e03868e27fb08f9c3b7b05e37910076cf2be4066c56be89c4cb911d194c0695052cb96e9717563dcc3f29152dc2f0c4546e08eca35ff98184e9f9e755ed5d18bab201dfaa316f27bcb8e356afdcfbe3dfd38a4de2fb6b842739bfb53449599d1471cdc22b35eade8a3bb161e98a7feff8c1b0922305cf99cba8e0b3b8a65b13d44c71beaaaadc3657bdb7b5c77fce2ffd96a5f08fd992acecad6e2607d0149dd32d02fa14c46c9b5e7b94b1bc4db09546d27beede059bda2b458e85e8be0b18de50ee8fb5152a77d364fae29231f4f56544d4c73d4c7252c43ba175ad4af0373bbc5501776bc1a95f24a9ed596c9ce7d46524b7b66dc1bdab77521dcf73cf398f796c0de739c969f2edf9442bae3fc0ac60a2d2e01706a6e84716271ef4efacd6a6641429e3a0a9b3a0c47b12df510eceb1591139102e69f81ae7a4153bbf071f521ebf53d5861848e7ec00c3549cdabaa6678cd9ab8f8ecabbbbdf2050a7ef27ac6292b3982dd674a46787fa4d02d472f82754c8bb8727079d0c2ec38c891db0432377d0c5e20b565c13ee2e8a3838d58535c37d53b5fcef3f297a7762e69652fe525dc8c0607dee276fc82f30c4aae826318529fe2a72b6baf8381185a0bab9fdb83ebb516bd80c132eb2922af5e9d02fa5748e55e25f3b93f23f1e1b5af66110def2ef939210b56e08e688d7f33b0b5c990e02671e1f6c42a479fca7e472a389797988a78fa83af8baf5c4d0b2c3ab73b2539553260887460c3502bfc2988f00e19e3a0b3f291ab987762ee8b346ea895456fd3995f10cba70f12cd6f048989874f26ca39c9279b7f1d3ced75fa12bfba16f97bf9b5caeb6db9e600b42dbb3986472b0bb58d7c0fb02c2ae7ecb779eaabe727262109789af00049bd903044d8e5df682ea1c2ad816dc0a9a0123e8948b586f393459ac7b23449e5e0ac90e043a4f7950bdbdc64c96f6d6959e055a21427bfc44de7bfefa3c20b2c5879faddbe78a5809f387d44648120e5742606bef560f83323a5d625aa45ecfc900e5e584ada08b4cb06fc4d67ff60621f534f97d461b532a61f61e689eccf63b7196f9b943e2d865602740f81b3c5e35e46de4c28871c032433e54781c2c807e4704e5bf7ed93be187d8397f6064990001d0a0fe42cb8a0f8eb22a50016f2035b3cc49af997dc74349397d25644fbc2027740c5a30382de83f4d43f54c4b5c0ca2a07f3ef35c9e506ff6807a90088481e8d97801eab0c75c2523b180ac91a6cddb33625455d4307133ee382b040893e4b44133fc4edde92029a300d5be41ecc0e86734fdec657342d501b870825445ad320414b322f5fa84f99601cfd47e95a4ce93e035e473746825135dc3a81f9bf5584cd38fcc4122cd808f94050ef3b3be39a3a18ce0d65f293ac29371e30cf0619afe99fc6cda3dba334471c4b8f8cb7a43dba6a1cd47dad5b36eb8cb4da2a582faee031c722d4e4e311095d96846830d0a7074b1b3aa44b9398d8b167f06569cb4835d9c32d5304ab1d5591976ad3fe0dc06ed0b17706f802a6eb7fcc2474dddf0695224cdbfff15391456a43091d92713500cd439440077601b31c629d929ac3875ad67e556f5437477132b16431c11056dd64cb0a87da6aa4fd22998b054efb77fb968101766cf6b612ef26414d0892de266bcb89c416bbb91dec264710247778647b04767c592037a924fc8ad6cf7a9ade62c3c0349311d72f6b1b88e7a726dc141d6e20357c3a65603063cf0e535982c4ab928d287c7af077b6c6e246946e7ed2b745eec1ff95657a5a9b9de275dd28c435e6623cb6935e310d873fb5567e69d424947ade469ce68c62b57e4f9ffc28ac6ba88b94bccb89b1f2f79e41abd2245f86d76da54c3b4e174b3a3a8352f4dc1234f6e3cf21247d27c8211a075b5364db52e74559333408882349134ad1fa2f8ed4d13db1f2440bdfb616dc89043be33aa85105ec1417a7850a065be8b6c96bfcf2b12f59fff5e58061ec05dcc33b7234668d780ecb117e9e6b8e29bbbbdc9c75aa973c35ba644605599d7f37467ff76ac6367d15af14dfc94df1e3db190618fcde3257adbdfc6343c031f9b43d86fae773e132f2031a641babedc8030e5a542737a3f01f4a25a1ff46b33c1ca526da4496f982903cf6c363edf7a1647df199e1e78cb03c53b553530063118e06d2ac74f740820e89af43d337f5c5d069d5ce0d661a17f7f771f719ab851a3e2841a1eb1a17babc0cdeb01d3d329a86be2e9a8023c77989b8b66bd31380a696af21f0dbe418841ae883fe84f2a66d2ab1f19e86cfe42c6d5178dbe895776afd1ea7470a9a03908d808892b9179563d8689ae574e5d959bb2a0bff9ad788fb8f0f267b7ee69d737449b2769d44128843ca99451571da3c44d5e4aad5da9a2ee9c4a7dd27332f18d39bc888b8164ac67769d63473cb59f60f3595c5e40e8c2c08e74262e08b1a400be77ab7ff3c0d5c7c68d9a1b6319f85b4e4343f67a6b5fa066ad02de16ffba7e83de184985466cd1ee05f1b205b779a09ee27fbf7365549c7b10f8da5e3bd3f0b8e50cef78b4498bfc1e4d2d2f983d3faadb10fdccb5c525bbd64ffc23341d7bace4d26768be69d14695c7515a755e405a0758030fcfdb104fc9fa8f3bd4e13e13160236428b365a9af084dce8d45d5e067c19d609461200c536676901bbe49d6e4f8342f635ed50b162d92781dbc8a03f305b70ae600390399f0a4c9cca4219d87d15437758927c9cd69f5bc11757d02a9be6c0e63ab233fca05e6d163ea5a2c8b78836ae3b167a3372e9e94ddbd0b606980259a4362756df73a9124a16c309ca8b83ba4a166307eb005025f3f641ef578efb698f3697f02611af0c0b2936054e34e4ccb706102005ec6c6095ab71a236f326ca91b45a89a4f7a95e157819c34897e376549234397d40f5e407a837e5ed6a6b0f074f4af1344ebeeef36f55fc614f9840920c11af93ee325ec36f389cbb9a3f77a7bea91c66c7f99350bd3cd738bf9bc9ed4448043f1cda2a8eb246b1f745150f7963b7c42e5b23b4996d9cfce5a974014bc90644a69526fe8167c19bc1ec1bef1a5c22cad97a3bfc1644e4b8b40d7684af4c0587e67f516779ecb9311007239e4d00d96ff59aac3ce4884f1c91c910d694f573577c04fefd846a3faa1b1a89a629634095bc3eaf6318928c5f0d36bfc7f33c057e4943a1c09bcef577dccf0eccc26950fe29629052eae1c2e1784377502dedd00d4ea04e6bf339c08ec0464f55c77539714c0012018321b70f734ebbeb9d2fda5cbe30683d10c6b722afea782e8a92c60e74f42f113774844f05219ed567d56d782244255b52d1f5e02d60664f0c1656aa50c19b4dc679e72ced11f586e4cbf639c66f6690bb0bcb7b760b8c96665af950427e6d4fb3c9c2c556623c7a17afa56c714092e0f6b8e1030d66b07d3b4a03a10cc3246a831a9a84fad4dd4789cc12452fa3a959f59f70c4afb7ff9032c9d4d2417ff5a5f67af6d8a2b196353f7c7caae46cd85072da412362dcfa45cd128664a471d25763c8128c1739ace67d649f20d30d449020ae74bdcb1d8c71e035e1e0b4423fdbb9dbf0f17d44ddd66c264d0ebdc18993b0a683784da1e267663652af0fcd6df47def0bf551f29e1aa32fe6125bbbe3c5324718fde9e1d9cadca00225c21ca3c4aa54e69b87c4409fc9f97eca0f176dba904515cd1e8eef9f9fdbe595bedadb05865a04259771a6cf8e8e27c807ee20f40dae96096772ec50bb5b4185441c3368ff4cf77213eb31f1727c6b8fe06c97d5766216e9e232c5daf235cc339eed8156282b17b967c793eb1b85401bc5d1af2fe1c5c69be705d04c9fad7e698b77ef1cc02feceeb23f5a4d9fcb06f882ee31e29cebd45de390e9857ea9ef3ce6e925721b3872851e67e383cc1d7e6a376a9adc742b32518e64fa54b813975da5d43024fd0e37f5cd9970c326943527ab4499485ca0ed425179290d71f8353c4e72d4bec0fe9a51b123e3f5d7b243e475f34997827f1f16751f5e11ab8226bb045e68884cf40720d67439df369a54c1fd16eed36ab97ee12d66180fb66789a223d9d8a85008f91c9eb45daab7d97436b67df8bc0a116e5d94f87a6a82e326cd016e9a186f91661ae41535da12b60bbf8a5d0e0dcfe1fc91598dd8b2b74dd50de7dccaafdaf1180ec68046a750dbdd40980d11a10dcb4bf13c04e30feccfc4cc7f4edee12296c2b644b7c7f602b0ca398571cc7693d2cc55c6de6b4169efb0a0be4f88fc585daca0d530aadf9eb9e20e067a546c377ec2b2fbc360e4dcd4ee9f2d039acc7db106ff4a2fdfddd98cdbbea5979ebf30e582d1b8024d33b8a5c16deac12122cad415f0dc694414e9c0ba9e51900e6f570ef13762c73598dd8d5511cbb25a2202349409cf493d811f62703f49404492620e10822023c83b1687693ecdecc000db35f48e0c8fcd384010560b3cf0ebac012f87e0d86dc6d132a103369ce1d2271609ce1a6ddee06e40bd85af2392993faabb7ac48bb5b991aeda3628d2f7c78e9da982bd2e5dda69e2e417f931c913b77d03cb87164139188e3c72baa5789ff0ee0d83713d33d8f5d1de13779858f99786019000f572d4d882f231ae39c8e6ba074f284fcf423ca70698602edfa5a4c99a51dd31f2131aa3dea6ff98e53cb58b12c1f1183ebb5e05d524c842c4b1d28d6a6de0e4a7b182890422a39daaa190632e2741cccb2a52eda5534556a7b64e9b7246a33d6900acc27c73249dd757c5d0bf36860e4a21ff985cdebef8a92ebee9ed53eab0145866328f8e6da9fb2e387a307d9fd4f0787eae1dbdc4c7fd89ef5ae425632cb5def6d84d131324b07c16ea2970ac7a88139750da0d6c9bf114d7157f4a609902fed3b45e72198d42f9f1b1566d4317967ffaec8ad46eddc0e476f77cf7ae518e7cd01ae3d7f5ea414d1cbb11029adf407d3f9ef55321c409b413dc5c91163ade7914d1d578f045953d8d9f2ff98f2d405e4228d7b2f9237d323175c4a693825e31abd24ec7278dd72b9c1f62146af91e437f1ad6bd3bcab44606f3f3ec82f737f46d0215fdf2eb09c3345a9c2aa2555e7153b28b036a33d264d9078a4ca3b1ae7758930cd18c8a5be9340c44506202887c40d10ef22c061e5339432fb10ba09b3185b8579e00e180f7d5ff80223f55c2c3dce1cf6d049f5ff3ad3305a241d3a968e215c3f3b8de69c60b0d0ec6a0762ed1ad98a5de9b291a20280e2108f96ad1890885efaddd8cfa9e3692335f16de1659cc5369105aa2fecf1d0a380ff1994a9d6c2ab91dedb7b516370150138c96c01348a68febe597765ce88bd870421f1ee05f8d608a515052c145e691018229101ff695dae4f1f03e2bca27889cd3847913077e97acde29eb92b1c9986d278af30973c22bcfbac40e348436d5e0fc3565907ead9ce7884b86d17d4380fbd5cc1f0661b02e2b5548fd8680add010fc9ce477a0e7a3466f3ab910c4544d11f471513dea95e57a3b0094da9eef62910fb8d77fa6f45a9d869eb1b47a395bd936d30fcdd7e39b012967e4fe71dd94eec17a50f7fe085cdcd435fc26043d12309d73e6ca5cd60f2bbad5b93ee33e24ecb93480ff2a211a32dd30e41ee56ccc4749c404ffb59da4cd3421e53b4aa1c77a94433915c6d40b5baf228df2e435f18a67ee722a3c6ff7537305b9751583b422aec8427d11b6951f048f583d0474bd7ab8c9cf2ae0bcc3fec9b17d2f7096a6831491ebf11d04e68d67162365a5dfb8782bb2e9f2b891257ff1ec827f7a2c4e9239fdc42dddd82195a805f2be392f94e70d11de048d4cbddf2289866b1aa2158c58f3d1bac2d507df4bcae9960100099c994d48f817a9ba0d4c48541f9f53dbbaeaad7fc9600802112d309679cb6d86f76dd88e170ad5a6156a76f35d16d4c465c04ee524cdd1ba4c9e23416d3be591aa7dde39e05a30b78f6c03ceec285b4d833f456a85283b9d80fef156540a3017fd3f66e00e5d251d03c7344c49b9419d068a726bd4257106ef1de9e13ddd940c42e167628ec8f72aaf8ca3a1274b8a4e1785cdf8655881a286e10a78b1d9b1533a2d8d79af095f87a580140a04beda5adb07ebbfa13648cad0c0a6894e5bf46c870eb73e1f4730121e00eec04218e99c96ff90a23b346717d86471f05ba7aa6603c6fa165a201b5e9eb49f7b5a2f354474c689b091c0154edd85f61d1f87b1b4a3842f811eac7a26bc5ff2dfb7d65fedeeba12d887d9fb20b2a82eb23c070ed81c2599757c4fb7c83299f7d4cbba4c48bc03e1729f8de8e0bacc8ffba0608a90d4a4977c4acf04aaca4c91e2a4cdaada078f241b0edeb760c10c7357f4dbe811ab49f766f8f1a8cd8871502742d915ffcbc6887cacd68b52469e4196e3355470fcbde1a301f02b7635276e53bacc307037db16e00b7a7f8fea6722bcc81e15617ec2945f15f0f8732cc3264b3594e9f513573a3dab72ec94a07fb71ec4cf3e61448bfd41e1f29a412ea49d4466d6fbb3249777807cdcc9077390150cd01b5d956752080b2613d62d426a40f8e0b80e627837f6b21112c6a905a3169e1896d5b50cca262f3bc95c40d2001b9410639341b796f6dbd75bde2f4a95799a3a97b3ae52a03bd9a4579dd5a986c493d1bf4e48ecb8120337fe4b1295724960f0b746e315631b94311fbccf57c0db3e702af41e11909a2607feecb21286a62a75073a29fe14bb1bd32c836f9fa4bf7b993e24a0059510a760c0fb873f55920eeb78f6fef93dcda0824d9c390ed6488b30bc00af9ef95804bd1ee2bda08bc655385f4b8db2b4c35c9a970a823db28a4757553f4c8a2a9ca0cb1e678fa0ef14a65132d16a36e672b04642f3036194d93fd54e63fb3da05ba176ed2378dc61624eee3ce2cb5386c0b8aa755d1c4e90039fd2c74ff5efad6328c1e236b88298ed98b11d00c1d4928a0863324b26811053bd9c457db5d9671e06020b7060d59daf18d9d366997845ca1e221cf30c0496a88b99cc5df268d8a97961aebb5c8d341d62cc9a871b8e58a7d6bad230dad45d359ed46f804f25d5ea29c2cb347070b5b2d64a8ccc4ae61010fa946da84ba9943751aa7baab955d77ff78c99bac69d220da69dc2cbc1640f033f445347762bf2f11b88a175aad4f96546dc5b30fa3a5ece6c776fc0aba0e67b3e747c0f5665df43868ab2175c2c7c5378176b60401769f4eec0b37b260857a08a39c431280d9462e42d726921d4fcb8bfb8cfdb4da3206beecc312b2be80f8bbb05997706fb00c961d72ba372ee343df6f0befdd3942b545cce71e22c5a1b6ec4d6d359736fd8ee9721cad7bba285070956aa24e9c9c9e9365c548e80818c4c0e76da9ff84fc14c23874eff56217fb6cdfa003788bf0e08bbaf43044665b09b7cbd8a6166fd5072031ef8e290586f43f069cf4644dd1c5b37f8783e39d3ba65fbcd513de1d008b9637338a6ebb3674dc5be18a75fe7a59ba4288977a45820ca3c7d58503e476f54f78142d1db7747917858d1abecae0f21c973b06061cb164a0df6b6713f3dcef3fc804ffba483fb1235a0303ea250d09d8621776c6956a00aa17d264554ff68b0811635eb4e582e7176b1664f84401188facba5aed81f5ee79a0297e54718bad5ce8e9f8acfc2cd97018e38344fa3a5eda13bc934844c5651b559497289888c228da3a0e40da06ebfd1f1f74ed10cd7072419e8f21391970d7351f6a22941b2a228f0a92561d4bccec587a91c6ddd841db8a62246c0578e91b65e3960a3c5af821e666b471e66cfa5d8d449a535b514bd006bf58d3bbbed828e695fa746fb38396e59a044b5300a86f544039e31ac64b6c6e4917d41c1e2f8d421803395b4ac7b67a000593d366b90d7d6dee58ec22d2925d3ea160eb567609f6540dabab1ec2bcaed92f1fee3ea73f4263babab91b3a33ab19e50589dc8ad0f65ab470e7cdcb39d24c1e03a710521da2bbf1252ca1f350de8a36f5ecec85db0ccff27ff2e8c56d4abe46c320aff556d98314a4fb7d457bffc2348b771cfa994bf7ec2f111bc579b05bccb05ba3c35ad630c4844818b8d74dea0f2ec1a2fdd642abd7fc522be6008189f4afdb87122696a94ce964c4c27966a91a8d4ff8137dae7d00298aff85fdbefdc3ac905a6c0d0c92b284d054355ce2db365ea1eaf45f62212d1fd32ae7fcd6615ed287946d04337b2c7d4d724562a5baacf9ab2faf6fb1190196a7cab978b90ec47ea793775a197993219bc0b17210a9fd88eb00f4efbcf12f90d0e23bb26ca4039c9bdf1415e9563484e1a288f63315b4ee14cbb5222f8cc7cd877f0a8f060547bf03465693345f63753d1e13c13d0e7d2c36b2917251878ace7346a2cc59dcea57425c2aac249fe35e8a5d45af03f222767133dc842f10df8744ef0fe9d3e2e214ee076af6cbf8ee1f35dbbdba56a468e3769415eea425b8ea88df92c16b466a5e54e811793bd45cff1a3e434be86828f06f2047d1254dbb2d8d8c6a17305792fbff9235419dfd000fb9df996fd31f544419bd09116b5db0b0ef49bb214b034a4412f6b88c670e4174c4ea8d81632de5f82ebbf1aa2fc346631aa4044e45565edf1b7feef086372d2669921725e2810c94f771e29f1f54ba0ab1c13aebe7b1613735615e9618c344dcbc9f1ada12c548dca2e201e36ec07886e3ecfc96072a92babb599130d3d8d146314604b2e2e1c55d85399c506873cf156f1abb2bbf745b5f93bca01f1a3fd6f908e9b96dfda8ae72a68c7dcc560bc85aae5e1cc8325f1d233ae9754902cc9dc1bbd7b0c6be9b1ba216cc8eeb7246bae1d70a51b750896b5834cfca5ca6873db2c84c446739c2dc169056dd985f88c470e569a3e8f42ab1d5e135a08ff0dad98fd9570a2f7a3585000db68676379889b7bc1893b18f818513a8178c8fca9c09a1cdea6f8471b57c4acc4ed7bbc94e7ac7fa4e456cbc6ee500048343809dbccf7d7b94dcd55c8633c2c22cc45f71f118bf56948de7c43b47a8739032a88f31887f2b9d99ba43fbd9a24decc6c91b18d67dfd9f60302901f56095cbf3b207141409ccbe093d9a3fbd15ecbfd5d8b497061d073d2025d13bb469115bd526690d77f45062d491527e3163d1515ef8234882d7481a829cc3ab950ea116fecff0a59d2a83e90f236175d0836802eafd6d9332c11662d22f9db79ffeb08915cb045f44a5a8f708c1de34941085800aeb6d6b5e9938f91c164ebca030383a08ee70599a7c17b980c0ca9b834f85325705468729c54fd2b43970707df6611167505fcc40c433cae3a0e51fdc608bb676b4863d618a1d79607c5e77b69038f0315def65af5955e41cc45d59842bf54b8d7c0416ebaf5edfe92bf5c2634714c7a7937d8f64ee3c16ae455d91d1fd0ea9e476a08e8de1ffb19dfbd28b17d1205c946f86d5d8f5a13e784d2f5e245e0a508455736d6e17a5af8d54d12a29866d304f55466f1bd47c28ba3c0129abb38584a8af136cc39c4b45f10f1e7ef8ab6651d7a1b4e51511db85dae4e3b91e24ebedeb2396646c37f6e8c8406f80b587d12599582ae6fe3f86876fdc2284933224c47456a0a83408052c718556c74b769e18f62afc1ce04d8e6704f4b04e0bf97ef5c2ec2427d0c3918ee57395b90f71352deb3ea764cf5f28e5f5af5e9812554524e925df23933cf311ad80c2b7f01af0b290b730ddab69ec9e59a8d30ca4932d9e3d7534e534495b5aeeccf87d42f65675fd7f8a918574661ec5bda14e98eb341d24684f2f0f8e4763160f84a36d04a4260706d47ae325f112d69376532c1f18b68aa5cfdb1157018d2d0d491a8b3207cb36e16d4cfb32f06c2cfb2df2c98f981cdfda8695bd5a579cd1cab0ee7770e0200fd6803e6fa574dbca28fa42bd5fe8ce64e1de9cc6272af9d7b937aa0d0c548f592787ebfa17d0c54b76900bf4137aec308fd746d19588de91f1371197360429ba9ce2dc9e6bb58486654597a488019074af82e4ca31cc51b528c73d74321bb1f33353a6ca6c52a6d3568dd73cd832755c8efa096db4c652266cea6170625eb0794cd4333049c7bf22de136a6427a9b1d4aa36924538a8df294e51ac7ae5c45db58d80322270c36f683462521729fa6625cc78e8be8431eb1ed55cfe57c3d13892145fcb22e2c876f7d610b203ff1baf0bac920e6fcf7e3a46215b70a6c47095d596b75f7b8d466bdcf07b18b287b869252efd9a49a9f6d83360c4d4a0492d529557b97fe71ab57256034a15f7c6596a00cda7b606af6ff9566b6a670a2f46624a763d6b57ec84bf09ab3f3e6009f4593fe826d14fb61bb4f2e6c33090b58664da17d1d8525c9fc374decc5e2686eddfaab92301e4ae1bd5d3698f583c3a9130d254ff70ba6469146402eddf6f6dd62e899d520d55fd4302f276d5ed1622ef8b5b1516538efb8dc0c01882ece9e063258ce2bae238dc01ae4a6f5a1fe663e4ea1819b37d5d986a7cc09891e6207fc218656355e6f97dc290765cf377f2cda3049880f61275eadfa8fd46e3274c78ec73aa93370fd8b0548074a595b46af3919d63819bf12ef8f181854956ba022603d29b5ac7d1950207f017901f760e8571f890dfc97c024fec7d08e5f69e381df14bd73a00705cbf21acdbd3396ea5a6735638057dda525fbff98dace0a5d27578b97a24062b7f5fdce27eb578e3d1efe9bfbe76ea743290b8ef4507c1101243b339c7d3b987e94ef4b9cfcebb54dafe2b8b1bfa48a613da0bc779f4a384e8c7907ea630c4c4865908418044646e80d186333e3e655fd8fc1de3ee7b9e64cba0b42048dc74b41ec054d1ae6f80e8d7115f8d5da2319511afd56ccb946fa7223b902e413d26fb4e5eb18d1de3afda4911bfee9b82d42bdb06026c10e6079a8b334aad629849a512cf123e64a11e9f2140a6b2392b048c4a2796f498bbf75ae831f816dd98da6e1c32afa5fd7e36e63232805b8571bf80871b6ecb5d421cbe745946eedf78e8e6091c8a606d30fedd39d570331fe0b8c1b2400726b878393b9fda3bd4bed1144344b11f6ebb47d43fe9c9a75e97e0496473f1af486b164238e8cf201ea7fc469b58b4a97e4f4f20e2dbe2020994808200efba3bb4bee79062dc36e52d7ae8cd280be02bd547578ad58b66a17b7a75b33e7ff7b88fc29692f14679307d0609fa1ab25c2b16a01729573a60e825a6c6899be227bc9f4ced969da4d311660d0d431031adc7a43829dd3b6e35ae272b5c6fe38631f79a2c88b4d294bd3e437612f77c8fffe8db877df6bad9546592ff357fa25c6e0261ef8080d6aab800f6407327eb703d013f2c29b649ac7ea26e28fbc52be20a1ac4fed65d4280d3b8387c8ed5ebd0ffad1ceacadc11086eb96a8f0e4f2df94739f11038b0ad866c1a5810d5770460d535dffe9b8fcf6d45abe0aeb20101b56a7246086e9c11f5d3d695d9d6c37295a4d234b0d0119b5714151ac655f13c6410a7f916d6d2bf3b37e0f3b16158e38aa94be4500873332e9f3946f760c7b00d953c2c276c1a28fd298f3cc3e789eaf7bad64b83b95a59706b80d5a544a2e189c404e18386121326541b640a6fd802a08af1f23432cbdd0a641eb76486a8272ecdd1ae991e935dc2ffdb38fd8f4561733947f1860076d8ab25c75bd242e463c0cc041e04ad97e075e6b21f1d4bdcb72a310082913e6b6359b6429396845ac2886e8bfae9f55a82af945aaaed1571c6d5e91256aa95c6147aa8296583fd65c9a93c33d9b0b75be04b37769df6e3003719f49798e4b01087f8c1a10615fe6e77746c05de32124597aac5ce960d790b6a866b86c23f108ec35682583bc4d402f588df3ccbb84e5364a3c5b3c4aa84b6c147f5075e9ea13384275f2bc54cb4f540079ac0ede10e799d1bd49e1185c23806586019f8fad9b78f67e111feae3b6847e36476c5f3f9771f96f7b025f0144e4d8b34bc4729c417e58a685ed2a9bde0f1580af3c36b326d6fd923b0aaa993cbfdd91334470d107816a60673c9a04f831bcab14464155cb66cd63606b4a44ae0396e53328428aa9611064d190d8ee4ae0f5890e4f9d41a122e24a1d410368282d780361fa8cd7c7bde3a65655b344293b5f779966188c4e088489370594a0b970d712aa71599fbcfdec266b133246b67e987fb56d43ca141f54502b7c6f4be508f794f0fa53ba33267db863b8ccd52dee145a9f6023f6c780640d4df56921988e21998bd06a333dafd52f73bca6c8a9f1ba75d6af167bc001cfd4c15afe5238539abec772c50076bfcc2a904e9cbed6eeba330defeaa27b95b942a62dca9dd3130559c61811cd84f7ab83442d2fac85aa61ef126caf283cf0c075f33f856162d0b0eb4d6d409c24dda5f7630256cf177c9917036a520dc79a2b6179affab63b22e01d8f22af9af7bb6695fc3035aa63971d21ce44835030a5e63356389600d06348c063203a0bdbfe8c014640210522bdbd42b4fd001128b0783685566ced60acf3b44e9e69e668fba81f72370a05098edc42067cb3dd6f9daa908554ba01aa8406ce5ae82586630b2676d5847576e2769a9b51c02497d7093efa0a20e5757d1bb219c0659b35ac923f279ba6b527899d97c7239d6822282ceb05529cdc1039ee3d79b437a4f8c98f82e49ee8736ad80291c0ead5745e92c80b73866d8fbf36423f7effb38c3891f17c8871245e67649e0319e7a299b3348ccff29c0bb787f3f6850f734b4d36f4ca5be08a4f501c0b27fdbe8b4114c15a235dd272d1b5f5290a1885ca9d6d4c62cd7037fcb635c8911618a0f8984e742ede829a2940a1cc65ee84bcd841a6dee770a50775214520271f196e94c6adc5757ea83d90925e4b1317b0d04f0c4643082d838b49f663924458c3d786e88379b576ed3fdc894cb293ffdf0bb9bb9ff95366f5f043b35f113117cde251fc153fbfa4012215789684bdaaefdcf7a6cc7b3856974b623a3a0b98c95259e4bf2ddb2b3439f3ec3099d8650cd759e5e71ad5f93e636574d820a35f6415f62848178c1e09824f44fc43e4728ac64fbc25ec60561c28ba33e537db11cbda9989f8e33674c9a1ea177a1dd5ff35d390949cd1e88e919d02b351e094eb1b7775f7834ee53be16cf22235029bf358a24bf45f5e029f0f1745daabfe2ae0a773f2d929b9cba4a2d0bf1f0769bb5fbde0d15f66e26bdb472b0567ba443d1533fc988b54c1ff27f66d59e9e25dafa8a8a98cb4f1d539b588289e12d908497334f93e23f9b99df98d86f718f711ab01c42dd427c1cc48085b07edda52783b392fe167feeeffb3b51905643fb5ddcc0a01c1933dbd0251af164bc9f8dd4be3ffcd6d39f462a1abf8cc0b57e69e224944efbce4dc301bf76c94dc2a08fad761d225d21cefc7df3eb6ab900ae3c5cc1fc1ae4a953b6a602bd3cbe65dc2d9c8eb080b42a278b00d2827aaea25d8e51d24e60547170c17eb4776a37c7e040de3f4704a4c1849680b227c4afb8073e7dfe4fb9fe8a9e3ff775049b27f2cc71f0615030ee248e53e3e873d76a12fae507bf7151422fd78a3e6f43d4ae901adf813bdc3fffa32ab30308bc4ea9386f2159cc4d96ec97c8f13624b6fec233fb1e2ae3c04748adf2bcdf99b954b4cff3bddb0b8f17c2c3aee7ba9146692321f5ed04fd36331c9ed287acd5c854af657ebf028468a6ecef9a387fb8c9db0d11a41a102ad2f84d108f16193a8fddb736c38457a24c437d44f9079a5b3be95978590ed9e281ed5339995340730d35ce500076889455f673676cf49835ca5a491a89cc5c67246f65e0796acc4018ef98ed22c85c0e52a97ec53886a6e3aeba260839f85ea53ac45730dfed15bdb5ff113509934d10eba91923e5a378b8f4d8e257ed629cd01c3062b5eae5257dc4efdcc821db56b7f7463f87f17926979b0b514ef36f037750e95b67a1222e34a7fb16548967401d57d818e28504af6d5a20a9992fdc1d89c0f061fd6908791dddfd1fdd44120ce68d92a1e0cad1c05b2184408b451df018b8befb5e9e9e26ad5c4ab0c55fdba9ae011bd92dabb9269213ad78b351fe4f4fb2ebbeba5d8a1f9f024dea84b21eb04ce692496d24246ad27f8216674b5ddd519bce71a20ab546461ff09955a50e168916298e17a068a89b2312fe6e3ec4fae7334af569bc88ad055d44612b8f218d494e6d5f9626f86cea7673aff27aa35aeb16ffe76606f78ae7f4e8154adce98f2564f6de8c58bd7e843c0b2393ff820fd48112288fb7d13322b84ada1a25f8a19556e543f25ceb6a3140b38ae7f46f7d4fe8eccef5a92d0b83b000dd1fb75a8d4b56ca46f6854acf9bf623303126aa24a6588c5cca4df9923a099e6e57209ae49aa9b3bf37fc21e39560ccadb83ea127307621d9b53b61efc9af9161f24d9652739ada001b188468348b908e7d7c7b5ca2a707f4bb841aac197872f7c9e041a6d1dfbd7ccc18269745603860f6ecc5e04c74ed2ad75c37b560fd98ee3c409e21fc9b06bbd6b86d5850684d45c70dafc730c0ee254bac23b3b1c8fdabef880cf64abf1ad85f8b15b2d7aa6150ae5a19ac41aa68b3fda0d6a0c8b9979a72f42289ca98741391e706a804b4d40a62128a678862ca639625efb7db01d0b39bc87323a329aff55ce0a7664093d90216d24ab876a17d5747d8c1b0450d7d3ff7f2da5b61cf118955150bc0c69b618df595a35c32751a1b0802e1a9c29d653de17aa5347d302261360f708354df7ff6f3334856305ed878dda59941e2d90e2b3cf3c383f2172f2778fb824d4854cea3202b75ee53123d4277a6f7ccdfc2e7338186daa72e56bf9a741f72e48e43089d5e32b979437fc96150c727d0e0b90f56d877e46c8f797f7d81dcff1cd917ca25267cdd3c34abcc69d8bfab398b4b8ca10ea5dcef6881145a3bbdd1e09bfb870cff7e30e2af00b0a630e855e01b92f15d4ff955fddd76818a02bcb0e698808ff9ee87b105ffddab3eb4485274a5c895b971580363f12de0fbdcda64e7716b86ed7a144b3a7c47e541417bc6a05b128ccd26c4a8cdaef75b59ec4a08784e192a4cfee4ba90792cdcfc023732b5a84c0eebdc55da885cdee59177dc002fb9f1b26c02faf4e7344ed8e073caa301c74db07b598f83caf271c21977886d728784f9e164b416bb02db09ba8f927598ec84cb076708e5275028a7143740abe624571fb96cad2561ed9ddb4f02c96d3bb524e216e0fc3b9c90a862aed69f2a0ebd9db6abbff634a97afe05ffdaf4e1ccbfbc4298551462c5143bbba22a4195a9bcaf219c31bb7415ad0da37cba406d03a6e05b6b4c3f22aa0dba9cd792f31e2c270bf55c085788eacdad07dc3946d52e9acc157b27a639551f9b88389071fa0c786647ac7b42ff95541572604734b717c9eeb469e389d9ca9ec159d1044434b06d4a0f49b921e07f884992c1424cb65c4704fa8ab09bae57f88ec8ce0b4ccce7130419557327db7c4e12eba6b3930322f21c02e3b20cb95a329d981e17ce8ab5ef840c9381dde971cb428955004bd26059ab6d9848193665ac59bd5cf0eade98f62056b8435d04a095141e6ebbcea29a3153b332b268c407be90629e032c68a8ba0dd0559552c7ff3d8ea1cd7eb1d2e76f69b9a59ee64f51e02ab8abccae95b84905308f87cba0a421ee86263fc9e7a703020a3eedc88d8c87fe9efc14fa3dc519cfeac29f76388ca83b68d94aa617fba6eb76c782ad570c6d7f7ef0680b1d89f60b0231f80fdfca22ead218f491eb14f7285bd6d256a3fb4f71b6d2550725e7e48f404af5bb3d8ded15e17207c2df134c3d7451673d5b29b6106d1c4affcd1cb3b30e09156bdb126268e66f19b67f1574592b0749bc8d669de8d6fe0c0b3c6253b4f47d66b0233dedc35f4502c799b7700cc7b6e31a05de4ccd5d7f97552d5f7c19e1fb8b82189d9c5b28aebd660642d94c75359b2480d73e3530e2f84ef0151f729cc5c3f317828ad508a0f8f61663b610b2f86e6af08234e865d18cfdd76f71ac97de46ac23a0dbecaf4fd9bfa9a48a9f5a1c457b0b3b65ee09b59fcb99a40dc45fde6f4e9c87be9474ac71cb9c323834e6bf1395d3f93fa4fe4bb7bcbb7d2afe42cede1930e2493bd4107d28b4ec23b6fb98e68abfc3baeb7c1b6f51b3af940f7e86c8035df2d0888d4cf5e97bea4eec35fed23175bdf7135bfab7965970b8d90b9eb3ce7b52badaa967d72bff57fdd5a44ec16f065119b8f562948ecc1a63b205e0fa303cf89bd8a8404b43e14d7bb4e78e5d867695a103cb3b78d0356493f2f4153181388fbedae6292906dff740b40349d8e9a517d357a2a5713c45a13ebdd0f9ff13374a80bdbfaf0a56112f03a2a3cec40f59956528d315bd4626d4dad746fca0b9d344f59520d8b3671b69dbfb593d1395b44026699267af33024ff95b65594e01f63e4c995422c27398841e21c3a17e5a9397da7b116d6d4f93c678fe9d30501cb12b393a023023d622f406dfe38feea2fd63e8bbc21f7b797aeb6cb9d9432debb0b54cefd047a66a645612b8a766f1e67cb6eebc7023b71750f63035eef99b9f8f623fa057172865a8767a6533f88ac7599f117515ef95e4cd9e8a83f0369611efd6583f0b85e50a3375fbefb9e2c8f67c8c4d7f0456d18ee32b87cfeb3ba1e86157b742e3b589bc9b68952b0325d6020630fc71977e9c3c3af94b53cde0143779ffe774c309b437f729ae868e1120b875e107f249c1b003d23bfd97d7cc93c7f7e4e72f470f026aa08d2582319aafd20e3559f9e200d17fe6c18b53b3fb783a51910c8024faf751662b2a721533bdf763153b5aba95ac0d2280e3834490929ee681e9f6b0016c1b9d5ccda76d5af545f127ef07b1b1aa78dafff997ffe1e72b67bb2c2d96c8294f3e18b7f464570064b08da91f7dc0e4e596fe7737e18826b5b7ffe37498f1471b69deaa30405c0b4223a22c5b632a3517b2e1ee13d063846a6a54156487d98829a1c2af0c4e539b7f014b96af236aeedc2aa3067b062f25e57d2cc5e565cc26f3d0f2b682873868dd47e54d713fd89498b9a3ab342f217b73698fd65508e7dbdaf03a77e6a3ef07626ee5e0b3008076feb4238ee9ba22b12558c9f006e1d10db961d779d82c8f572de1e4d89c89ad266c9f113fe30f1b8fcdf4530b1df05a4715440f76aa8f8c3bb89d558e8c63cef2bd3febdd1aa4e9d3811fa862a5250e230e0f4c1cb87ee849c398cc1643026812ee1aad3b62bee602e6024214c9d8d8dc5e37556186852facfd2b8c5ff4fef3320ce259dd4796ae229a59a43324813190811453a7190725bdc26db0875d7606a6280551660d568bb67119f6ce66f775b8b825aa86072832de262e225a17242535f475b5ddf5d7d74174c79e6e80add1fc351de14a51adca34abc0750601c1de701f27b79cb3ae34a18f0110573d2a3a00d4e1623ef46c1960cad40fc7ab7b3d47feddb13bf585bb97d27dd55d6aed636eb053b138504c37f879bbb44f4db53db45fd15a6fbcbd8bb1fa3f1d893d6372b74f1a11a20b4f7d73bfabdcb9eebd1a0a47af917c4877f02796d49c3612662d22d34c3e239e7336d7e7d31416b9c0e78d09b1753637ea21075f84a4b273785166a26589f06acf6aa9badd4333c48312b7c39047aad5e2167d2aba7ba5aaaabd838e3f714c05ba42837476905db4c21601077dc999afd87cba3c0390990b9b648950e8833e849906d4794ee9ea1a5986ba73afda522ca28f9542f17f1c267a7bd8b64c8f662f5c05424c15d24488f79090d998e3d9a6fabff0263b1bd9b0272bef99788254f01e423a16c9ac2551dc4fc08155bc85405c5961bc018eb2102ba18ff8c181bfe6a53ce0942cf5034eca520f57cc76e855cdf5ea0d130ab7f8de617e4189b4820dd4bb7638071532f8f44c45449766870edab06e0495b3c5166d2506217a92642fe3c2609ae55b7e328c733e164a46cc40f852cf82d274b22167dbe4d033f9edc81a4a235b49d2ce84e28c02b0c4f4c873998922a1adf101d73dd51db0a6870fd00ce76c5f7fd8880263a78c220c313139856c3899655521283fae396ff993d3a1c920fae1754bd4f060cb29accb1a85c072d6ca1e379f6d73ddbce75bd58ffaf2e55e3d9adabd071d1e737962e8dd8e68b0e2d5f724aa32546d73e2b5bae33af4f974dd9a173c45ed6face23bebd9ba34dfbc3f70d86d897b7854b109dbb6b302b7697c3c3c172889b21915f8fe7d5492dedabbda3edc8c778cc28d95e499cd0f4255c8658fd0fcbffecfd10c926ad7b6e2d372a30bce90325843bc35bea50e01964b42326079911dc067570a4ac3af4204c06cbd19c9618645c5dec3ec4685fcb0dc14850e2e5daa0073cf6025d7d97cbdf25d141881a63d0f9c5145bad17d3b75acc5b5ac0236f9b53e34ccbbe0b79e7ebc7fed06d488522328476321298fdecf0b639dfc8a75a8a84b18ecf7fac6145a9213f65b57e07ba5fc438eb24c1ff288ba1fb9afb1ff12db56737426d53971cacce408ddd026e94e9c37ca22db36d3fdd826a5977d561f2832cf663a53e77a7b36910325fa6c58749d0d87951a9e29c132597357240e9a5516ae71547b174aebd8226be5ecc00f4c1fdf9cd35dde3b3e5ec68232dc1b51257f29980ecf66cf402c84944e6b9741bd3cc4be37015f0f7364a6e78b73050c4801e3ccff75cf5513eb6d9aa28c75e7b3c3eb4fbc01e88ac23ecd2b6730238e5416e0424989fde6121362cbcf387af9292aca4d9d9fec83a648a56e44227ad88b30cbabe1f14633d664d4459467da71e5c62a5d347ce2fb869d1fc43f7c6ce5807d28860e99881bb1bd3ee35f1d3d49d52440f539781a5a01c48af04e6f2b825186b08d5fc9a13f6a42c2523c9bdab16995d3ad71d9695861807fdf2a38d4e13701ece4b991a21e434aabb8e25f134e49eda4c8e0ed271952a8e7431679f65596dc86f10f98516c508f3aeb6f561abb2ff2392a5efbf971242b519f1bc49d49463fda5b2132bcfd3b0fc8a21e8c40bdfec97c8a7dc5240b93fbeecf7d2b1cdca324489e9941d40cbef064cccd47ad016906ba86ca79bcc35f42d6fa8b745d241c13ef3a9af2f6899873d641e7ce5fe0c9b4eac360c5e5f3e620cf25e5fe96cde65f55d6d447740f1410a13cd7534ffad4a9a339236f3312c98f09d779e629387dcca4455465b3cafe38ca3915a405a3519f1a9b52294c9e79caea98dded3ae4e6e5b06f400213c2907ad2a5d6c472f53f3962d2cee955536dbbce8f1717f25b2c69ccaf98c69b3d68f52636448c791dadfdfa82468ef81d79e7b549f652b2e0f0c5b4e667c1688ffb3523e23bbcf199bfe7f31456c17e826584e967918aa2be25302ad3dc15e0e6b770199ab22842baf6a6b6d64342334b787bd299db44bd13cb51b56bc9e3085600d9e28c761f83030bb1f758b347f80de76bc1e1f0516052e7cb723c5b6b57eb15ecbdc86a877130b3b6e8bf6082615569037af56142ab3a29bd5f16367d2e6674716b83fc5c043956c999fdacae8b1e79f379781f82dbe7124e1b94fd722b9656f56ad0758b7c1a22091fada9d9f6dc29a48bddce9c65bf8987c4ec57108618d4d58c4481c3e978a249edb02487813affbda46a113ac8a90c3ac7b287021b928bfa7a5db1330d0de52e7574f9032364f56c8d71ca644df638e04606f398e9bc229be737663c5db192d3fdfad784113262f7f145af22184adca06c7c21197f03d9c06b9c84bb09aef7a007d9b81f4c00a1a35705813e89f667e1c674e670f8e1e60e7a38c880fa9c6828caf73997b77518a93139055adf79d851f821c30dee22cae543ab0859a0033d1f469c941f9c95603773db4592e2f70967d1a50ff13ebb7d42e53932d8526a03d07d9726dc846ec65ed0598ae3063096013c0066ecfbe39fa826e0a5ca7e858eee8eddb7ee9323fda6a677bd8af9c5bbf3316bae2b261ba054e99cd7869a9535abe079858e9ccb9f247b3c68ae1cdd4a6c1ce6f9bb150dcdf2e2a7970acf5e76ed4100c1a6135574af6d0116eb44a24ad62d2b87f5ffcc00b7e96815972ad4e95746a2bc77fbd02c13ce518f77a5f98defe672f5ad262d4c269c6f7f5c1dea0b6b51e78afd5a7d51649f1db5a191afbad644381b41bcab88fd3975526e964d6ac0ab34a065163d07d83f66c08e175ce9809cc7d9cc284c84cf61631f42f5fa8e453b6ff84e6569b54b2d412924abb55c80f24332d284f7592264f7cdf1cc53f39fadb8d42a506d511f9d2567abae901e818a45b2d7cd753d0e46042e2553defaf93e7f8b9010c7257c72ca2d26f8c24a46b260a6f2b62c54135ae6aa0073971cad0690d18d92818e5b637e1898fc8e128f2c1e7cbbfc0b0a6c6d10857c832a1521e4216fdccb2c97a23b37cb50884f0b90e5a87322daf766786a67d5d889758a0d68dbc3879ceedff9199ea643417b7603caef00317d2f9df1c103dedd96bc3ce2c5be82a0ab167ab009aa816c18058ba4c718c9814e99c010338572824019a9ac87a3dcacaf89f5df1372ef3198673740ee260866fad87fec54b665e788b32eafbdf47452ae20f79df2a0316827db26ee6a60134a99f9b5d348228c371a6a9fc26d2b9edd22f8f9c1695938401e86b21196fd8751af13e64351530739bd4068d856e8a4eabf36e73929e38c45b6e66b30d955a3664b892cf227c3cd55894bdcce9c5ca7b01754f929fe78fd1c300c44912a2bff9cd4db669dd105d75a6fcb1035bb8b39791bb8524a2b6e9c2d7c5f86f8b93f8c292ea768959e0412343aa3fda3399ec18188011beab32d58bc3ba43b486c0a68aa195255e58ed730459358d8768e127e8d23b6b81426d62d00bdecc3f6d902b4f81c80e9ef39a285843a946229ef9459a4a7331e03b9e40deb55c93f5f94dcc4acda3a2aee551bc85b854c73c5f2de0b591bcf0adb77addfb2032af4706b0378df41a9514faeb4787355b8bfa9f507c5a95a3bebc8dfaab2c25cb03e4cd3379d0f5f2ecb3751f90013eeead1d8847220b206a15678e63840c7d246f420dd7ac82ebd3ce28013f28e54c1d03d56d21b3a1122d456f835235f1b75a032504e8775ae1782176a141b6f0bf2775ec00651a624791e0b3115dfda4af9cb3930efc1c23e8ef96ff0852cbc62f9c3d4271291950221494cb43567316b2924f698d89383665d789b3e0428b01d28222e55f2141f6254303e8b816f9c277ad0614c8a21c94e2fa06c77ebbfc44fdf0274d3d633ea5c0031462dcb315d9b5bebdf2c8cb41ef41c203a003a3bf3283ed7c2a3a52cc508da9f470e4b159a622a5e85e7c55a7ec43c1405fe25a7968ded6b181478d716a8ba158939ea7f73a5040a25b91f26aac1b73c1eaf3443add4fa0674ddc4c6120403b80c4caee266b4279d6a7bd8242fc17025f4fc5a89969a0b5c7b6b64f13782274b520009b4cbfad2c2baa4fc5d40b953aecb3f580cdf114fcb4734d4bbf42fd5355fe94ef1e78bb07facb7b3ce213d77505b39e82f1d9a1e68254adcec68392e44de235a19d4e2151493086cd1c75ab6a278a8d62daa87ac54151fc9b50f124efcd46b84a7ae084a557c2cc64582a6a2bf860f5bbd82112e4e3154bbf0e62c8a3ad2b3c47ebbb5d15a27d9d8762cfee2ce9ae3d0b60d43e73eee2ac3a9c662350e80470fdf34c5b00fc00a9e89f8958464a656a8a0f17a7d110a6fa0410c342eb1ca92f16a455e815672c385b60ad9ef3859b0d7c7caafc7936fdd63039e14deeb349149430f9b03a7a9a17cd6195d5f8154d2ec053eaf4155c9260bfcad43f575e15f2d8a29e2834df915cbc0ba0ec9acafa3326ba9f58b981a171a570a2f2e7dfba7787d4c51d182a3abaf9a843c59be580801675888cacd542950cb2cb9f5fb4cace30a84bedd3342d9c358168b3c2cb11dffa728bd995e99c818890f54fa5d7522c81bd6aca2161b38bccf05eb93a796a84008342e0253ff6c88105b69a8a19271de1ec1a0c8db4442753fc142d03e091fbea60af5278d4df2234c429e704811a5b68ef5cb4c72389b55ade7a58941d3c0e87e3a83a5e3eadd0e4db83ea8fcfed810f3a43dfa0e7f9c41c61742e5aa240ea148e303f0aab777407eb7d8a37aa9fe85645d240ed95e916bb3562baaf6c784e2141859e5ba313d87f50d3f97637de281b2d061e7bbf5bde3576d021950961a9f6638589a6ea5f4be012121bc684977e16b6b1993b4228034a69ec766fe9760800ce03815945f98b383a935354ebde84e7db604129797af0b678a7ad9d7094d13d801b72a6ee9367de0bd9749daa748e9f46397a73bb0874df765131ed7ccc775fd50adc3d09a45c3a096d5531eee69bc93bb6968e032530a716ad7c80d5085a22114f694af9f41c89be2b353a6aefd4d105d973b35b0e34fe907319ec1c5f35c55829278f7dfefcaae96b84cbd1789b16f401e6a240e0c01bfd5d73674434f5377d2201acc6b3eb4debfe31a55fcde99af89b86e33319a24ec48b10820a47166ac318bf69e8ab229bec15f4f2e27b1948ff44938b551c0e25b85dc80f8f4c75f39384ba04f342cbba95e3c686eb53060c635b05640868cdd6fd0d9b1b1a516df132d74edd216e7842f768b195b99ec81b357e05842463f77d0961a915fd5a09d128fb92e4c45b1a71f8ff4a9ed250f7cee0425e51d6b9676ef31b3fb3faa8b7faa41a3d0b69b8984ff7d29c05cb6a616d52dc314bcad1f6e4ef314cf785e950149360216a2418d0e9d2ad0b3c1f1ae689f345fd69488c218eebcfdd89db802661a470ca9692e90aa37edcb006001ee7038e1536c1b3f65f379d93a93c1622cc6baa1e93f1d420e8bd54c4cc4f9e87635d970c1847a46712a28d9f86bcdc66e497b759c7643f14eed365bfaad597e46d604f9c31a6490831fa7d3fb0c6425fcade12cff4b101655068ee75adf04fe2f6658eb10fa9ad75c659b59a0b29e337c9c4ba0ecb2293c8e0e2039dd437d9737d3b0e9f56172635c1e5cd7847afee5d78e668a0a9bade6e003210e05be66dcfe031dc7ab2795362e8cf21922ec3a7b40711d8c22ad0d282021028351f7a14763fd48030713b2cc246c00c1e085fa199287faa3148260a4a135a8453c4a52b5d3fdf6200daf67d2885bbca02641c37f6c29f536d5c8d274b368b1120a87e7d968ce66f97bacedb5f9452e9fe2bc8b65b0dfb99877088f1f2588d66c06438e3cf8570c49ff576e37b3efbecfe62fdbba595bd4ca3eb92ef4aae29f532402a95b47b24e62cabbb50af43aa262571f0b1783e75541070033b69254d6b9d05ae8a517743f478e42d91c68a44772fc815bdc3d045f7b0175b8a608cd5d8563abf29503ae6b6e20b621fab6652a9241928de5d91b413b1880dd7de082fe58fc0d889263993b5f0b2e3221dbccd64e62ba081e9d682990181265d4617a8c5b20fa39ac8090ed1881806a113d9fe0e48218b2a795eeed32489cf6af17461754d5f4e85a6266c3809f218c226c45b816502de2ae25cb91b55ddd6e9bdb487c39dfccd8c385e416901d8b59e3765489b0cdc5fa133a4707e5900a83e816c6a897b91b1c37cdeab5719f60689ba35021a85799b4fb3e1ce5ff67020365c577a0028293be9d17f1e9eb3f6eef94dba17050411ebfb53c81f89334e61616b08c8be6f7a046625c62d3a95f30e78a7498d9ba8d5df9e1fa5d17e7fcfc23409dfd4860aeb07737df2f6b3d202526a7c293a01da90c140f8e20262508a005c71a95877691eada2fdb08ab67501d47e76a64dbd6b56a9b6da466bd63577d1722b117ae4b5c039632c23e4a4b7762178669946ff22df5735e5246b16e56d9646365322310420f265a11ee791620b0781b2ca3166045a99e8c7e3c315581962aa27a7867e1f8b24e94cf3c66133a50347774a2915de35b08727cd719157481383126dc0dc26217bb407e6cdd47352856e8e9861debfb351c600adac65f18db5904b7bc04e7a20dc9df08e12c0a9bd232e894817b6af4dee77c32fa1c3e840b6190a5b08874d8ac76894fbd459492c9fe7434e68c05f72b46c2aa055f6a8e548fbe9f33b966d2944bcce50156710eabd8cffb86f01fd41e4deb32676ad4de9c6c4aa669e52429e783e47cee1aeeb4471757a7df7791dd0378080ca8f35af1a627327cc820c842bc547eddedc471c7db95e0029e750f6a59244af3da6eac002bf4b57a3a6e37e2957cdf260ff59d6798d42283690f46ec70b28c133ab7bf63e418e5901ded5d6bbb1ad245f9ec9f1bdf7c84d98e2c7ebe02545e94285ed4145ad029ff1d6526b5608a072e2d6ddcecdc61fde4082c9a2a87a42c66ba42f0023079989bf2f46c012aea6d294cc395a02c79b567ef117f30332e3635f5f981c931d223dda348086ce1c1eac5fc0dd97e3cb5395a2bd3c0bda9b0b05185c5c7e9b3b1ff93b592019382f7eb2120d7ca29505c06b887c6f2edc684ff2d2c0c68b829f787646fddf4fa90dbf3d4cab7c1d51563bd885d61ee2c5a6389843a4a7b7c50a1568538f2cbf5229ab7a6af7783a07c55a5024dce69555785ef04687850b2ba5ef57bdd6a34f88186a58d1eb894f3dbf7b61bb3951913403d08e500c28b701469913f57df2817e340aa87c79742e2063bf0315a37bfef665bdc86588ae4745694f6d20fc72887812426e813de564115cf09a0a2643ae0fed43dc3d640e241fca3e6a5da2175f2e360512b580d90757108c3c89909858a7493bf9edbf98877ce777c7c1e82223479ce30b27cc395285efa5d77ba1f6281bbb107bf822b4c6d8a5b56d2d69e83c73e88b0d0c08b098047e52ae8190364b26312610891986cefc9ac1195fe3fb72354ade03e70560bd8e4d4c870004bd43e39d2767f26de1e93eb8d664e229cb9898a3614168434d4bea4d3296af75432f9580bc6b45ee6533b805c57eca20e5ceb9ba84d2b6ca2b501dd5e19387960a2ab99331f50d8397e3ebeaa07709794ca951ca74f581aa467112dd773f1ee051153ec0d2a11ab1ad58759e6f33f9539895dbad048b2fbb668b143cd9099527d93a800e4a0c5b7244db4890a6aefa0a73c1e964fd69e73f5b0b7bb82ae9c4e3a9749cedf797cc8c94ab5edb9c2324cda55a197a6b7986b0693c79942540b0a7d63ec3795e3082b3a2594def50e1eb4671502f34c22bed0579c5379a21fe4ec24433205cb250492e50d75f6da64c8f7cb54650f1feb4356ada61104b4abeed2afd06828ba2f6adb54212a12a21187d7048110f448c311d1dc295a96f1553137b188b80dc391c5aa7aa8c777c298193932f6517f53c568892a370c4207b10571785433a5dbcdc338ba51af93baab4df20e81ce6e9426a16284f4a01ac645dafaac9b59c96367424093b8cb79e9d2e15a1d8ac15403db9e5f74e88e74e55b0a7c8678ae01ed761b3ba49a85b2f5e7fb768f7402a40d9565ecc1ae59c7bb58427c9d8c1c5d548e87913025fa8cf7a871f46874699568291534bd67438ef61fc9830b5d06cb87cafb29a2a6701d17102cb3fd8246ca61bfca48f5d5e23334d356e89b8a9359e8f6a8131c13c864788d6f6a0b04f1adb1739ed5059d612650a8742e85ecc9d9b95389ced6ef4c5e05792ee99acc8553d208b78025941802a9a8d9e6d9448202b85b998a1ac3755c72a428b56f6b794e3a30c4049304b1d2a2e4f7f855160603130ccbd81e2f5868c3a6d2e0a51dcea842feb8a6593473aa847</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（2）</title>
    <link href="https://jgxnb.cn/2023/02/10/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%882%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/02/10/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%882%EF%BC%89/</id>
    <published>2023-02-10T12:17:25.000Z</published>
    <updated>2023-02-12T03:20:24.040Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="37a9b03c70b4288c440348453e131370d3b615b0e9d1c5fcb50b4a03a6c80b14"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>md--书写格式汇总</title>
    <link href="https://jgxnb.cn/2023/02/05/md-%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F%E6%B1%87%E6%80%BB/"/>
    <id>https://jgxnb.cn/2023/02/05/md-%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F%E6%B1%87%E6%80%BB/</id>
    <published>2023-02-05T12:29:15.000Z</published>
    <updated>2023-02-12T03:12:52.685Z</updated>
    
    <content type="html"><![CDATA[<p>这一篇章是用来添加MD的书写格式</p><p><em><strong>*static有什么用途？（请至少说明两种）*</strong></em></p><p><font color="#dd0000">根据不同位数的有不同的答案：32位的4字节、64位的8字节。</font><br /></p><ul><li>一个有10个指针的数组，该指针是指向一个整型数的</li><li>一个指向有10个整型数数组的指针</li><li>一个指向函数的指针，该函数有一个整型参数并返回一个整型数</li><li> 一个有10个指针的数组，该指针指向一个函数，该函数有一个整型参数并返回一个整型数</li><li> （无需列表）</li></ul><table><thead><tr><th align="center">0000    0001</th><th align="center">内存高地址</th></tr></thead><tbody><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center">内存低地址&lt;——</td></tr></tbody></table><p>size为1：<font size="1">size为1</font><br /></p><p><font face="微软雅黑">我是微软雅黑字</font> </p><table>     <tr>         <td bgcolor=#FF00FF>背景色的设置是按照十六进制颜色值：#7FFFD4</td>        </tr> </table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*这里是文字*</span></span><br><span class="line"><span class="emphasis">_这里是文字_</span></span><br><span class="line"><span class="strong">**这里是文字**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*这里是文字<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~~这里是文字~~</span></span></span></span></span><br></pre></td></tr></table></figure><p><em>这里是文字</em><br><em>这里是文字</em><br><strong>这里是文字</strong><br><em><strong>这里是文字</strong></em><br><del>这里是文字</del></p><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。也可以直接写，也是可以显示成链接形式的</p><p><a href="https://blog.csdn.net/u014061630/article/details/81359144">(45条消息) Markdown语法图文全面详解(10分钟学会)_黑暗星球的博客-CSDN博客_markdown语法</a></p><p>（1）无序列表<br>使用 *，+，- 表示无序列表。<br>注意：符号后面一定要有一个空格，起到缩进的作用。</p><blockquote><p>这种语言习惯是从右到左书写，但是我们的习惯为从左到右进行书写，因此造成显示的错误，在这之前熟悉了一下语言的填加</p></blockquote><p>😊中文字符下alt+&gt;这个按键打印出来</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这一篇章是用来添加MD的书写格式&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*static有什么用途？（请至少说明两种）*&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#dd0000&quot;&gt;根据不同位数的有不同的答案：32位的4字节、64位的8字节。&lt;/fo</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>C语言——面试题</title>
    <link href="https://jgxnb.cn/2023/02/05/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://jgxnb.cn/2023/02/05/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2023-02-05T08:51:32.000Z</published>
    <updated>2023-02-05T14:09:16.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h1><p>公司面试题</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><em><strong>*程序的局部变量存在于___ 中，全局变量存在于____中，动态申请数据存在于___ 中。*</strong></em></p><p><font color="#dd0000">程序的局部变量存在于栈(stack) 中，全局变量存在于静态数据区中，动态申请数据存在于堆（heap）中。</font><br /></p><p>这一题全部是概念的问题，需要牢记！！</p><p><em><strong>*PC为32位机，计算该结构体大小？*</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">name1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> str;</span><br><span class="line">    <span class="keyword">short</span> x;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">&#125;;</span><br><span class="line">求<span class="keyword">sizeof</span>(name1)?  (<span class="number">8</span>字节)</span><br></pre></td></tr></table></figure><p>这一题考察的是结构体大小的计算，需要记住几个点（来自菜鸟教程）</p><ul><li>结构体变量的首地址能够被其最宽基本类型成员的大小所整除；</li><li>结构体每个成员相对于结构体首地址的偏移量（offset）都是成员大小的整数倍，如有需要编译器会在成员之间加上填充字（internal adding）；</li><li>结构体的总大小为结构体最宽基本类型成员大小的整数倍，如有需要编译器会在最末一个成员之后加上填充字节（trailing padding）</li></ul><p>题目中的三个变量大小分别为：1个字节、2个字节、4个字节。</p><p>char分配一个字节，short分配2个字节，由于int 为4个字节，此时前面1+2为3，不能满足int4字节的整数倍，因此对于要点2，会自动补上1字节，这样一来字节数变成4字节，加上int的4字节一共为8字节。</p><p><em>下面这个来测试一下</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">name2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> str;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">short</span> x;</span><br><span class="line">&#125;; 求<span class="keyword">sizeof</span>(name2)？ (<span class="number">12</span>字节)</span><br></pre></td></tr></table></figure><p><em><strong>*static有什么用途？（请至少说明两种）*</strong></em></p><ul><li>限制变量的作用域（static全局变量）；</li><li>设置变量的存储域（static局部变量）。</li></ul><p><em><strong>*void* p = malloc(100)，请计算sizeof(p)。*</strong></em></p><p><font color="#dd0000">根据不同位数的有不同的答案：32位的4字节、64位的8字节。</font><br /></p><p><em><strong>*写一个“标准”宏，这个宏输入两个参数并返回较*</strong></em></p><p><font color="#dd0000">#define Min(X, Y) ((X)&gt;(Y)?(Y):(X))</font><br /></p><p><em><strong>*结构体与联合体的区别。*</strong></em></p><p>结构体中的成员拥有独⽴的空间，共⽤体的成员共享同⼀块空间，但是每个共⽤体成员能访问共⽤区的空间⼤⼩是由成员⾃身的类型决定。<br>共用体使用覆盖技术，成员变量相互覆盖。</p><p><em><strong>*用变量a 给出下面的定义*</strong></em></p><ul><li>一个有10个指针的数组，该指针是指向一个整型数的</li><li>一个指向有10个整型数数组的指针</li><li>一个指向函数的指针，该函数有一个整型参数并返回一个整型数</li><li> 一个有10个指针的数组，该指针指向一个函数，该函数有一个整型参数并返回一个整型数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *  a[<span class="number">10</span>];      </span><br><span class="line"><span class="keyword">int</span> (*a)[<span class="number">10</span>]     </span><br><span class="line"><span class="keyword">int</span> (*a)(<span class="keyword">int</span>);</span><br><span class="line"><span class="keyword">int</span> (*a[<span class="number">10</span>])(<span class="keyword">int</span>)</span><br></pre></td></tr></table></figure><p><em><strong>*++a和a++的区别是什么?*</strong></em></p><p><font color="#dd0000">++a的是先加后取值，a++的是先取值后增加</font><br /></p><p><em><strong>*大端和小端*</strong></em></p><p>小端 - 低字节存储在低地址 高字节存储在最高地址</p><p>如：Intel、AMD、X86等采用的是这种方式；</p><p>大端- 高字节存储在低地址 低字节存储在高地址</p><h1 id="应用题"><a href="#应用题" class="headerlink" title="应用题"></a>应用题</h1><h2 id="取一个范围为-100-499的随机数"><a href="#取一个范围为-100-499的随机数" class="headerlink" title="取一个范围为-100~499的随机数"></a>取一个范围为-100~499的随机数</h2><p>运用到随机数</p><p>试卷上的答案</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rand_func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    </span><br><span class="line">    a = <span class="number">-100</span>;</span><br><span class="line">    srand(a);</span><br><span class="line">    b = rand() % <span class="number">600</span> + a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自己写的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> ret = (rand() % <span class="number">500</span>)<span class="number">-100</span>;<span class="comment">//可以生成-100~499的数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查错题1"><a href="#查错题1" class="headerlink" title="查错题1"></a>查错题1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是将输入的字符串拼接，&quot;姓名&quot;,&quot;张三&quot;=&gt;&quot;姓名张三&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">func</span><span class="params">(<span class="keyword">char</span>* ch1, <span class="keyword">char</span>* ch2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch[<span class="number">256</span>];<span class="comment">//</span></span><br><span class="line">    <span class="keyword">int</span> len;  </span><br><span class="line">    <span class="built_in">memcpy</span>(ch, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">    len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">    <span class="built_in">memcpy</span>(ch + len, ch2, <span class="built_in">strlen</span>(ch2));</span><br><span class="line">    len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">    ch[len] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* ch;</span><br><span class="line">  ch = func(<span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;合成字符串:%s\n&quot;</span>, ch);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一题主要考察的是局部变量跟全局变量的引用，局部变量，在函数运行完之后就会马上释放掉，最后返回ch时，返回的是一个空值，cahr* 返回的是地址，此地址已经被释放掉了，返回出来即为错误的，造成字符串的拼接失败，正确的改法如下代码所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[<span class="number">256</span>] ;</span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">func</span><span class="params">(<span class="keyword">char</span>* ch1, <span class="keyword">char</span>* ch2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memcpy</span>(ch, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">    len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">    <span class="built_in">memcpy</span>( ch + len , ch2, <span class="built_in">strlen</span>(ch2));<span class="comment">//</span></span><br><span class="line">    len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">    ch[len ] =<span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* ch;</span><br><span class="line">ch = func(<span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;合成字符串:%s\n&quot;</span>, ch);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把定义的char ch[256] 换成全局变量，此代码即可运行成功。</p><h2 id="查错题2"><a href="#查错题2" class="headerlink" title="查错题2"></a>查错题2</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是把一个字符串倒序, &quot;hello,world&quot;=&gt;&quot;dlrow,olleh&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* src = <span class="string">&quot;hello,world&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* dest = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* d = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* s = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    len = <span class="built_in">strlen</span>(src);</span><br><span class="line">dest = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(len);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dest == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d = dest;</span><br><span class="line">s = src[len - <span class="number">1</span>];<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len-- != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    d++ = s--;<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*d = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, dest);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该题目考察的是指针与数组之间的指向，以及指针查找字符串数据的位置，例如s = src[len - 1];这样的赋值会出现错误，即为把数据赋值在char* s的上，不是用地址来传递，根据调试出现这个错误</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205183337929.png" alt="image-20230205183337929"></p><p>正确的做法为：s = src + len -1,调试端如下</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205183629571.png" alt="image-20230205183629571"></p><p>更改完这个，一下子就看出来 d++ = s–，这里存在错误，d是指针你要改地址里的内容就是+ 星号，不然就是把指针值改掉了而不是改指针指向的内容，这部分不能这写，一开始我写成了这样*（d++） = s–，这里即出现了大问题，d上的数据为s上的地址，由于，char * 为一个字节，只会保存最后小端的地址最后的两个字节（我电脑是小端的），造成一开始数据不是反写的情况，具体如下调试说明：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205190025940.png" alt="image-20230205190025940"></p><p>赋值给d的地址最开始的最后俩位为7a转化为10进制即为122，对应ASCII即为z，这也是遇到的一个问题，分析出原因，理解了指针字符的作用，也间接的理解了大小端的关系。最后修改即为*（d++） = *（s–），取值的赋值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是把一个字符串倒序, &quot;hello,world&quot;=&gt;&quot;dlrow,olleh&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* src = <span class="string">&quot;hello,world&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* dest = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* d = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* s = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    len = <span class="built_in">strlen</span>(src);</span><br><span class="line">dest = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*len + <span class="number">1</span>);<span class="comment">//分配空间一开始写准确点</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\r\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*len);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x\r\n&quot;</span>,dest);</span><br><span class="line"><span class="comment">//printf(&quot;%d\r\n&quot;,len);</span></span><br><span class="line"><span class="keyword">if</span> (dest == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">d = dest; <span class="comment">//指向刚刚分配的空间首地址</span></span><br><span class="line">s = src + len - <span class="number">1</span> ;<span class="comment">//这样指向尾部数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len-- != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    *(d++) = *(s--);<span class="comment">//指向这个数据，把数据取出来，单纯的s--是数据的地址，会出现错误*(d++) = s--,因为由于char类型，只取地址的最低字节，出来应该即位ASCII码;</span></span><br><span class="line"> <span class="comment">//printf(&quot;s = %c\r\n&quot;,s);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*d = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, dest);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查错题3"><a href="#查错题3" class="headerlink" title="查错题3"></a>查错题3</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是将学生名记录在结构体表中，并统计学生个数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> *student;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line">&#125; INFO_TB;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    INFO_TB* pInfoTb;</span><br><span class="line"><span class="keyword">char</span>* ch1 = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* ch2 = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line">pInfoTb = (INFO_TB*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(INFO_TB));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pInfoTb == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student + len, ch2, <span class="built_in">strlen</span>(ch2));</span><br><span class="line">len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="built_in">free</span>(pInfoTb);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这到题考验的是结构体分配内存，主要卡点为，结构体中存在指针时，需要另外给结构体中的指针分配空间。</p><p>pInfoTb =(INFO_TB*)malloc(sizeof(INFO_TB));分配的是常量，例如int 、char之类的数据，没有给结构体中指向的数据分配空间，造成memcpy错误， memcpy(pInfoTb-&gt;student, ch1, strlen(ch1));这样写以及是地址指向了。另外，分配完空间需要及时的释放，不让会造成内存泄漏。pInfoTb-&gt;count++，看起来是没有问题的，但是在调试的时候出现如下问题：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205191905047.png" alt="image-20230205191905047"></p><p>这是没有初始化造成的，跟编译器有关，有的编译器会自动初始化，我使用的是VC++ 6.0版本比较老，没有初始化，在这里画了一些时间。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是将学生名记录在结构体表中，并统计学生个数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> *student;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line">&#125; INFO_TB;</span><br><span class="line"><span class="comment">//结构体中，有指针存在，需要单独给指针分配空间。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    INFO_TB* pInfoTb;</span><br><span class="line"><span class="keyword">char</span>* ch1 = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* ch2 = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">pInfoTb-&gt;count = <span class="number">0</span>;<span class="comment">//初始化需要加上。</span></span><br><span class="line">pInfoTb = (INFO_TB*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(INFO_TB));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pInfoTb == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给指针的内容分配空间。</span></span><br><span class="line">pInfoTb-&gt;student = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(ch1)+<span class="built_in">strlen</span>(ch2)+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (pInfoTb-&gt;student == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student + len, ch2, <span class="built_in">strlen</span>(ch2));</span><br><span class="line">len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="built_in">free</span>(pInfoTb-&gt;student);</span><br><span class="line"><span class="built_in">free</span>(pInfoTb);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的代码如上，这里说一下我的疑惑：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">free</span>(pInfoTb);</span><br><span class="line"><span class="built_in">free</span>(pInfoTb-&gt;student);</span><br></pre></td></tr></table></figure><p>能否这样写呢？或者只写一个free(pInfoTb);——不能，因为free(pInfoTb);知识释放这个结构体里面的空间而不会释放结构体指针里面指向的数据的空间，因此不能只写一个，反过来写，也不行，不然结构体以及释放掉了，那一个空的结构体去指向一个数据，这样是释放不掉的。</p><h2 id="请写出一个程序得出当前使用的是大端还是小端存储。"><a href="#请写出一个程序得出当前使用的是大端还是小端存储。" class="headerlink" title="请写出一个程序得出当前使用的是大端还是小端存储。"></a>请写出一个程序得出当前使用的是大端还是小端存储。</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">&#125;UN_DAT;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check_sys</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UN_DAT *p, dat;</span><br><span class="line">dat.i = <span class="number">1</span>;</span><br><span class="line">p = &amp;dat;</span><br><span class="line"><span class="keyword">return</span> dat.c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret = check_sys();</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;小端\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;大端\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>试卷上的参考答案是用指针，我来换一种方式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkCPU</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">w</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">char</span> b;</span><br><span class="line">&#125;c;</span><br><span class="line">c.a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(c.b == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;小端\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;大1\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断大小端的代码</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">checkCPU();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>达到的效果一致。大小端的区分要知道数据的在内存中的存放方式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> a=<span class="number">2</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">（未存储时）a=<span class="number">2</span>转化为<span class="number">16</span>进制时为：（<span class="number">00</span>就是高序字节）<span class="number">0x00</span>  <span class="number">00</span>  <span class="number">00</span>  <span class="number">02</span>(<span class="number">02</span>就是低序字节)(引用CSDNʕ•̀ o •́ʔ！文章)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205200403491.png" alt="image-20230205200403491"></p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205200517901.png" alt="image-20230205200517901"></p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/1675596569575.png" alt="1675596569575"></p><p>即可看出来，代码的部分是怎么描述的，我们假设其中一个字节的数据，就能知道另外三个字节的数据了，从而验证猜想。也就是char *p=(char *)&amp;a这句。以下是小端（引用CSDN不悔哥的例子）</p><table><thead><tr><th align="center">0000       0000</th><th align="center">内存高地址</th></tr></thead><tbody><tr><td align="center">0000       0000</td><td align="center"></td></tr><tr><td align="center">0000       0000</td><td align="center"></td></tr><tr><td align="center">0000       0001</td><td align="center">内存低地址&lt;——</td></tr></tbody></table><p>大端如下</p><table><thead><tr><th align="center">0000    0001</th><th align="center">内存高地址</th></tr></thead><tbody><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center">内存低地址&lt;——</td></tr></tbody></table><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次的联系弥补了自己的各个细节部分的缺少的点，更加完善了自己的知识体系。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目来源&quot;&gt;&lt;a href=&quot;#题目来源&quot; class=&quot;headerlink&quot; title=&quot;题目来源&quot;&gt;&lt;/a&gt;题目来源&lt;/h1&gt;&lt;p&gt;公司面试题&lt;/p&gt;
&lt;h1 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（1）</title>
    <link href="https://jgxnb.cn/2023/02/03/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%881%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/02/03/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%881%EF%BC%89/</id>
    <published>2023-02-03T14:50:09.000Z</published>
    <updated>2023-02-05T13:24:56.014Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f9e2dc8da0617dcbb70aa37229ed340f0e0404d5fc30a2f59d816f648e25d6af"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>C语言——猜字谜小游戏</title>
    <link href="https://jgxnb.cn/2023/01/30/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E7%8C%9C%E5%AD%97%E8%B0%9C%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <id>https://jgxnb.cn/2023/01/30/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E7%8C%9C%E5%AD%97%E8%B0%9C%E5%B0%8F%E6%B8%B8%E6%88%8F/</id>
    <published>2023-01-30T03:48:30.000Z</published>
    <updated>2023-01-30T09:00:20.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目使用知识点"><a href="#项目使用知识点" class="headerlink" title="项目使用知识点"></a>项目使用知识点</h1><p>​    C语言文件读取、写入、删除、更改以及列表的创建。</p><p>​    整体项目，在完善问题时，充分运用到了文件中的几个函数，可以做到读取文件的某一行；更改文件的某一行数据；添加新的数据在文件末尾；查询文件的当前数据。</p><h1 id="各个部分详细代码"><a href="#各个部分详细代码" class="headerlink" title="各个部分详细代码"></a>各个部分详细代码</h1><h2 id="登入密码"><a href="#登入密码" class="headerlink" title="登入密码"></a>登入密码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> pass[<span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; LNode,*pNode;</span><br><span class="line"></span><br><span class="line"><span class="function">pNode <span class="title">createList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pNode pHead = (pNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">pNode cur = pHead;</span><br><span class="line">FILE *fp = fopen(<span class="string">&quot;users.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;FILE NOT FOUND&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">pHead-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">pNode temp = (pNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"><span class="keyword">if</span>(!temp)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测到录入完毕后将分配的空间清除掉</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">2</span>!=<span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s%s&quot;</span>,temp-&gt;name,temp-&gt;pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(temp);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cur-&gt;next=temp;</span><br><span class="line">cur = temp;</span><br><span class="line">cur-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这行代码主要的主要作用是，获取文本中设置的账号密码，放入链表中，用来达到登入的效果，具体的登入判断代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">login</span><span class="params">(pNode head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> pass[<span class="number">10</span>];</span><br><span class="line">pNode temp = head-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span>==head-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;user list empty\n&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************************************\n&quot;</span> );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;          欢迎进入猜单词小游戏\n&quot;</span> );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************************************\n&quot;</span> );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;用户名:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;密码:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,pass);</span><br><span class="line"><span class="keyword">while</span>(temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>==<span class="built_in">strcmp</span>(temp-&gt;name,name) &amp;&amp; <span class="number">0</span>==<span class="built_in">strcmp</span>(temp-&gt;pass,pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;success...........\n&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp = temp-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;user not found.........\n&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这块使用到字符串的对比，文件系统的读取。</p><h2 id="进行拼写"><a href="#进行拼写" class="headerlink" title="进行拼写"></a>进行拼写</h2><p>进行拼写部分存在俩种模式，可以随机获取单词或者进行顺序拼写，从中使用到随机数组，来进行选取文件中的随机行号的数据，具体代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">(<span class="keyword">int</span> play_u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s1=<span class="number">0</span>,s2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">char</span> en[<span class="number">100</span>],ch[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//修改者：jgx 定义随机数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> whichline = <span class="number">0</span>;<span class="comment">//随机生成的行号</span></span><br><span class="line"><span class="keyword">int</span> currentindex = <span class="number">0</span>;<span class="comment">//用来匹配是否等于生成的行号 </span></span><br><span class="line">   <span class="comment">// int whichline =  rand()% (10 - 50 + 1) + 50;//生成m~n的随机数</span></span><br><span class="line">    <span class="comment">//定义游戏中退出变量</span></span><br><span class="line">    <span class="keyword">int</span> uExit = <span class="number">0</span>;</span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;words.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line">FILE* fp1 = fopen(<span class="string">&quot;word.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp1) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">//whichline =  rand()% (1 - rand_number +1 ) + rand_number - 1;//生成m~n的随机数</span></span><br><span class="line">whichline =  rand()% rand_number + <span class="number">1</span>;<span class="comment">//生成m~n的随机数</span></span><br><span class="line"><span class="comment">//printf(&quot;whichline = %d\r\n&quot;,whichline);</span></span><br><span class="line"><span class="keyword">if</span>(play_u == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(uExit &gt;= <span class="number">0</span> &amp;&amp; !feof(fp) &amp;&amp; !feof(fp1))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( currentindex == whichline )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏开始\n&quot;</span>);</span><br><span class="line"><span class="comment">//system(&quot;cls&quot;);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词的中文:\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>(fp1,<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fscanf</span>(fp1, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ch);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词的第一个字母:\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s&quot;</span>, en);<span class="comment">//fp是文件指针，指向要从该文件中将数据读出</span></span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,en[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">clock_t</span> start, end;</span><br><span class="line">start = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的答案：\n&quot;</span>);</span><br><span class="line">s1++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;_____\r&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line"><span class="comment">/************退出***********/</span></span><br><span class="line"><span class="comment">// 修改者：jgx</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,Game_exit)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏中退出游戏\r&quot;</span>);</span><br><span class="line">   <span class="comment">// printf(&quot;1 %d\r&quot;,uExit);</span></span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,en)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案正确\n&quot;</span>);</span><br><span class="line"><span class="comment">//printf(&quot;***********************\n&quot;);</span></span><br><span class="line">s2++;</span><br><span class="line">end = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;time=%0.2f\n\r&quot;</span>, (<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC &gt; <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏时间大于15S，游戏失败，1S后退出游戏\r\n&quot;</span>);</span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;time=%0.2f\n\r&quot;, (double)(end - start) / CLOCKS_PER_SEC);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案错误，还有%d次机会\n&quot;</span>,i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;正确答案为%s\n&quot;</span>,en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">currentindex++;</span><br><span class="line"><span class="built_in">fscanf</span>(fp1,<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s&quot;</span>,en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;currentindex = %d\r\n&quot;</span>,currentindex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//正常的流程，顺序排列。</span></span><br><span class="line"><span class="keyword">while</span>(uExit &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp1,<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fscanf</span>(fp1, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ch);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词的第一个字母:\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s&quot;</span>, en);<span class="comment">//fp是文件指针，指向要从该文件中将数据读出</span></span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,en[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">clock_t</span> start, end;</span><br><span class="line">start = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的答案：\n&quot;</span>);</span><br><span class="line">s1++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;_____\r&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line"><span class="comment">///************退出***********/</span></span><br><span class="line"><span class="comment">// 修改者：jgx</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,Game_exit)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏中退出游戏\r&quot;</span>);</span><br><span class="line">   <span class="comment">// printf(&quot;1 %d\r&quot;,uExit);</span></span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,en)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案正确\n&quot;</span>);</span><br><span class="line"><span class="comment">//printf(&quot;***********************\n&quot;);</span></span><br><span class="line">s2++;</span><br><span class="line">end = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;time=%0.2f\n\r&quot;</span>, (<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC &gt; <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏时间大于15S，游戏失败，1S后退出游戏\r\n&quot;</span>);</span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;time=%0.2f\n\r&quot;, (double)(end - start) / CLOCKS_PER_SEC);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案错误，还有%d次机会\n&quot;</span>,i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;正确答案为%s\n&quot;</span>,en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//正常的流程，顺序排列</span></span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fp1);</span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加新单词"><a href="#添加新单词" class="headerlink" title="添加新单词"></a>添加新单词</h2><p>添加新单词在末尾新添加单词，具体代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;word.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line">FILE* fp1 = fopen(<span class="string">&quot;words.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line"><span class="keyword">char</span> en[<span class="number">100</span>],ch[<span class="number">100</span>]; <span class="comment">//建立临时储存新增数据的结构体变量</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp1) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要添加的英文:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要添加的中文:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">&quot;%s\n&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fprintf</span>(fp1,<span class="string">&quot;%s\n&quot;</span>,en);</span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fp1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词添加成功！\n&quot;</span>);</span><br><span class="line">menu_words();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除某个单词"><a href="#删除某个单词" class="headerlink" title="删除某个单词"></a>删除某个单词</h2><p>文件系统的删除单词是使用到定位的方法，定位出某一行，再把其他的写入新的文本文件，重新重命名，最后把原来的文件删除，在这里面使用到先获取文件内的行数，再进行操作：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************获取文件列表*******************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">words_menu</span><span class="params">(<span class="keyword">char</span>* filepath,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp = fopen(filepath, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line">    <span class="keyword">char</span> en[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> num_u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">while</span>(!feof(fp)) &#123;</span><br><span class="line">num_u++;</span><br><span class="line">fgets(en,<span class="keyword">sizeof</span>(en), fp);</span><br><span class="line">        <span class="keyword">if</span>(feof(fp))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="comment">//防止最后俩个数据打印 //在代码中又不存在重复的情况，重复目前推测是最后的数据有回车换行导致</span></span><br><span class="line"><span class="keyword">if</span>( n == <span class="number">1</span> )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;en[%d] = %s \r\n&quot;</span>,num_u,en);</span><br><span class="line">    &#125;</span><br><span class="line">rand_number = num_u;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除功能如下</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">char</span>* filepath, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">4096</span>]; <span class="comment">//每读取一行，都将内容放到该数组中</span></span><br><span class="line"></span><br><span class="line">        FILE* fp = fopen(filepath, <span class="string">&quot;r&quot;</span>); <span class="comment">//filepath里是原内容</span></span><br><span class="line"></span><br><span class="line">        FILE* fpt = fopen(<span class="string">&quot;temp.txt&quot;</span>, <span class="string">&quot;w&quot;</span>); <span class="comment">//将filepath文件第n行内容删除后存入temp.txt中</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!feof(fp))</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            i++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == n) <span class="comment">//删掉第n行，其实就是读到第n行时，仅仅移动一下文件指针，否则就</span></span><br><span class="line"></span><br><span class="line">            &#123; <span class="comment">//将读取到的一行文件内容放到临时文件中temp.txt中，这就是所谓的删除</span></span><br><span class="line"></span><br><span class="line">                fgets(buf,<span class="keyword">sizeof</span>(buf), fp); <span class="comment">//必须要这一行，因为加上后文件指针将会移动</span></span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fgets(buf, <span class="keyword">sizeof</span>(buf), fp);</span><br><span class="line">   <span class="comment">// printf(&quot;buf[%d] = %s \r\n&quot;,i,buf);</span></span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line"><span class="comment">//while(strcmp(buf,&quot;\n&quot;) == 0);</span></span><br><span class="line">                <span class="built_in">fprintf</span>(fpt, <span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fclose(fpt);</span><br><span class="line">remove(filepath);</span><br><span class="line">rename(<span class="string">&quot;temp.txt&quot;</span>,<span class="string">&quot;words.txt&quot;</span>);</span><br><span class="line">menu_words();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************/</span></span><br></pre></td></tr></table></figure><h2 id="更改单词"><a href="#更改单词" class="headerlink" title="更改单词"></a>更改单词</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">char</span>* filepath,<span class="keyword">int</span> n,<span class="keyword">char</span> *c,<span class="keyword">int</span> clean)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">char</span> buf[<span class="number">4096</span>]; <span class="comment">//每读取一行，都将内容放到该数组中</span></span><br><span class="line">    <span class="keyword">int</span> write_size = <span class="number">0x100</span>;</span><br><span class="line"><span class="keyword">int</span> offset = <span class="number">0x100</span>;</span><br><span class="line">        FILE* fp = fopen(filepath, <span class="string">&quot;r&quot;</span>); <span class="comment">//filepath里是原内容</span></span><br><span class="line"></span><br><span class="line">        FILE* fpt = fopen(<span class="string">&quot;temp.txt&quot;</span>, <span class="string">&quot;w&quot;</span>); <span class="comment">//将filepath文件第n行内容删除后存入temp.txt中</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!feof(fp))</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            i++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == n) <span class="comment">//删掉第n行，其实就是读到第n行时，仅仅移动一下文件指针，否则就</span></span><br><span class="line"></span><br><span class="line">            &#123; <span class="comment">//将读取到的一行文件内容放到临时文件中temp.txt中，这就是所谓的删除</span></span><br><span class="line"><span class="keyword">while</span>(clean--)</span><br><span class="line">&#123;</span><br><span class="line">fputc(<span class="number">0xFF</span>, fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fpt, <span class="string">&quot;%s&quot;</span>, c);</span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line"><span class="keyword">if</span> ( i == n)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">// fprintf(fpt, &quot;%s&quot;, c);</span></span><br><span class="line">&#125;</span><br><span class="line">                fgets(buf, <span class="keyword">sizeof</span>(buf), fp);</span><br><span class="line">   <span class="comment">// printf(&quot;buf[%d] = %s \r\n&quot;,i,buf);</span></span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line">                <span class="built_in">fprintf</span>(fpt, <span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fclose(fpt);</span><br><span class="line">remove(filepath);</span><br><span class="line">rename(<span class="string">&quot;temp.txt&quot;</span>,<span class="string">&quot;words.txt&quot;</span>);</span><br><span class="line">menu_words();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这个方法是根据删除部分修改的，加入了更改第行的数据，把原本的数据线清空，在写入，最开始多了一步清空的操作。</p><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>​        感谢桉提供原始代码！在基础上进行修改~（2月底去厦门找你玩）</p><p>​        在编写这一套代码时，由于太长时间没有接触这一方面的代码，文件系统的相关API，这次充分复习了一下，把fopen、fclose、fputc、fgetc、fscanf、fread、fwrite、fseek。</p><p>​        在完善代码的同时，遇到了二进制打开文件，利用fread“wb+”,发现读取的时候打印数据出来正常，但是打开文本文件时发现乱码的情况，经过了解分析，使用这个是会出现这种情况，最后利用了fscanf、fgetc系列。</p><p>​        在工作中，也有遇见读取文件的项目，但是那时候不是重点，没有过多的花时间了解，这次的编写，也弥补了这一方面的短缺。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目使用知识点&quot;&gt;&lt;a href=&quot;#项目使用知识点&quot; class=&quot;headerlink&quot; title=&quot;项目使用知识点&quot;&gt;&lt;/a&gt;项目使用知识点&lt;/h1&gt;&lt;p&gt;​    C语言文件读取、写入、删除、更改以及列表的创建。&lt;/p&gt;
&lt;p&gt;​    整体项目，在完善</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言——字符串、数据转换</title>
    <link href="https://jgxnb.cn/2023/01/24/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE/"/>
    <id>https://jgxnb.cn/2023/01/24/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE/</id>
    <published>2023-01-24T07:53:12.000Z</published>
    <updated>2023-01-26T08:23:12.755Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章来源："><a href="#文章来源：" class="headerlink" title="文章来源："></a>文章来源：</h1><p>​    出自一位同事的分享，因此这些代码只截取部分，很早以前就想看了，由于工作原因，一直抽不出身来。放假了好好参透了一下，接下来，将会讲解一下。</p><h2 id="字符串内反向查找指定字符串"><a href="#字符串内反向查找指定字符串" class="headerlink" title="字符串内反向查找指定字符串"></a>字符串内反向查找指定字符串</h2><p>​    函数如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *Src = <span class="string">&quot;1234567890!&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> *Find = <span class="string">&quot;56&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *pSrc_u;<span class="comment">//调试中便于查看数据</span></span><br><span class="line"><span class="keyword">char</span> *pFind_u;<span class="comment">//调试中便于查看数据</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">strFindStrReversal</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">unsigned</span> <span class="keyword">char</span> *pFind, <span class="keyword">int</span> iFindLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">for</span> (i = iSrcLen - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (*(pSrc + i) == *(pFind + iFindLen - <span class="number">1</span>))</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    strFindStrReversal(Src,<span class="number">5</span>,Find,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​        查找的核心部分代码如上，根据VC++ debug效果显示，从要选择第几个常数开始，进行反向的查找要查找的字符串，如定义俩个简单的字符串char <em>Src，</em>Find；者Src中就从第5位开始查找，Fing中的字符串。</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/01.png" alt="01"></p><h2 id="字符串内查找指定字符串"><a href="#字符串内查找指定字符串" class="headerlink" title="字符串内查找指定字符串"></a>字符串内查找指定字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">strFindStr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">unsigned</span> <span class="keyword">char</span> *pFind, <span class="keyword">int</span> iFindLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iSrcLen; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">                 <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; iFindLen; j++)</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这套代码即为最常见正序寻找。这里不做过多讲解，粘贴出来主要部分。</p><h2 id="字符串内查找第N个字符后的数据长度"><a href="#字符串内查找第N个字符后的数据长度" class="headerlink" title="字符串内查找第N个字符后的数据长度"></a><em>字符串内查找第N个字符后的数据长度</em></h2><p>​        这个函数是在要查找的字符串中查找到需要查到的数据，查找到几次后，并算出后面还有几个数据，次核心代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *Src = <span class="string">&quot;1234ccc890!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *pSrc_u;</span><br><span class="line"><span class="keyword">char</span> *pFind_u;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strFindStrLen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">unsigned</span> <span class="keyword">char</span> pFind, <span class="keyword">int</span> iFindNum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">          <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iSrcLen; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              ...</span><br><span class="line">                  <span class="keyword">if</span> (*(pSrc + i) == pFind)</span><br><span class="line">              ...</span><br><span class="line">          &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    strFindStrLen(Src,<span class="number">10</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        根据调试，可以看出最后返回的数字为6：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/02-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%86%85%E6%89%BE%E5%88%B0N%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%BB%A5%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE.png" alt="02-字符串内找到N个字符以后的数据"></p><h2 id="在字符串内查找定义开始结束字符之间的数有多少（改）"><a href="#在字符串内查找定义开始结束字符之间的数有多少（改）" class="headerlink" title="在字符串内查找定义开始结束字符之间的数有多少（改）"></a><em>在字符串内查找定义开始结束字符之间的数有多少</em>（改）</h2><p>​        该函数可以直观的查找到需要的区间之内的数据，相关的代码段如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">strFindStrSpan</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">int</span> iStart, <span class="keyword">int</span> iEnd, <span class="keyword">unsigned</span> <span class="keyword">char</span> cChar, <span class="keyword">int</span> *iOutLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">         <span class="keyword">if</span> (*(pSrc + i) == cChar &amp;&amp; iFlg == <span class="number">0</span>)</span><br><span class="line">    ...</span><br><span class="line">         <span class="keyword">if</span> (*(pSrc + i) == cChar)</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= iEnd)</span><br><span class="line">        &#123;</span><br><span class="line">          </span><br><span class="line">             <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   strFindStrSpan(Src,<span class="number">10</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="string">&#x27;c&#x27;</span>,len);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        根据调试最终的结果如下图所示：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/03-%E5%BC%80%E5%A7%8B%E5%88%B0%E7%BB%93%E6%9D%9F%E7%9A%84%E6%95%B0%E9%87%8F.png" alt="03-开始到结束的数量"></p><h1 id="查找某个字符的个数"><a href="#查找某个字符的个数" class="headerlink" title="查找某个字符的个数"></a><em>查找某个字符的个数</em></h1><p>​        在某个字符串中查找，某个字符的作用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findcharnum</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pData, <span class="keyword">int</span> iSize, <span class="keyword">unsigned</span> <span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">         <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iSize; i++)</span><br><span class="line">         &#123;</span><br><span class="line">             ...</span><br><span class="line">                 k++;</span><br><span class="line">             ...</span><br><span class="line">         &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        代码的整个核心思想就如上部分所示。</p><h2 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h2><p>​        这个部分后面更新，代码部分还未了解充分，后期补上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文章来源：&quot;&gt;&lt;a href=&quot;#文章来源：&quot; class=&quot;headerlink&quot; title=&quot;文章来源：&quot;&gt;&lt;/a&gt;文章来源：&lt;/h1&gt;&lt;p&gt;​    出自一位同事的分享，因此这些代码只截取部分，很早以前就想看了，由于工作原因，一直抽不出身来。放假了好好参透</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>基于STM32的桌面精灵</title>
    <link href="https://jgxnb.cn/2023/01/22/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%B2%BE%E7%81%B5/"/>
    <id>https://jgxnb.cn/2023/01/22/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%B2%BE%E7%81%B5/</id>
    <published>2023-01-22T05:09:21.000Z</published>
    <updated>2023-01-22T14:59:30.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作品总介绍："><a href="#作品总介绍：" class="headerlink" title="作品总介绍："></a>作品总介绍：</h1><p>​        基于STM32单片机以STM32F103C8T6为核心控制配备ESP32运行FreeRtos，搭载LD3322,以实现通过WiFi协议技术实现HTTP协议制作网页界面和语音控制来实现桌面摆件的互动性和开关对应摆件功能，例如风扇、灯、雾化器以及MP3播放功能，同时通过SSD1603驱动IC和DHT11测量当前温度并显示在OLED上。</p><h2 id="硬件方面："><a href="#硬件方面：" class="headerlink" title="硬件方面："></a>硬件方面：</h2><p>​        主控：STM32F103C8T6</p><p>​        语音模块：LD3322</p><p>​        WIFI模块：ESP32</p><p>​        MP3模块：MY2490</p><p>​        以及一些其他的模块，硬件方面的连接这里先不做讲解，后续慢慢补充。</p><h2 id="软件方面："><a href="#软件方面：" class="headerlink" title="软件方面："></a>软件方面：</h2><p>​        工具：Keil、Arduino IDE、智能公元（LD3322编写平台）</p><h1 id="整体方案："><a href="#整体方案：" class="headerlink" title="整体方案："></a>整体方案：</h1><p>​        <img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230122134030153.png" alt="image-20230122134030153"></p><h2 id="软件实现步骤："><a href="#软件实现步骤：" class="headerlink" title="软件实现步骤："></a>软件实现步骤：</h2><h3 id="智能公元"><a href="#智能公元" class="headerlink" title="智能公元"></a>智能公元</h3><p>​        在这个平台可以进行对LD3322进行配置，详细的配置效果如下</p><p>​        <img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E6%99%BA%E8%83%BD%E5%85%AC%E5%85%83.png" alt="智能公元"></p><p>​        通过配置识别语音之后，发送串口信息给主控芯片，从而进行后续的操作，对于如何操作、配置可以去入手LD3322，官方会给予详细的操作指南。</p><h3 id="STM32代码部分截取"><a href="#STM32代码部分截取" class="headerlink" title="STM32代码部分截取"></a>STM32代码部分截取</h3><p>​        实现串口通信代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(USART2_RX_STA&amp;(<span class="number">1</span>&lt;&lt;<span class="number">15</span>))</span><br><span class="line">&#123; </span><br><span class="line">USART2_RX_STA&amp;=~(<span class="number">1</span>&lt;&lt;<span class="number">15</span>);</span><br><span class="line"><span class="keyword">switch</span>(USART2_RX_BUF[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x11</span>:</span><br><span class="line">OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">85</span>,<span class="number">6</span>,Atomizer);</span><br><span class="line">    WU=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x12</span>:</span><br><span class="line">OLED_Clear();</span><br><span class="line">    WU=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x13</span>:</span><br><span class="line">  OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">2</span>,<span class="string">&quot;Open the fan&quot;</span>,<span class="number">32</span>);</span><br><span class="line">    FAN=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x14</span>:</span><br><span class="line">OLED_Clear();</span><br><span class="line">FAN=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x15</span>:</span><br><span class="line">LED=<span class="number">1</span>;</span><br><span class="line">OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">  ledon =<span class="number">1</span>;</span><br><span class="line">  ledonsecond =<span class="number">1</span>;</span><br><span class="line">  OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">93</span>,<span class="number">7</span>,LED);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x16</span>:</span><br><span class="line">LED=<span class="number">0</span>;</span><br><span class="line">ledonsecond =<span class="number">0</span>;</span><br><span class="line">  OLED_Clear();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x17</span>:</span><br><span class="line">UART3SendByte5(tt[<span class="number">0</span>],tt[<span class="number">1</span>],tt[<span class="number">2</span>],tt[<span class="number">3</span>],tt[<span class="number">4</span>]);</span><br><span class="line">OLED_DrawBMP(<span class="number">55</span>,<span class="number">1</span>,<span class="number">80</span>,<span class="number">6</span>,col);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x18</span>:</span><br><span class="line">UART3SendByte5(tt2[<span class="number">0</span>],tt2[<span class="number">1</span>],tt2[<span class="number">2</span>],tt2[<span class="number">3</span>],tt2[<span class="number">4</span>]);</span><br><span class="line">OLED_Clear();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x19</span>:</span><br><span class="line">UART3SendByte5(tt1[<span class="number">0</span>],tt1[<span class="number">1</span>],tt1[<span class="number">2</span>],tt1[<span class="number">3</span>],tt1[<span class="number">4</span>]);</span><br><span class="line">OLED_DrawBMP(<span class="number">55</span>,<span class="number">1</span>,<span class="number">80</span>,<span class="number">6</span>,col);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x21</span>:</span><br><span class="line">ESP32RESET = <span class="number">1</span>;</span><br><span class="line">esp32status =<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">USART2_RX_STA=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        代码中详细区分了不同的串口信息，STM32将执行不同的操作。可以进行LED、雾化器、风扇的开关以及MP3的音乐控制。</p><p>​        其中挑选几个封装函数进行讲解：</p><p>​        1.UART3SendByte5(tt1[0],tt1[1],tt1[2],tt1[3],tt1[4])：串口发送5个字节的数据，详细代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tt[]=&#123;<span class="number">0x7E</span>,<span class="number">0X03</span>,<span class="number">0X11</span>,<span class="number">0x12</span>,<span class="number">0xEF</span>&#125;;<span class="comment">//播放</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tt1[]=&#123;<span class="number">0x7E</span>,<span class="number">0X03</span>,<span class="number">0X13</span>,<span class="number">0x10</span>,<span class="number">0xEF</span>&#125;;<span class="comment">//下一首</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tt2[]=&#123;<span class="number">0x7E</span>,<span class="number">0X03</span>,<span class="number">0X1C</span>,<span class="number">0x1F</span>,<span class="number">0xEF</span>&#125;;<span class="comment">//暂停</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART3SendByte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">USART_SendData(USART3,SendData);</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET);    </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART3SendByte5</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData1,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData2,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData3,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData4,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData5)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">UART3SendByte(SendData1);</span><br><span class="line">UART3SendByte(SendData2);</span><br><span class="line">UART3SendByte(SendData3);</span><br><span class="line">UART3SendByte(SendData4);</span><br><span class="line">UART3SendByte(SendData5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        简单的串口发送，封装发送五个字节的串口函数，使得MP3发生不同的操作。</p><p>​        2.OLED_Clear()、void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[])、void OLED_ShowString(u8 x,u8 y,u8 chr[],u8 Char_Size)这类函数就是OLED显示屏的相关函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawBMP</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> x0, <span class="keyword">unsigned</span> <span class="keyword">char</span> y0,<span class="keyword">unsigned</span> <span class="keyword">char</span> x1, <span class="keyword">unsigned</span> <span class="keyword">char</span> y1,<span class="keyword">unsigned</span> <span class="keyword">char</span> BMP[])</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> x,y;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">  <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x0,y); </span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">    &#123;      </span><br><span class="line">    OLED_WR_Byte(BMP[j++],OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>​        OLED_DrawBMP():通过不同的位置信息摆放图像的位置，最后一个参数即为图片，代码中有Atomizer、LED这类的图片，由于没有找到满意的风扇图片，这里就显示字符串，字符串的相关代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 chr[],u8 Char_Size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;OLED_ShowChar(x,y,chr[j],Char_Size); </span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        其他的一些初始化部分代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> esp32status = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> esp32count = <span class="number">0</span>;</span><br><span class="line">Gpio();</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_Configuration();  <span class="comment">//中断分组</span></span><br><span class="line">USART2_Init(<span class="number">9600</span>);<span class="comment">//串口2初始化与LD3322连接</span></span><br><span class="line">USART3_Init(<span class="number">9600</span>);<span class="comment">//串口3初始化与MY240连接</span></span><br><span class="line">delay_ms(<span class="number">1000</span>);</span><br><span class="line">OLED_Init();</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_Display_On();</span><br></pre></td></tr></table></figure><h3 id="ESP32相关代码"><a href="#ESP32相关代码" class="headerlink" title="ESP32相关代码"></a>ESP32相关代码</h3><p>​        这一部分中可以收获到ESP32连接WiFi、ESP32制作网页界面、ESP32运行freeRTOS。</p><h4 id="ESP32连接WIFI"><a href="#ESP32连接WIFI" class="headerlink" title="ESP32连接WIFI"></a>ESP32连接WIFI</h4><p>​        整体步骤为：判断是否连接过网络，连接过则获取之前保存的信息，如果没有则进行搜索附近WIFI，选定自己熟悉的WiFi进行连接，相关代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESPmDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_wifi.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* AP_SSID  = <span class="string">&quot;ESP32_Config&quot;</span>; <span class="comment">//热点名称</span></span><br><span class="line">String wifi_ssid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String wifi_pass = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String scanNetworksID = <span class="string">&quot;&quot;</span>;<span class="comment">//用于储存扫描到的WiFi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROOT_HTML  <span class="meta-string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;WIFI Config by lwang&lt;/title&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&lt;/head&gt;&lt;style type=\&quot;text/css\&quot;&gt;.input&#123;display: block; margin-top: 10px;&#125;.input span&#123;width: 100px; float: left; float: left; height: 36px; line-height: 36px;&#125;.input input&#123;height: 30px;width: 200px;&#125;.btn&#123;width: 120px; height: 35px; background-color: #000000; border:0px; color:#ffffff; margin-top:15px; margin-left:100px;&#125;&lt;/style&gt;&lt;body&gt;&lt;form method=\&quot;GET\&quot; action=\&quot;connect\&quot;&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi SSID&lt;/span&gt;&lt;input type=\&quot;text\&quot; name=\&quot;ssid\&quot;&gt;&lt;/label&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi PASS&lt;/span&gt;&lt;input type=\&quot;text\&quot;  name=\&quot;pass\&quot;&gt;&lt;/label&gt;&lt;input class=\&quot;btn\&quot; type=\&quot;submit\&quot; name=\&quot;submit\&quot; value=\&quot;Submie\&quot;&gt; &lt;p&gt;&lt;span&gt; Nearby wifi:&lt;/P&gt;&lt;/form&gt;&quot;</span></span></span><br><span class="line"><span class="function">WebServer <span class="title">server</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESET_PIN   13  <span class="comment">//用于删除WiFi信息</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AutoConfig</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wifi_Config</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  pinMode(RESET_PIN, INPUT_PULLUP);</span><br><span class="line">  <span class="comment">// 连接WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (!AutoConfig())</span><br><span class="line">  &#123;</span><br><span class="line">    wifi_Config();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//用于删除已存WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (digitalRead(RESET_PIN) == LOW) &#123;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    esp_wifi_restore();</span><br><span class="line">    delay(<span class="number">10</span>);</span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() == WL_CONNECTED) &#123;<span class="comment">//WIFI已连接</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于配置WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wifi_Config</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;scan start&quot;</span>);</span><br><span class="line">  <span class="comment">// 扫描附近WiFi</span></span><br><span class="line">  <span class="keyword">int</span> n = WiFi.scanNetworks();</span><br><span class="line">  Serial.println(<span class="string">&quot;scan done&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;no networks found&quot;</span>);</span><br><span class="line">    scanNetworksID = <span class="string">&quot;no networks found&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.print(n);</span><br><span class="line">    Serial.println(<span class="string">&quot; networks found&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="comment">// Print SSID and RSSI for each network found</span></span><br><span class="line">      Serial.print(i + <span class="number">1</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">      Serial.print(WiFi.SSID(i));</span><br><span class="line">      Serial.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.RSSI(i));</span><br><span class="line">      Serial.print(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">      Serial.println((WiFi.encryptionType(i) == WIFI_AUTH_OPEN) ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;*&quot;</span>);</span><br><span class="line">      scanNetworksID += <span class="string">&quot;&lt;P&gt;&quot;</span> + WiFi.SSID(i) + <span class="string">&quot;&lt;/P&gt;&quot;</span>;</span><br><span class="line">      delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.mode(WIFI_AP);<span class="comment">//配置为AP模式</span></span><br><span class="line">  boolean result = WiFi.softAP(AP_SSID, <span class="string">&quot;&quot;</span>); <span class="comment">//开启WIFI热点</span></span><br><span class="line">  <span class="keyword">if</span> (result)</span><br><span class="line">  &#123;</span><br><span class="line">    IPAddress myIP = WiFi.softAPIP();</span><br><span class="line">    <span class="comment">//打印相关信息</span></span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;Soft-AP IP address = &quot;</span>);</span><br><span class="line">    Serial.println(myIP);</span><br><span class="line">    Serial.println(String(<span class="string">&quot;MAC address = &quot;</span>)  + WiFi.softAPmacAddress().c_str());</span><br><span class="line">    Serial.println(<span class="string">&quot;waiting ...&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;  <span class="comment">//开启热点失败</span></span><br><span class="line">    Serial.println(<span class="string">&quot;WiFiAP Failed&quot;</span>);</span><br><span class="line">    delay(<span class="number">3000</span>);</span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (MDNS.begin(<span class="string">&quot;esp32&quot;</span>)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;MDNS responder started&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//首页</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, ROOT_HTML + scanNetworksID + <span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//连接</span></span><br><span class="line">  server.on(<span class="string">&quot;/connect&quot;</span>, []() &#123;</span><br><span class="line"></span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;font size=\&quot;10\&quot;&gt;successd,wifi connecting...&lt;br /&gt;Please close this page manually.&lt;/font&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    WiFi.softAPdisconnect(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//获取输入的WIFI账户和密码</span></span><br><span class="line">    wifi_ssid = server.arg(<span class="string">&quot;ssid&quot;</span>);</span><br><span class="line">    wifi_pass = server.arg(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">    server.close();</span><br><span class="line">    WiFi.softAPdisconnect();</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi Connect SSID:&quot;</span> + wifi_ssid + <span class="string">&quot;  PASS:&quot;</span> + wifi_pass);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置为STA模式并连接WIFI</span></span><br><span class="line">    WiFi.mode(WIFI_STA);</span><br><span class="line">    WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());</span><br><span class="line">    <span class="keyword">uint8_t</span> Connect_time = <span class="number">0</span>; <span class="comment">//用于连接计时，如果长时间连接不成功，复位设备</span></span><br><span class="line">    <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;  <span class="comment">//等待WIFI连接成功</span></span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">      Connect_time ++;</span><br><span class="line">      <span class="keyword">if</span> (Connect_time &gt; <span class="number">80</span>) &#123;  <span class="comment">//长时间连接不上，复位设备</span></span><br><span class="line">        Serial.println(<span class="string">&quot;Connection timeout, check input is correct or try again later!&quot;</span>);</span><br><span class="line">        delay(<span class="number">3000</span>);</span><br><span class="line">        ESP.restart();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;WIFI Config Success&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">    Serial.print(<span class="string">&quot;  LocalIP:&quot;</span>);</span><br><span class="line">    Serial.print(WiFi.localIP());</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">  server.begin();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于上电自动连接WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AutoConfig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  WiFi.begin();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> wstatus = WiFi.status();</span><br><span class="line">    <span class="keyword">if</span> (wstatus == WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;WIFI SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;, PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      Serial.print(<span class="string">&quot;LocalIP:&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.localIP());</span><br><span class="line">      Serial.print(<span class="string">&quot; ,GateIP:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.gatewayIP());</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;WIFI AutoConfig Waiting......&quot;</span>);</span><br><span class="line">      Serial.println(wstatus);</span><br><span class="line">      delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;WIFI AutoConfig Faild!&quot;</span> );</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​        这一段代码，可以实现WiFi的连接，连接后，我们进行下一步、制作网页界面，制作网页界面需要HTML相关知识用来制作控制界面，以及温湿度显示界面。</p><h4 id="ESP32控制界面部分"><a href="#ESP32控制界面部分" class="headerlink" title="ESP32控制界面部分"></a>ESP32控制界面部分</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"> client.println(<span class="string">&quot;HTTP/1.1 200 OK&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Content-type:text/html&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Connection: close&quot;</span>);</span><br><span class="line">            client.println();</span><br><span class="line">  </span><br><span class="line">            <span class="function">turns the GPIOs on <span class="keyword">and</span> off</span></span><br><span class="line"><span class="function">            <span class="title">if</span> <span class="params">(header.indexOf(<span class="string">&quot;GET /LED/on&quot;</span>) &gt;= <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 on&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">22</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /LED/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 off&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">25</span>, LOW);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">5</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">33</span>, LOW);</span><br><span class="line">            &#125;</span><br><span class="line"> <span class="comment">/*********************************fan***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/on&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">23</span>, HIGH);</span><br><span class="line">              </span><br><span class="line">              &#125;<span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/off&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">26</span>, LOW);</span><br><span class="line">              &#125;</span><br><span class="line"><span class="comment">/******************************刷新按钮***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /new&quot;</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">               Serial.println(<span class="string">&quot;new&quot;</span>);</span><br><span class="line">              </span><br><span class="line">              &#125;</span><br><span class="line"><span class="comment">/******************************END**************************************/</span></span><br><span class="line">            <span class="comment">// Display the HTML web page</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;head&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;link rel=\&quot;icon\&quot; href=\&quot;data:,\&quot;&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// CSS to style the on/off buttons </span></span><br><span class="line">            <span class="comment">// Feel free to change the background-color and font-size attributes to fit your preferences</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;style&gt;html &#123; font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button &#123; background-color: #4CAF50; border: none; color: white; padding: 16px 40px;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;text-decoration: none; font-size: 30px; margin: 2px; cursor: pointer;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button2 &#123;background-color: #555555;&#125;&lt;/style&gt;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Web Page Heading</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;body&gt;&lt;h1&gt;桌面精灵&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 26  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;LED - State &quot;</span> + LED + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output26State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (LED==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; </span><br><span class="line">               </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 27  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;atomizer - State &quot;</span> + ATOMIZER + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output27State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (ATOMIZER==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*****************************Fan*************************************/</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;fan - State &quot;</span> + FAN + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (FAN==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h4 id="ESP32温湿度显示界面"><a href="#ESP32温湿度显示界面" class="headerlink" title="ESP32温湿度显示界面"></a>ESP32温湿度显示界面</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************温湿度显示**********************************/</span></span><br><span class="line">            <span class="keyword">if</span>(FAN==<span class="string">&quot;off&quot;</span> || DHT11_STATUS == <span class="number">0</span>)</span><br><span class="line">            &#123;    </span><br><span class="line">                client.println(<span class="string">&quot;&lt;a &gt;&lt;button class=\&quot;button top1\&quot;&gt;&amp;#x6E29;&amp;#x6E7F;&amp;#x5EA6;&amp;#x663E;&amp;#x793A;&lt;/button&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/a&gt;&lt;center style=\&quot;position: relative;\&quot;&gt;&lt;/br&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;temp\&quot;&gt;温度&lt;span style=\&quot;color: red;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.temperature);</span><br><span class="line">                client.println(<span class="string">&quot;°C&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;humi\&quot;&gt;湿度&lt;span style=\&quot;color: green;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.humidity);</span><br><span class="line">                client.println(<span class="string">&quot;%&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;/br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">/*******************************END*************************************/</span></span><br></pre></td></tr></table></figure><p>​        由于助于大家理解，下面附上HTML界面代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;data:,&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">html</span> &#123; <span class="attribute">font-family</span>: Helvetica; <span class="attribute">display</span>: inline-block; <span class="attribute">margin</span>: <span class="number">0px</span> auto; <span class="attribute">text-align</span>: center;&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.button</span> &#123;  <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>; <span class="attribute">border</span>: none; <span class="attribute">color</span>: white; <span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none; <span class="attribute">font-size</span>: <span class="number">30px</span>; <span class="attribute">margin</span>: <span class="number">2px</span>; <span class="attribute">cursor</span>: pointer;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.button2</span> &#123;<span class="attribute">background-color</span>: <span class="number">#555555</span>;&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>ESP32 Web Server<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>LED - State &quot; + LED + &quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>&quot;/<span class="attr">LED</span>/<span class="attr">on</span>\&quot;&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">\</span>&quot;<span class="attr">button</span>\&quot;&gt;</span>ON<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./pin?light1=1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button top1&quot;</span>&gt;</span><span class="symbol">&amp;#x6E29;</span><span class="symbol">&amp;#x6E7F;</span><span class="symbol">&amp;#x5EA6;</span><span class="symbol">&amp;#x663E;</span><span class="symbol">&amp;#x793A;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span> <span class="attr">style</span>=<span class="string">&quot;left: 20px; position: relative;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">br</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./pin?light1=1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;temp&quot;</span>&gt;</span>温度<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red;  font-size: 25px;&quot;</span>&gt;</span></span><br><span class="line">        00°C<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./pin?light1=0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;humi&quot;</span>&gt;</span>湿度<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: green;font-size: 25px;&quot;</span>&gt;</span></span><br><span class="line">            00%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​        我们移动端上显示的效果类似这种样式，具体还有写修改，可以创建完WiFi进行体验。</p><p>​        对于freeRTOS相关的是运用了ESP32的双核，在每个核上跑一个任务，详细的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task1code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task2code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">xTaskCreatePinnedToCore(Task1code, <span class="string">&quot;Task1&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">1</span>, <span class="literal">NULL</span>,  <span class="number">1</span>);<span class="comment">//</span></span><br><span class="line">xTaskCreatePinnedToCore(Task2code, <span class="string">&quot;Task2&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>,  <span class="number">0</span>);<span class="comment">//</span></span><br><span class="line">  <span class="comment">//实现任务的函数名称（task1）；任务的任何名称（“ task1”等）；分配给任务的堆栈大小，以字为单位；任务输入参数（可以为NULL）；任务的优先级（0是最低优先级）；任务句柄（可以为NULL）；任务将运行的内核ID（0或1）</span></span><br><span class="line">&#125;<span class="comment">//这边进行略写</span></span><br></pre></td></tr></table></figure><p>完整代码如下：    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;soc/rtc_cntl_reg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESPmDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_wifi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;HTTPClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;text.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="comment">/**********************温湿度定义***************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dht11.h&gt;</span></span></span><br><span class="line">dht11 DHT11;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11PIN 2</span></span><br><span class="line"><span class="keyword">int</span> DHT11_STATUS = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> DHT11_COUNT = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*******************************END**************************************************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* AP_SSID  = <span class="string">&quot;ESP32_Config&quot;</span>; <span class="comment">//热点名称</span></span><br><span class="line">String wifi_ssid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String wifi_pass = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String scanNetworksID = <span class="string">&quot;&quot;</span>;<span class="comment">//用于储存扫描到的WiFi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROOT_HTML  <span class="meta-string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;WIFI Config by lwang&lt;/title&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&lt;/head&gt;&lt;style type=\&quot;text/css\&quot;&gt;.input&#123;display: block; margin-top: 10px;&#125;.input span&#123;width: 100px; float: left; float: left; height: 36px; line-height: 36px;&#125;.input input&#123;height: 30px;width: 200px;&#125;.btn&#123;width: 120px; height: 35px; background-color: #000000; border:0px; color:#ffffff; margin-top:15px; margin-left:100px;&#125;&lt;/style&gt;&lt;body&gt;&lt;form method=\&quot;GET\&quot; action=\&quot;connect\&quot;&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi SSID&lt;/span&gt;&lt;input type=\&quot;text\&quot; name=\&quot;ssid\&quot;&gt;&lt;/label&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi PASS&lt;/span&gt;&lt;input type=\&quot;text\&quot;  name=\&quot;pass\&quot;&gt;&lt;/label&gt;&lt;input class=\&quot;btn\&quot; type=\&quot;submit\&quot; name=\&quot;submit\&quot; value=\&quot;Submie\&quot;&gt; &lt;p&gt;&lt;span&gt; Nearby wifi:&lt;/P&gt;&lt;/form&gt;&quot;</span></span></span><br><span class="line"><span class="comment">/****************************************************网页定义*********************************/</span></span><br><span class="line"><span class="comment">// Variable to store the HTTP request</span></span><br><span class="line">String header;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Auxiliar variables to store the current output state</span></span><br><span class="line">String LED= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">String ATOMIZER= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">String FAN = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">String NEW = <span class="string">&quot;REFRESH&quot;</span>;</span><br><span class="line"><span class="comment">// Assign output variables to GPIO pins</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> output26 = <span class="number">23</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> output27 = <span class="number">27</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Current time</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> currentTime = millis();</span><br><span class="line"><span class="comment">// Previous time</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> previousTime = <span class="number">0</span>; </span><br><span class="line"><span class="comment">// Define timeout time in milliseconds (example: 2000ms = 2s)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> timeoutTime = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">/*********************************************变量********************************/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tool</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> ledinput;</span><br><span class="line">  <span class="keyword">int</span> faninput;</span><br><span class="line">  <span class="keyword">int</span> wuinput;</span><br><span class="line">&#125;tools;</span><br><span class="line">tools ntools;</span><br><span class="line"><span class="keyword">bool</span> resetesp = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/******************************************END************************************/</span></span><br><span class="line"><span class="function">WiFiServer <span class="title">server1</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"><span class="function">WebServer <span class="title">server</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESET_PIN   13  <span class="comment">//用于删除WiFi信息</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************OLED*****************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_SSD1306.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_WIDTH 128 <span class="comment">// 设置OLED宽度,单位:像素</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_HEIGHT 64 <span class="comment">// 设置OLED高度,单位:像素</span></span></span><br><span class="line"><span class="comment">// 自定义重置引脚,虽然教程未使用,但却是Adafruit_SSD1306库文件所必需的</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_RESET 4</span></span><br><span class="line"><span class="function">Adafruit_SSD1306 <span class="title">display</span><span class="params">(SCREEN_WIDTH, SCREEN_HEIGHT, &amp;Wire, OLED_RESET)</span></span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *ntpServer = <span class="string">&quot;pool.ntp.org&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> gmtOffset_sec = <span class="number">8</span> * <span class="number">3600</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> daylightOffset_sec = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/************************OLED*****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task1code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task2code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    pinMode(RESET_PIN, INPUT);</span><br><span class="line"><span class="comment">/***************************控制引脚*******************************/</span></span><br><span class="line">    pinMode(<span class="number">33</span>, OUTPUT);</span><br><span class="line">    pinMode(<span class="number">5</span>, OUTPUT);      <span class="comment">// set the fan pin mode</span></span><br><span class="line"></span><br><span class="line">    pinMode(<span class="number">25</span>, OUTPUT);</span><br><span class="line">    pinMode(<span class="number">22</span>, OUTPUT);      <span class="comment">// set the LED pin mode</span></span><br><span class="line"></span><br><span class="line">    pinMode(<span class="number">26</span>, OUTPUT);</span><br><span class="line">    pinMode(<span class="number">23</span>, OUTPUT);      <span class="comment">//at</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    pinMode(<span class="number">34</span>, INPUT);</span><br><span class="line">    pinMode(<span class="number">35</span>, INPUT);       <span class="comment">//LED</span></span><br><span class="line">    pinMode(<span class="number">32</span>, INPUT);      <span class="comment">// </span></span><br><span class="line"><span class="comment">/*******************串口2当做IO口使用*************************/</span></span><br><span class="line">    pinMode(<span class="number">17</span>, OUTPUT);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">/************************end******************************/</span></span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">25</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">22</span>, LOW); </span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">33</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">5</span>, LOW); </span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">26</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">23</span>, LOW); </span><br><span class="line"></span><br><span class="line">   pinMode(DHT11PIN,OUTPUT);  </span><br><span class="line"><span class="comment">/*************************DHT11**************************/</span></span><br><span class="line">   digitalWrite(<span class="number">17</span>, HIGH); </span><br><span class="line"><span class="comment">/****************************END***********************************/</span></span><br><span class="line"></span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We start by connecting to a WiFi network</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">// 连接WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (!AutoConfig())</span><br><span class="line">  &#123;</span><br><span class="line">    wifi_Config();</span><br><span class="line">    Serial.println(<span class="string">&quot;esp32 reset&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connected.&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">    WRITE_PERI_REG(RTC_CNTL_BROWN_OUT_REG, <span class="number">0</span>);<span class="comment">//关闭低电压检测,避免无限重启</span></span><br><span class="line">    xTaskCreatePinnedToCore(Task1code, <span class="string">&quot;Task1&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">1</span>, <span class="literal">NULL</span>,  <span class="number">1</span>);<span class="comment">//</span></span><br><span class="line">    xTaskCreatePinnedToCore(Task2code, <span class="string">&quot;Task2&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>,  <span class="number">0</span>);<span class="comment">//</span></span><br><span class="line">  <span class="comment">//实现任务的函数名称（task1）；任务的任何名称（“ task1”等）；分配给任务的堆栈大小，以字为单位；任务输入参数（可以为NULL）；任务的优先级（0是最低优先级）；任务句柄（可以为NULL）；任务将运行的内核ID（0或1）</span></span><br><span class="line">  <span class="comment">//Serial.begin(115200);</span></span><br><span class="line">    server1.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task1code</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span> </span>&#123;</span><br><span class="line">  <span class="comment">//setup部分</span></span><br><span class="line">  <span class="keyword">for</span> (;;)<span class="comment">//相当于loop</span></span><br><span class="line">&#123;</span><br><span class="line">   digitalWrite(<span class="number">25</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">22</span>, LOW); <span class="comment">//LED</span></span><br><span class="line">   digitalWrite(<span class="number">26</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">23</span>, LOW); <span class="comment">//WU</span></span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">33</span>, HIGH); <span class="comment">//FAN</span></span><br><span class="line">   digitalWrite(<span class="number">5</span>, LOW); </span><br><span class="line"><span class="comment">/*******************串口2DHT11******************************************/</span></span><br><span class="line">   digitalWrite(<span class="number">17</span>, HIGH); </span><br><span class="line"><span class="comment">/********************************检测开关状态****************************/</span></span><br><span class="line">  ntools.ledinput = digitalRead(<span class="number">35</span>);</span><br><span class="line">   ntools.wuinput = digitalRead(<span class="number">34</span>);</span><br><span class="line">   ntools.faninput = digitalRead(<span class="number">32</span>);</span><br><span class="line">   delay(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">if</span>(ntools.ledinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput high &quot;</span>); </span><br><span class="line">          LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.ledinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput low &quot;</span>); </span><br><span class="line">          <span class="comment">//digitalWrite(25, HIGH); </span></span><br><span class="line">          LED = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ntools.faninput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput high &quot;</span>); </span><br><span class="line">          FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.faninput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          FAN = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ntools.wuinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput high &quot;</span>); </span><br><span class="line">          ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.wuinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          ATOMIZER = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">/******************************END***************************************/</span> </span><br><span class="line"><span class="comment">/*************************************温湿度定义********************************/</span></span><br><span class="line">  <span class="comment">//byte temperature = 0;</span></span><br><span class="line">  <span class="comment">//byte humidity    = 0;</span></span><br><span class="line">  <span class="comment">//int chk = DHT11.read(DHT11PIN);</span></span><br><span class="line">  <span class="comment">//Serial.print(&quot;temperature =&quot;);</span></span><br><span class="line">  <span class="comment">//Serial.println((int)DHT11.temperature);     </span></span><br><span class="line">  <span class="comment">//Serial.print(&quot;humidity =&quot;);</span></span><br><span class="line">  <span class="comment">//Serial.println((int)DHT11.humidity);   </span></span><br><span class="line">  <span class="comment">/*********************************判断是否重启**************************************/</span></span><br><span class="line">  <span class="keyword">if</span>(resetesp == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     resetesp =<span class="number">0</span>;</span><br><span class="line">     ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">     Serial.println(<span class="string">&quot;esp32 restart!!!!&quot;</span>);  </span><br><span class="line">    &#125; </span><br><span class="line">    Serial.println(<span class="string">&quot; no  no esp32 restart!!!!&quot;</span>);  </span><br><span class="line">  <span class="comment">/**********************************是否重置网络************************************/</span></span><br><span class="line">    <span class="comment">//用于删除已存WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (digitalRead(RESET_PIN) == HIGH) &#123;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    esp_wifi_restore();</span><br><span class="line">    delay(<span class="number">10</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot; esp32  esp_wifi_restore()!!!!&quot;</span>);  </span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line">   <span class="comment">/************************************END****************************************/</span></span><br><span class="line">  <span class="comment">/************************************END****************************************/</span></span><br><span class="line">  server.handleClient();</span><br><span class="line">  WiFiClient client = server1.available();   <span class="comment">// listen for incoming clients</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  <span class="keyword">if</span> (client) &#123;    </span><br><span class="line">    currentTime = millis();</span><br><span class="line">    previousTime = currentTime;</span><br><span class="line">    Serial.println(<span class="string">&quot;New Client.&quot;</span>);          <span class="comment">// print a message out in the serial port</span></span><br><span class="line">    String currentLine = <span class="string">&quot;&quot;</span>;                <span class="comment">// make a String to hold incoming data from the client</span></span><br><span class="line">   <span class="keyword">while</span> (client.connected() &amp;&amp; currentTime - previousTime &lt;= timeoutTime) &#123;  <span class="comment">// loop while the client&#x27;s connected</span></span><br><span class="line">      currentTime = millis();</span><br><span class="line">      <span class="keyword">if</span> (client.available()) &#123;             <span class="comment">// if there&#x27;s bytes to read from the client,</span></span><br><span class="line">     <span class="keyword">char</span> c = client.read();             <span class="comment">// read a byte, then</span></span><br><span class="line">        Serial.write(c);                    <span class="comment">// print it out the serial monitor</span></span><br><span class="line">        header += c;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>) &#123;                    <span class="comment">// if the byte is a newline character</span></span><br><span class="line">          <span class="comment">// if the current line is blank, you got two newline characters in a row.</span></span><br><span class="line">          <span class="comment">// that&#x27;s the end of the client HTTP request, so send a response:</span></span><br><span class="line">          <span class="keyword">if</span> (currentLine.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)</span></span><br><span class="line">            <span class="comment">// and a content-type so the client knows what&#x27;s coming, then a blank line:</span></span><br><span class="line">            client.println(<span class="string">&quot;HTTP/1.1 200 OK&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Content-type:text/html&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Connection: close&quot;</span>);</span><br><span class="line">            client.println();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// turns the GPIOs on and off</span></span><br><span class="line">            <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /LED/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 on&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">22</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /LED/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 off&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">25</span>, LOW);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">5</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">33</span>, LOW);</span><br><span class="line">            &#125;</span><br><span class="line"> <span class="comment">/*********************************fan***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/on&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">23</span>, HIGH);</span><br><span class="line">              </span><br><span class="line">              &#125;<span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/off&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">26</span>, LOW);</span><br><span class="line">              </span><br><span class="line">              &#125;</span><br><span class="line"><span class="comment">/******************************刷新按钮***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /new&quot;</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">               Serial.println(<span class="string">&quot;new&quot;</span>);</span><br><span class="line">              </span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************END**************************************/</span></span><br><span class="line">            <span class="comment">// Display the HTML web page</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;head&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;link rel=\&quot;icon\&quot; href=\&quot;data:,\&quot;&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// CSS to style the on/off buttons </span></span><br><span class="line">            <span class="comment">// Feel free to change the background-color and font-size attributes to fit your preferences</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;style&gt;html &#123; font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button &#123; background-color: #4CAF50; border: none; color: white; padding: 16px 40px;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;text-decoration: none; font-size: 30px; margin: 2px; cursor: pointer;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button2 &#123;background-color: #555555;&#125;&lt;/style&gt;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Web Page Heading</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;body&gt;&lt;h1&gt;桌面精灵&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 26  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;LED - State &quot;</span> + LED + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output26State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (LED==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; </span><br><span class="line">               </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 27  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;atomizer - State &quot;</span> + ATOMIZER + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output27State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (ATOMIZER==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*****************************Fan*************************************/</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;fan - State &quot;</span> + FAN + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (FAN==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">/*******************************温湿度显示**********************************/</span></span><br><span class="line">            <span class="keyword">if</span>(FAN==<span class="string">&quot;off&quot;</span> || DHT11_STATUS == <span class="number">0</span>)</span><br><span class="line">            &#123;    </span><br><span class="line">                client.println(<span class="string">&quot;&lt;a &gt;&lt;button class=\&quot;button top1\&quot;&gt;&amp;#x6E29;&amp;#x6E7F;&amp;#x5EA6;&amp;#x663E;&amp;#x793A;&lt;/button&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/a&gt;&lt;center style=\&quot;position: relative;\&quot;&gt;&lt;/br&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;temp\&quot;&gt;温度&lt;span style=\&quot;color: red;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.temperature);</span><br><span class="line">                client.println(<span class="string">&quot;°C&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;humi\&quot;&gt;湿度&lt;span style=\&quot;color: green;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.humidity);</span><br><span class="line">                client.println(<span class="string">&quot;%&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;/br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*******************************NEW*************************************/</span></span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&quot;</span> + NEW + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/new\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;NEW&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">/*******************************END*************************************/</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// The HTTP response ends with another blank line</span></span><br><span class="line">            client.println();</span><br><span class="line">            <span class="comment">// Break out of the while loop</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// if you got a newline, then clear currentLine</span></span><br><span class="line">            currentLine = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c != <span class="string">&#x27;\r&#x27;</span>) &#123;  <span class="comment">// if you got anything else but a carriage return character,</span></span><br><span class="line">          currentLine += c;      <span class="comment">// add it to the end of the currentLine</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Clear the header variable</span></span><br><span class="line">    header = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// Close the connection</span></span><br><span class="line">    client.stop();</span><br><span class="line">    Serial.println(<span class="string">&quot;Client disconnected.&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task2code</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//setup部分</span></span><br><span class="line">    Wire.setPins(<span class="comment">/*SDA*/</span><span class="number">18</span>,<span class="comment">/*SCL*/</span><span class="number">19</span>);</span><br><span class="line">  <span class="comment">//初始化OLED并设置其IIC地址为 0x3C</span></span><br><span class="line">  display.begin(SSD1306_SWITCHCAPVCC, <span class="number">0x3C</span>);</span><br><span class="line">  <span class="comment">//清除屏幕</span></span><br><span class="line">  display.clearDisplay();</span><br><span class="line">  <span class="comment">//设置字体颜色,白色可见</span></span><br><span class="line">  display.setTextColor(WHITE);</span><br><span class="line">  <span class="comment">//设置字体大小</span></span><br><span class="line">  display.setTextSize(<span class="number">1.5</span>);</span><br><span class="line">  <span class="comment">//设置光标位置</span></span><br><span class="line">  display.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());</span><br><span class="line">  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class="line">  <span class="keyword">for</span> (;;)<span class="comment">//相当于loop</span></span><br><span class="line">  &#123; </span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:、</span></span><br><span class="line"></span><br><span class="line">      delay(<span class="number">100</span>);</span><br><span class="line">      <span class="comment">//清除屏幕</span></span><br><span class="line">      display.clearDisplay();</span><br><span class="line">      <span class="comment">//设置光标位置</span></span><br><span class="line">      <span class="comment">//检测到fan开启状态时，OLED显示动图状态消失</span></span><br><span class="line">      <span class="keyword">if</span>(FAN==<span class="string">&quot;off&quot;</span>)</span><br><span class="line">       &#123; </span><br><span class="line">         bmp_display();</span><br><span class="line">         display.clearDisplay();</span><br><span class="line">         delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">         printLocalTime();</span><br><span class="line">         display.display();</span><br><span class="line">         delay(<span class="number">3000</span>);</span><br><span class="line">         Serial.println(<span class="string">&quot;ononon&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">          display.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">          display.print(<span class="string">&quot;The fan is turned on and cannot be used.&quot;</span>);</span><br><span class="line">          display.display();</span><br><span class="line">          delay(<span class="number">3000</span>);</span><br><span class="line">        Serial.println(<span class="string">&quot;offoff&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printLocalTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> <span class="title">timeinfo</span>;</span></span><br><span class="line">  <span class="keyword">if</span> (!getLocalTime(&amp;timeinfo))</span><br><span class="line">  &#123;</span><br><span class="line">    display.println(<span class="string">&quot;Failed to obtain time&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/***********************获取温湿度****************************/</span></span><br><span class="line">  <span class="keyword">int</span> chk = DHT11.read(DHT11PIN);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Read sensor: &quot;</span>);</span><br><span class="line">  <span class="keyword">switch</span> (chk)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> DHTLIB_OK: </span><br><span class="line">                Serial.println(<span class="string">&quot;OK&quot;</span>); </span><br><span class="line">                DHT11_STATUS = <span class="number">0</span>;  </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DHTLIB_ERROR_CHECKSUM: </span><br><span class="line">                Serial.println(<span class="string">&quot;Checksum error&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DHTLIB_ERROR_TIMEOUT: </span><br><span class="line">                Serial.println(<span class="string">&quot;Time out error&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: </span><br><span class="line">                Serial.println(<span class="string">&quot;Unknown error&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>((<span class="keyword">int</span>)DHT11.humidity &gt; <span class="number">100</span> || (<span class="keyword">int</span>)DHT11.temperature &gt; <span class="number">100</span> )</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> q = <span class="number">0</span> ;q &lt; <span class="number">10</span>; q++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">int</span> chk = DHT11.read(DHT11PIN);</span><br><span class="line">          Serial.print(<span class="string">&quot;Humidity1 (%): &quot;</span>);</span><br><span class="line">          Serial.println((<span class="keyword">float</span>)DHT11.humidity, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">          Serial.print(<span class="string">&quot;Temperature1 °C): &quot;</span>);</span><br><span class="line">          Serial.println((<span class="keyword">float</span>)DHT11.temperature, <span class="number">2</span>);</span><br><span class="line">          <span class="keyword">if</span>((<span class="keyword">int</span>)DHT11.humidity &lt; <span class="number">100</span> &amp;&amp; (<span class="keyword">int</span>)DHT11.temperature &lt; <span class="number">100</span> )</span><br><span class="line">          &#123;</span><br><span class="line">              DHT11_STATUS = <span class="number">0</span>;  </span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          DHT11_STATUS = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      DHT11_COUNT++;</span><br><span class="line">      <span class="keyword">if</span>(DHT11_COUNT == <span class="number">5</span> )</span><br><span class="line">      &#123;</span><br><span class="line">            digitalWrite(<span class="number">17</span>, LOW); </span><br><span class="line">            delay(<span class="number">4000</span>);</span><br><span class="line">            digitalWrite(<span class="number">17</span>, HIGH); </span><br><span class="line">            DHT11_COUNT =<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  Serial.print(<span class="string">&quot;Humidity (%): &quot;</span>);</span><br><span class="line">  Serial.println((<span class="keyword">float</span>)DHT11.humidity, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Temperature °C): &quot;</span>);</span><br><span class="line">  Serial.println((<span class="keyword">float</span>)DHT11.temperature, <span class="number">2</span>);</span><br><span class="line">  <span class="comment">/***********************获取温湿度END****************************/</span></span><br><span class="line">  </span><br><span class="line">  display.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  display.println(&amp;timeinfo, <span class="string">&quot;%F&quot;</span>); <span class="comment">// 格式化输出</span></span><br><span class="line">  <span class="comment">//display.setCursor(80, 0);</span></span><br><span class="line"> <span class="comment">// display.println(&amp;timeinfo, &quot;%T&quot;); // 格式化输出</span></span><br><span class="line">  display.setCursor(<span class="number">42</span>, <span class="number">8</span>);</span><br><span class="line">  display.println(&amp;timeinfo, <span class="string">&quot;%A&quot;</span>); <span class="comment">// 格式化输出</span></span><br><span class="line">  display.setCursor(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">  <span class="keyword">if</span>( DHT11_STATUS == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      display.print(<span class="string">&quot;Humidity:&quot;</span>);</span><br><span class="line">      display.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">      display.setCursor(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line">      display.print(<span class="string">&quot;Temperature:&quot;</span>);</span><br><span class="line">      display.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">  &#125;<span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">      display.print(<span class="string">&quot;Humidity:&quot;</span>);</span><br><span class="line">      display.println((<span class="keyword">float</span>)DHT11.humidity);</span><br><span class="line">      display.setCursor(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line">      display.print(<span class="string">&quot;Temperature:&quot;</span>);</span><br><span class="line">      display.println((<span class="keyword">float</span>)DHT11.temperature);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">      display.setCursor(<span class="number">80</span>, <span class="number">0</span>);</span><br><span class="line">      display.println(&amp;timeinfo, <span class="string">&quot;%T&quot;</span>); <span class="comment">// 格式化输出</span></span><br><span class="line">      display.display();</span><br><span class="line">      display.setCursor(<span class="number">0</span>, <span class="number">32</span>);</span><br><span class="line">      display.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">      display.println(WiFi.localIP());</span><br><span class="line">      display.drawBitmap(<span class="number">0</span>,<span class="number">40</span>,Heart_16x16,<span class="number">16</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">      display.setCursor(<span class="number">30</span>, <span class="number">44</span>);</span><br><span class="line">      display.print(<span class="string">&quot;JGX Desktop&quot;</span>);</span><br><span class="line">      display.drawBitmap(<span class="number">112</span>,<span class="number">40</span>,Heart_16x16,<span class="number">16</span>,<span class="number">16</span>,<span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////新的一页显示图片</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bmp_display</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 显示前清屏</span></span><br><span class="line">    display.stopscroll();</span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    <span class="comment">// 将图片显示在中心位置</span></span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_5, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_6, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_7, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_8,<span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_9, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_10, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">  </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_11,<span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_12, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_13,<span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_14, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_15, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_16, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_17, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/****************************WiFi***************************************/</span></span><br><span class="line"><span class="comment">//用于配置WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wifi_Config</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;scan start&quot;</span>);</span><br><span class="line">  <span class="comment">// 扫描附近WiFi</span></span><br><span class="line">  <span class="keyword">int</span> n = WiFi.scanNetworks();</span><br><span class="line">  Serial.println(<span class="string">&quot;scan done&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;no networks found&quot;</span>);</span><br><span class="line">    scanNetworksID = <span class="string">&quot;no networks found&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.print(n);</span><br><span class="line">    Serial.println(<span class="string">&quot; networks found&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="comment">// Print SSID and RSSI for each network found</span></span><br><span class="line">      Serial.print(i + <span class="number">1</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">      Serial.print(WiFi.SSID(i));</span><br><span class="line">      Serial.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.RSSI(i));</span><br><span class="line">      Serial.print(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">      Serial.println((WiFi.encryptionType(i) == WIFI_AUTH_OPEN) ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;*&quot;</span>);</span><br><span class="line">      scanNetworksID += <span class="string">&quot;&lt;P&gt;&quot;</span> + WiFi.SSID(i) + <span class="string">&quot;&lt;/P&gt;&quot;</span>;</span><br><span class="line">      delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.mode(WIFI_AP);<span class="comment">//配置为AP模式</span></span><br><span class="line">  boolean result = WiFi.softAP(AP_SSID, <span class="string">&quot;&quot;</span>); <span class="comment">//开启WIFI热点</span></span><br><span class="line">  <span class="keyword">if</span> (result)</span><br><span class="line">  &#123;</span><br><span class="line">    IPAddress myIP = WiFi.softAPIP();</span><br><span class="line">    <span class="comment">//打印相关信息</span></span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;Soft-AP IP address = &quot;</span>);</span><br><span class="line">    Serial.println(myIP);</span><br><span class="line">    Serial.println(String(<span class="string">&quot;MAC address = &quot;</span>)  + WiFi.softAPmacAddress().c_str());</span><br><span class="line">    Serial.println(<span class="string">&quot;waiting ...&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;  <span class="comment">//开启热点失败</span></span><br><span class="line">    Serial.println(<span class="string">&quot;WiFiAP Failed&quot;</span>);</span><br><span class="line">    delay(<span class="number">3000</span>);</span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (MDNS.begin(<span class="string">&quot;esp32&quot;</span>)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;MDNS responder started&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//首页</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, ROOT_HTML + scanNetworksID + <span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//连接</span></span><br><span class="line">  server.on(<span class="string">&quot;/connect&quot;</span>, []() &#123;</span><br><span class="line"></span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;font size=\&quot;10\&quot;&gt;successd,wifi connecting...&lt;br /&gt;Please close this page manually.&lt;/font&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    WiFi.softAPdisconnect(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//获取输入的WIFI账户和密码</span></span><br><span class="line">    wifi_ssid = server.arg(<span class="string">&quot;ssid&quot;</span>);</span><br><span class="line">    wifi_pass = server.arg(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">    server.close();</span><br><span class="line">    WiFi.softAPdisconnect();</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi Connect SSID:&quot;</span> + wifi_ssid + <span class="string">&quot;  PASS:&quot;</span> + wifi_pass);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置为STA模式并连接WIFI</span></span><br><span class="line">    WiFi.mode(WIFI_STA);</span><br><span class="line">    WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());</span><br><span class="line">    <span class="keyword">uint8_t</span> Connect_time = <span class="number">0</span>; <span class="comment">//用于连接计时，如果长时间连接不成功，复位设备</span></span><br><span class="line">    <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;  <span class="comment">//等待WIFI连接成功</span></span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">      Connect_time ++;</span><br><span class="line">      resetesp = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (Connect_time &gt; <span class="number">80</span>) &#123;  <span class="comment">//长时间连接不上，复位设备</span></span><br><span class="line">        Serial.println(<span class="string">&quot;Connection timeout, check input is correct or try again later!&quot;</span>);</span><br><span class="line">        delay(<span class="number">3000</span>);</span><br><span class="line">        ESP.restart();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;WIFI Config Success&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">    Serial.print(<span class="string">&quot;  LocalIP:&quot;</span>);</span><br><span class="line">    Serial.print(WiFi.localIP());</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  server.begin();</span><br><span class="line">  <span class="comment">//server1.begin();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于上电自动连接WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AutoConfig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  WiFi.begin();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> wstatus = WiFi.status();</span><br><span class="line">    <span class="keyword">if</span> (wstatus == WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;WIFI SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;, PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      Serial.print(<span class="string">&quot;LocalIP:&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.localIP());</span><br><span class="line">      Serial.print(<span class="string">&quot; ,GateIP:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.gatewayIP());</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;WIFI AutoConfig Waiting......&quot;</span>);</span><br><span class="line">      Serial.println(wstatus);</span><br><span class="line">      delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;WIFI AutoConfig Faild!&quot;</span> );</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        其中即为ESP完整的代码部分，中间还有许多未解释说明，这些部分即为ESP32与STM32交互部分。</p><h3 id="STM32与ESP32交互"><a href="#STM32与ESP32交互" class="headerlink" title="STM32与ESP32交互"></a>STM32与ESP32交互</h3><p>​        这个制作过程中，出现了一个大问题，由于之间写的温湿度显示是5S自动刷新词语，没改之前，出现开关数据，界面会一直发送，导致STM32与ESP32之间的串口通信会造成中断溢出，卡死在接收端上，后面便采取了输入输出高低电平做控制，在STM32与ESP32上进行设置输入引脚和输出引脚，通过控制功能，使用引脚饿高低变化来达到传递信息的作用，这一步麻烦了许多，在完全调整完毕后，才找到界面一直刷新的原因，由于硬件已经焊上，为了保持硬件，就依旧这么写下去。</p><p>​        交互过程中，满足必须满足使用，在WIFI开启时，语音可以关闭，反之如此。这部分代码如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//STM32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WU PAout(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAN PAout(5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED PAout(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESP32RESET PAout(7)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDINPUTSTATUS_H  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_12)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDINPUTSTATUS_L  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_13)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WUINPUTSTATUS_H  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_14) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WUINPUTSTATUS_L   GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_15)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FANINPUTSTATUS_H  GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_11)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FANINPUTSTATUS_L  GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12)</span></span><br><span class="line"><span class="comment">/******************************ESP32重新设置密码********************************/</span></span><br><span class="line"><span class="keyword">if</span> (esp32status == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">40000</span>);</span><br><span class="line">esp32count++;</span><br><span class="line"><span class="keyword">if</span>(esp32count &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">ESP32RESET = <span class="number">0</span>;</span><br><span class="line">esp32status = <span class="number">0</span>;</span><br><span class="line">esp32count=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************************引脚输入********************************/</span></span><br><span class="line"><span class="keyword">if</span>(FANINPUTSTATUS_H == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">FAN=<span class="number">1</span>;</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">2</span>,<span class="string">&quot;Open the fan&quot;</span>,<span class="number">32</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(FANINPUTSTATUS_L == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">FAN=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(WUINPUTSTATUS_H == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">85</span>,<span class="number">6</span>,jia);</span><br><span class="line">WU=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(WUINPUTSTATUS_L == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">WU=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(LEDINPUTSTATUS_H == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">            OLED_Clear();</span><br><span class="line">            delay_ms(<span class="number">100</span>);</span><br><span class="line">            OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">93</span>,<span class="number">7</span>,deng);</span><br><span class="line">            LED=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(LEDINPUTSTATUS_L == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">            OLED_Clear();</span><br><span class="line">            LED=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ESP32</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tool</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> ledinput;</span><br><span class="line">  <span class="keyword">int</span> faninput;</span><br><span class="line">  <span class="keyword">int</span> wuinput;</span><br><span class="line">&#125;tools;</span><br><span class="line">tools ntools;</span><br><span class="line"><span class="comment">/********************************检测开关状态****************************/</span></span><br><span class="line">    ntools.ledinput = digitalRead(<span class="number">35</span>);</span><br><span class="line">    ntools.wuinput = digitalRead(<span class="number">34</span>);</span><br><span class="line">    ntools.faninput = digitalRead(<span class="number">32</span>);</span><br><span class="line">    delay(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">if</span>(ntools.ledinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput high &quot;</span>); </span><br><span class="line">          LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.ledinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput low &quot;</span>); </span><br><span class="line">          LED = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ntools.faninput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput high &quot;</span>); </span><br><span class="line">          FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.faninput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          FAN = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ntools.wuinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput high &quot;</span>); </span><br><span class="line">          ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.wuinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          ATOMIZER = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">/******************************END***************************************/</span> </span><br></pre></td></tr></table></figure><p>​        到此即为全部代码部分，剩下的后续继续完善。</p><h1 id="结尾："><a href="#结尾：" class="headerlink" title="结尾："></a>结尾：</h1><p>​        此作品，难度系数中等偏上，需要使用3个编译软件，需要熟悉HTML、C两种语言，以及懂得硬件的处理，软件上实现比较麻烦，需要使用硬件来满足。</p><p>​        制作过程中，处理较为久的部分为页面的制作和交互部分，从连接WiFi到实现界面这个两个地方花费时间较久，问题在于，定义的参数类型不熟悉，使用了同一个参数，如：WebServer server(80)、WiFiServer server(80)，最早没有处理明白，具体的即为服务不同，定义错误。</p><p>​        其次即为交互部分，界面一直刷新导致了这个问题，原因在于在写界面是使用了这个http-equiv=&quot;Refresh&quot; content=&quot;5&quot;（这里不是标准的HTML，ESP32上面的写法），后面一直没有发现导致了，串口处理一直发生问题，也更加熟悉了串口的原理：<em>USART_FLAG_FE</em> <em>帧错误标志位</em> 、USART_FLAG_PE 奇偶错误标志位、USART_FLAG_ORE查寻串口标志,为0还是1 reset 为0 set 为1 还有清除标志位的作用，由于串口一直接收，导致溢出，标志位没有清楚掉，一直卡在中断中，使用上这个清楚掉了标志位（这一部分，理解还不够深刻，有问题欢迎沟通交流），后面于是采用引脚的办法来传递信息。由于，引发问题的原因发现的较晚，方案改动，没有按照串口方法进行收发，后续有想尝试的欢迎留言一起解决！</p><p>​        这次作品前期后后花费了2个月的时间，从框架，到各个部分的调通以及硬件的确定，收获到了许多东西，自己的经验又多了一些！后面还有继续制作一些小玩意，来分享给大家！</p><p>​        谢谢观看！</p><p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;作品总介绍：&quot;&gt;&lt;a href=&quot;#作品总介绍：&quot; class=&quot;headerlink&quot; title=&quot;作品总介绍：&quot;&gt;&lt;/a&gt;作品总介绍：&lt;/h1&gt;&lt;p&gt;​        基于STM32单片机以STM32F103C8T6为核心控制配备ESP32运行FreeRto</summary>
      
    
    
    
    <category term="我的作品" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="作品" scheme="https://jgxnb.cn/tags/%E4%BD%9C%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>周记</title>
    <link href="https://jgxnb.cn/2023/01/08/%E5%91%A8%E8%AE%B0/"/>
    <id>https://jgxnb.cn/2023/01/08/%E5%91%A8%E8%AE%B0/</id>
    <published>2023-01-08T11:31:38.000Z</published>
    <updated>2023-01-20T07:23:06.186Z</updated>
    
    <content type="html"><![CDATA[<p>​    写一写周记吧！记录的时间是2023.1.3-2023.1.8</p><p>在工作上：    </p><p>​    这一周，基本是在看代码中度过的，从工作上，第一次体会了帮助客户修改代码并且告知客户需要修改哪里、完善哪里，同一时间，第一次深刻的体会到，提问问题的魅力。提问问题要清晰易懂，需要详细的情况说明，这样导致了自己在提问问题方面，会经过了解、推测、备注，因此，这周学总结一下提问问题的方向要素：</p><p>​    现象+分析过程+推测+请求帮助的方向。例如，蓝牙传输过程中遇到传输失败，首先先告知现象，蓝牙传输过程中会遇到传输失败的问题，经过分析，目前还无法定位出事发送端还是接收端出现问题，但是有4种情况会导致蓝牙传输失败，已经排除2中，剩下两种传输过程中文件被更改、接收端设备异常，请求帮忙对照LOG分析一下原因。</p><p>​    这就是提问的魅力，通俗易懂。</p><p>在休闲上：</p><p>​    在这周的看书上，要改正自己的工作态度，不要为了打工而打工，需要把工作当做投资，换个想法，把目前工作当做自在创业，需要明白目的——为自己积累经验，投资自己，把时间花在琢磨难题上，要成为价值所在。定一个目标十分重要的，要不然想无头苍蝇，乱飞。</p><p>​    目前，自己所想的是继续完善LINUX 驱动层的补充，继续打好C语音底层基础。工作上，目前接触都是应用开发，平时接触的都是修改BUG完善需求。所以，自己的剩余的时间继续完善底层的工作，上层、下层的贯通。</p><p>​    这周同样也进行C语音的联系，保持着每天两题的代码量，一个小时的巩固，继续这样一周，等到放假回家，就转入数据结构方面，平均一天一题的工作量。</p><p>​    LINUX驱动层，这周学习了Linux中断实验、Linux阻塞和非阻塞IO实验，中断对于整个系统来说异常重要，用来处理各种需要及时响应的事情，在中断处理的速度要快，快进快出的行为；阻塞与非阻塞，用来减少CPU的使用，提高效率。这两张总的来说，比较难理解，需要经常反复查看、巩固。</p><p>在生活上：</p><p>​    这周，没有发生什么有趣的事情，自己还在咳嗽中，身体还没恢复好，总的来书这一周，过得也挺平常，应该由于快放假的原因，自己异常的幸福激动，还有一周2天就可以回家了，心中充满了期待。</p><p>​    这周喜欢看上了，去有风的地方，在城市的喧嚣中走久了，去看看远方吧！享受一下预约的生活气息，等上几年，自己也要经历一场这样的旅行！</p><p>​    这周就这样了，明天起来又是精神饱满的一天，遇到难题不要慌、找资源、合理的利用手上的资源去处理！下一周见！</p><p>​                                    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    写一写周记吧！记录的时间是2023.1.3-2023.1.8&lt;/p&gt;
&lt;p&gt;在工作上：    &lt;/p&gt;
&lt;p&gt;​    这一周，基本是在看代码中度过的，从工作上，第一次体会了帮助客户修改代码并且告知客户需要修改哪里、完善哪里，同一时间，第一次深刻的体会到，提问问题</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>实习7个月的故事</title>
    <link href="https://jgxnb.cn/2023/01/02/%E5%AE%9E%E4%B9%A07%E4%B8%AA%E6%9C%88%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>https://jgxnb.cn/2023/01/02/%E5%AE%9E%E4%B9%A07%E4%B8%AA%E6%9C%88%E7%9A%84%E6%95%85%E4%BA%8B/</id>
    <published>2023-01-02T11:27:58.000Z</published>
    <updated>2023-01-21T15:12:14.095Z</updated>
    
    <content type="html"><![CDATA[<p>​        2022年7月1号，我踏上了求职的道路，到我写下这篇文章以及过去了将近7个月，就按照7个月来写吧！</p><p>​        入职的第一天，忙忙碌碌一来就被安排了项目，经历了了解项目，安装环境，运行代码，分析BUG，开始修改BUG等一系列的步骤，一开始还是很不适应，节奏快速，代码量巨大，面对的压力也是十分巨大的。渐渐，解决掉一个又一个的BUG之后，便开始适应了这种强度，回过头来想跟之前在学校中度过的也是一样，也有为BUG焦头烂额过，沮丧过，一直想都想不明白。不懂就去问，同事们也十分的热情，有问必答，渐渐的也融入到了一起。当然，也有自己的生活圈呀！人生不单单是工作，还有自己的休闲方式！</p><p>​        一来工作我便养了一只小仓鼠——红烧肉，由于，8月分得要回一趟学校，就把红烧肉拿去寄养，寄养在一个朋友家里，就是这个朋友，开启了我走向社会的社交，但是现在没有交流了，因为中间发生了一些不愉快，也体会到了，身边的人真的会离自己而去，通过这次的社交，在酒桌上认识了一个河南女孩，性格大大咧咧，这不禁让我想起了自己的第一个女朋友，之后，通过酒局也开始聊起天来，最后以我交了女朋友而结束了聊天。哎！人啊，在这个年级总是喜欢被情感所折磨。女朋友！哦不前女友，在一起俩个月也分手了，刚刚好不多一天，也不少一天，由于，种种原因，我把重心放在了事业上，忽略了她的感受，最终，还是以分手来结束！那天的前一天，印象特别深，跟同事夜爬了清源山，拍下了美丽的夜景，我知道自己要分手了，那天在山顶看向远方，看向了她的方向，凝视了好久……，一切就如那天的云层：一分为二！</p><p>​        <img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230102195004806~1.png" alt="image-20230102195004806~1"></p><p>​        在一起的这些天，体会了情侣之前的全部事情，自己也懂得了许多，那就是责任！既然选择了那就认认真真，真真切切的对待，我相信之后的将越来越真诚，越来越值得珍惜！自己，也不会再把感情轻而易举的交付出去，也不会因为这个年级的冲动、朦胧带来的刺激，让自己难受痛苦。现在，选择的是该做的事——完成自己的目标的，达到自己的终点，其他的看缘分~</p><p>​        快点拉回来，拉回来，这篇主要是写工作的哈哈，项目开始到快结束的时候，自己被安排留下来收尾，负责最后的需求以及剩余的BUG起初，不理解，感觉是留下来擦屁股的，但是，在不理解中渐渐理解了意义——在最后的收尾中，自己必须要学会更多的东西，不单单是修改BUG，还接触到了开发新功能，让自己的整体都得到了提高，在这期间，同时也充当的技术解答，客户不懂的，需要开发进行介入沟通、讲解，恰巧误打误撞，碰到了自己喜欢的部分，当了解一个东西，最好的证明就是讲解这个东西。在这期间，自己的沟通能力、代码能力以及对整个产业的整个上下游的了解都清楚了许多，一个开发不仅仅要关注代码也要关注整个市场行情，产品的整个体系架构！毕竟，我的目标不是单纯写代码，需要往管理层上靠拢！这次的经验也是收获许多！</p><p>​        以上是我3个月考核，自己收获到的地方，获取经验、积累经验，写下来，让别人从文字中了解自己，自己肯定是要继续飞翔的，看了许多程序员博主的分享，自己现在遇到的事情也正是他们经历过的，听取他人的借鉴，少走一些弯路没错，但是我一直相信弯路必须要走，必须要踩的，自己经历过才会更珍惜，更懂得来之不易，更会做的更好！</p><p>​        3个月之后渐渐的自己的工作安排被安排了新的项目，这也经历了工作上必经的事情——根据项目，调整人员，调整得到了新的项目，完全不同的平台，同时也要维护原来的项目2个项目，考验着自己的应变能力，经过时间的推移，自己的中心也慢慢转移到了新的项目之中，也开始修改BUG，现在想想，同样做着一样的事情，这一段时间，我自认为自己得到的锻炼是沉住心，沉下躁动的心，使自己安安静静的做事。所实在，这一段时间，自己是有些浮躁的，需要学习新的东西，新的内容，就好像之前学习的东西都没有用了，但是随着时间的推移，我慢慢打破了这个想法，发现了其中很多的共同点：</p><p>​        1.发现问题的能力</p><p>​        2.解决问题的能力</p><p>​        3.交流问题的能力</p><p>​        这3点，是我这一阶段的所得，一个项目不单单只有自己一个人，还有团队，虽然负责的模块不一样，交流问题的能力，也是在这个阶段中慢慢培养起来。其中，有个同事给我的印象很深，他喜欢专研，喜欢抓的问题不放，必须弄清楚、弄明白，而我，本来就有着做事要做困难的，不要害怕困难的事情，这是提升自己的最好途径，在压力中成长，这里有张图：是跟同事交流了很晚才会宿舍的时候拍的</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230102201913689.png" alt="image-20230102201913689"></p><p>​        路啊！都是自己走出来的，我不知道自己后面会怎么样，我也不去幻想自己的路，这一路上诱惑真的很多，其实，别人怎么说都是没有用的，需要自己吃亏过，经历过，自己怕了才会明白！当然，我也经历过，自己血淋淋的教训……</p><p>​        这一段时间，恰巧也是毕业答辩的时间（原本），但是由于疫情推迟了，但是自己安排也是安排在12月28号完成，所以，11月开始，就完全变成了工作8小时，回来4小时，一天在电脑面前12小时，8小时是为了生存，4小时是为了毕业，12小时是拼尽全力！好在到现在，程序、硬件都已经完成，论文1月3号给老师批改，自己的目标也渐渐完成一个又一个。</p><p>​        这3个月，自己过得平淡，经历过分手之后，自己的重心已经完全下放，做着自己想做的事情，少了许多社交，应该都经历过了吧，发现最后还是知识是离不开自己，当然，看到这里，就好像我，不爱交际一样，闷头做事情，但是这不是我，只是因为自己经历过，明白了，重心转移，罢了，你会认为一个想在沟通交流上充满兴趣的人会是一个闷油瓶嘛？哈哈~</p><p>​        时间好快，写下这篇文章的时候，自己已经一周没上班了——阳了呗，发烧、咳嗽、头痛……，当然，明天就上班咯！回归正常的生活，干劲十足，因为，今天打开了博客，其实很早之前就完成，但是那时候在学校里，没有什么时候，忙的事情也多很杂，但是，今天打开博客，听到自己之前写的音乐播放器，声音一出来，，心头一震我发现全部的知识，你现在没有用到，但是在之后的某一天，你一定会用到它！多学不是问题，有时间就多学吧~</p><p>​        到此也结束了！不写了，日子还长，我们还会相见~</p><p>名句汇总：</p><p>​        1.自己也懂得了许多，那就是责任！既然选择了那就认认真真，真真切切的对待</p><p>​        2.需要自己吃亏过，经历过，自己怕了才会明白！</p><p>下期预告：</p><p>​        1.完善自己的博客网站，可以除了本地登入，其他人也可以登入查看</p><p>​        2.微信公众搭建</p><p>​        3.毕业作品上传、讲解、知识点汇总</p><p>​        4.留着到时候想写啥就写啥</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/u=1705694933,4002952892&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto.webp" alt="u=1705694933,4002952892&amp;fm=253&amp;app=138&amp;size=w931&amp;n=0&amp;f=JPEG&amp;fmt=auto"></p><p>​                                                                                                                                                                    时间真快啊！自己的路还很长，保持初心吧，诱惑真的很多，真的很多！</p><p>​    </p><p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        2022年7月1号，我踏上了求职的道路，到我写下这篇文章以及过去了将近7个月，就按照7个月来写吧！&lt;/p&gt;
&lt;p&gt;​        入职的第一天，忙忙碌碌一来就被安排了项目，经历了了解项目，安装环境，运行代码，分析BUG，开始修改BUG等一系列的步骤，一开</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="https://jgxnb.cn/2022/03/06/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://jgxnb.cn/2022/03/06/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-03-06T02:19:23.000Z</published>
    <updated>2023-01-20T07:23:25.095Z</updated>
    
    <content type="html"><![CDATA[<p>​        回想2年前，自己朦朦胧胧的来到实验室，一呆就度过了自己的大学大半的时间，学会了许多，经历了许多，一开始毫无目标的追寻，跟着学习计划一步一步的走，一步一步的开始自己的技术路，熬过多少的通宵，有的时候一天睡俩个小时，早上起来，继续忙着部门的事情，一面是学习技术的路线，一路是学习管理、学习交际、学习交涉。我的最终目标是管理层，而不是打工人！</p><p>​        渐渐的自己经历了越来越多，也明白了，目标的重要性，眼界开阔的重要性。回顾，这一路的点点滴滴。我分为以下这几个阶段：</p><p>​        第一阶段:刚刚步入大学、看见迎新发言的学长，在台下默默看发言的我，心中暗想，今后一点要认识这个学长，没想到在自己的部门的部长的推荐下，就碰巧认识了，这位学长，并一直在他身边做事情。也认识我现在，放在第一位的部门老师。渐渐的大学的生活开始了起步，刚刚入大学，青春期也是一样的，面对自己喜欢的女孩子我也试着追求过，最终，转校区的转校区，转专业的转专业，被拒绝的拒绝。哈哈，说到这里，我进实验室的，动力因此而来了!对没错，就是因为失恋，没有动力，加上当时身边的朋友也想，就来到了实验室，中途也退出了一个，他也有自己的目标，目标不同，那就巅峰相见。我还在班上调侃了自己的这一段经历，也算不后悔吧!</p><p>​    第二阶段现在开始了：调侃完，就开始了自己的写代码之路，一开始就是简单的代码，c语言呀（好像就没了，学到现在，还是在写C的路上，毕竟作为嵌入式工程师，写C是必定的），经过几个晚上的学习，练习，就开始考实验室了，第一次面对，题目还是还有慌的，面对题目，还是没有信心，中间过程我十分感谢一个人，我的一位初中、高中同学，我看到他的能力，写代码的能力，我是由衷的敬佩。（虽然现在我自认为还是没到他程度，还需要奋斗（逆波兰公式现在也是会了——小甲鱼牛逼！！）），接着，就是考入了实验室，开始了自己的51之路，这一过程，中，好像没有什么大问题，就平平常常，一点一点的度过了，在寒假的结束了自己的51任务：</p><p>​    51：IO、串口、iic、spi、pwm、蓝牙小车、超声波测距、OLED、温湿度检测。</p><p>接着步入了32的学习之路，在家中，看着一堆一堆的代码，一开始学习库函数版本，我敲啥玩意，字怎么这多，后面选择了寄存器的版本（也幸好之前学习的是寄存器，对我后面linux驱动开发也起到了十分大的作用），32的路上接触了汇编指令的操作，学习了boot启动的一些细则，但是更深入的部分还没了解，还单单停留在，应用上的使用</p><p>​    32：IO、点灯、舵机、pwm、接触了平衡车（设计、代码、驱动都有了解）</p><p>32到这里也基本结束了，还差一些操作系统上，还有freertos、还没接触过（在这一学期一定跑完）。</p><p>​    接下来就是学习电赛的芯片TI，中间有穿插了一个比赛，光赛——接触了openMV,模块，接触了图像识别的应用，这次比赛经历了一个月，学习了识别图像、神经网络识别图像、搭出来了了一个小车，代码部分辅助完成，我是在写32驱动电机，达到倒出垃圾的效果，加上32跟openMV 之间的通信。也是一次非常有趣的经历</p><p>​    之后学习了TI芯片，TI芯片花了大概有13天学完了里面的任务部分，也是学习了正常的TI任务;    </p><p>​    TI:依旧是IO的使用、串口、IIC、SPI、 云台的创建（PID的使用）、寻迹小车、超声波避障小车。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        回想2年前，自己朦朦胧胧的来到实验室，一呆就度过了自己的大学大半的时间，学会了许多，经历了许多，一开始毫无目标的追寻，跟着学习计划一步一步的走，一步一步的开始自己的技术路，熬过多少的通宵，有的时候一天睡俩个小时，早上起来，继续忙着部门的事情，一面是学习技术</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jgxnb.cn/2016/03/30/hello-world/"/>
    <id>https://jgxnb.cn/2016/03/30/hello-world/</id>
    <published>2016-03-30T13:12:21.000Z</published>
    <updated>2023-01-21T11:02:00.476Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2c39beb0877a86453e756cda3d12ac275a39a9c9a03d50031207c0313c3bd01a">8857952509ef9895f61625fe2d594ef3c9251b16e75667b105d9b8e2f98fa4e0c494f99b3d7554ae30086249b805cde1fe829b34d38aa0681ad350aafa2c2da4c8681f4421e346dbc95e2e6923f9aeeaa7cb0ef799698a147bdd2547f87a667e80c4a457c4883e6a81c948b927aacdc8269abeb88afac5bbc909b14dfc1b0b17a2c72d6e20855b7f036ad637e406b96743a43a6c316871106e837e1bd6267befaadec082c11fd845ddf6c9c26eb5eafa6c71e5f7481fcd0821adeb5e5f7538c7d82b6357cc0a428a90dd2cb346d68f73fd55de4b0ead7d7488faddce0f62dd303df3ea0fe875c5fe284dc715cfa64ab1bdc4a9b449d0fcb4a5e41699583904cbb629413ee14378578d3540101f40ce6e93be912dfedf12723b663517027c0e1f677fa7cb6f67e581c42e8874d27ba96a40f6d9aeec6a527e368987493283f493372cf11342e3d2a4c530c6c3979e12f1c2761035d7ee2a597e6a60988d2d38cb5bb373a6c5c100e6663b683470d7681ff1493d477e1a31b20c08159bacf4406461a024726c9fab32fc0b423009a3942995804910e5a93cef058bc5229daa2c350fb0b30592da132e5c00058daa83114ce3684d937e25d7f9d888d54e7a6f3c76961e17f0156c335bb6e7e9fecc7e4fbaf7bea5c23849bca8d38e9edde3160d9a9e45711b8c450e653706eb619ef2f2a69baf67b88c51971c3a9c87afa86dff05d3dba36e4903b2e2543ac0b5d0260ea2528fdd4f09bb982f0f1c0b717a1c7a0f4a645918b35acdbf7b41e85a42df50ff7eb3b1f0e5d2e619a9dd351b44d0f942d7dc89823967c327536563c7fb8964fa4370488589da03106034c57a542f0b15acb9d597642bd15a20bb3c06a8c340cd583a7a850103f01d602540c7668db6e6e4cbb19893760fa5794a440a0c74043c2091d38480e702c52a65612054b381b4ba18867f34b4337c07d5df8cc17aa415f945521f0017c7db1a88d572d1d678514cd5008a25424b17271dd652a6e37468f5efe1dc718320d603baf7c0d969972a077a6edc19cd271cb4b5e3974f15e1b4381d3f1053bc978ec5728891d6fbedce553f45347a33d904d3d9ecffb633f5e5e32ec408f21c30a7d4d5ca85b21c383bd9d51dea3310bb284eba806a9dc49c19f03a0a4cf24034b487967c50f3d799355a81249b29586a51896bade3be3cdc5f6031249290f04e7fd05df804f7953c214dc15c1e71d3016b3848e74c06dae7f5e1e80eff053c31b8c2da32dfc03d70c3b37c761e92fc5ea4888536f66dba9f642a6cd7a417a7f147003e2705b6f29d7cb8d0acc7e3be94a05111c02cfd79b096e1e2072da27cab648aa9e6e2315af1e67b1d217e1199e0673b0b4c6a37421db26588ba7ab8f7119ec0ab421238122ca513dcf78898e2100ff3416cbddc2ba4238eaae43092d93131d3b7f409de2ea78ab32df9de9caefc53d0572b3e5806c65f1ffe661c8cd64bbf1c54e5f63dc1993bce73df41b20a1bee9f3575bc4646b5eb61433611e6dd0dd728f8a6c78caca55ce957bef323fd8ba47ebb3e19496c4870693100f4ce32ee06ff889de880b50d78c95710dc06d65c0d0a7717a91b43fb741ab16743ed17e1508fb12d722c242166e8d5f96a2cd0a4fcc5c65363faba256d2ec8f484b847b9be8b9aa37c85fc63f92bdb345a3b65ae86bc210d2ea06ee794aaed7baa505bbbbe190177b55289d235a95f47c8d1ebae4275686cf7bd7ae77ec657c965e0148b418e98ee542975e6e43d57c951fab08c79559daf6bd2354e0883aba987dcfe2e408ef332d2001db3740435a7c1fe9784db593da2cbeb1adceb9ee4404f7aeedfc0e0e817cb68aa03d30b264980ba76f845f10f4f1b314bbf4aea226a04bfb24fc33405b28feea57dc2fb0df9f6140f4d0ab246964203985935a560cda463f4369cdfbdc3beb4176457e98d6e26ed183c606d4a0f491d8c003a1ea10ad7ebf522fca18face13f629b9edff8cd94e2fb568a07919586eb2e246d54de8559057c4f82feaacf3eb82912c039d5fdfb9dfda3f28a48e664f2dc1511f3edcc688dff90755ee69e2ed7ecf26973914c855de3dabeef492c1d8c073ea0057cba0f2fb435df3ea97a000e3389383efde12ddbf126f76a4421f0cc49419844a2d3d7875e7c315ae18b8ea5c2a5406723d7a23500713d3cdc9dd63d5eb8107f5719e40045a29eb57814715a5f0fd0bd683bb2d980eeee67bb363f705c38852086d4588ba8b657575d1420f52975b128ba7b406cdeb5d6ef1e997f76c3f71c34516e3f0dd559767ba37d091aa9af7dd29c9b9577d0b49a8c999ae3eb726ad2305a9f7c5850ebfa5ef4778e1bdcb4903a9b61139f900144b080df3474afe3da646f8915422a2af8c50b218ec32952377bc73de50e07e904d242fee491f4e005abe19579bbe9a9c90d8c7b55c488014e3fa197c9e72c165d087537c8cfeb2d675843e532d5baa8162aaa3bc8818e54eff4aef1cb54c51abaf697c1e7f03880e8aab0075b121928ad3e593bfdd9997461f0898d9d7f23e6d890cf0a1f985ef40ce77bdd395cd91e67feab349bde5a943a7b707f8ee9a72911789d80abf5ab3aacfa618c6bf6fb240156e3df4d494ef7fa4e1dc6d55523359aeee1a70a5bcc1aefcd19f6c26d4c081e1396188c439c685b94e101173ef65d1803122cac071e431150a1d93f658ece2168610acea09cb125a3ef3fbfc6194a9ffeed57839b92305c77d585216c956e6b296052cab317b49f3dcb9ee5aba7af707e8556e3055f8cb36e70abc446cf28029c352baadcf1fa112600146c21c68927c1c5dc4b3b9f406974bc8eec88b413938fb67dd2ec6e80702b57c2eefbd9442ce98e80f13672d9e2e5f8ec6233cc86c46373de2eca42deb2b673fe109eb1f16d8e14b6e4e5a0029ea7a5e4a0bf6ed917a0e157ee765efb1846b447f8fcf81304aa1fc236bdac20a3a3fd939da8febae0aa4e3f27cc7d58b0265c27bf74749022ae5f6ac5c3c3fef8689c66c54bf54293e794ba382b5c3c9389b35264308163261e44328dc19a8bcde13d9088a6e722f9349a3a1ec362a8e4fa094e2ab9d5c0ad4ac2eda949fdeef072356bbf2a9a5e2627ee81f766896092a59406ff8504ac6baf72662cb9604222</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    
    <category term="作为日记加密" scheme="https://jgxnb.cn/tags/%E4%BD%9C%E4%B8%BA%E6%97%A5%E8%AE%B0%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
</feed>
