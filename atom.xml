<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cc</title>
  
  <subtitle>我的嵌入式之路</subtitle>
  <link href="https://jgxnb.cn/atom.xml" rel="self"/>
  
  <link href="https://jgxnb.cn/"/>
  <updated>2023-02-12T03:20:24.040Z</updated>
  <id>https://jgxnb.cn/</id>
  
  <author>
    <name>Cc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每周工作内容（2）</title>
    <link href="https://jgxnb.cn/2023/02/10/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%882%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/02/10/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%882%EF%BC%89/</id>
    <published>2023-02-10T12:17:25.000Z</published>
    <updated>2023-02-12T03:20:24.040Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="37a9b03c70b4288c440348453e131370d3b615b0e9d1c5fcb50b4a03a6c80b14"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>md--书写格式汇总</title>
    <link href="https://jgxnb.cn/2023/02/05/md-%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F%E6%B1%87%E6%80%BB/"/>
    <id>https://jgxnb.cn/2023/02/05/md-%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F%E6%B1%87%E6%80%BB/</id>
    <published>2023-02-05T12:29:15.000Z</published>
    <updated>2023-02-12T03:12:52.685Z</updated>
    
    <content type="html"><![CDATA[<p>这一篇章是用来添加MD的书写格式</p><p><em><strong>*static有什么用途？（请至少说明两种）*</strong></em></p><p><font color="#dd0000">根据不同位数的有不同的答案：32位的4字节、64位的8字节。</font><br /></p><ul><li>一个有10个指针的数组，该指针是指向一个整型数的</li><li>一个指向有10个整型数数组的指针</li><li>一个指向函数的指针，该函数有一个整型参数并返回一个整型数</li><li> 一个有10个指针的数组，该指针指向一个函数，该函数有一个整型参数并返回一个整型数</li><li> （无需列表）</li></ul><table><thead><tr><th align="center">0000    0001</th><th align="center">内存高地址</th></tr></thead><tbody><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center">内存低地址&lt;——</td></tr></tbody></table><p>size为1：<font size="1">size为1</font><br /></p><p><font face="微软雅黑">我是微软雅黑字</font> </p><table>     <tr>         <td bgcolor=#FF00FF>背景色的设置是按照十六进制颜色值：#7FFFD4</td>        </tr> </table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*这里是文字*</span></span><br><span class="line"><span class="emphasis">_这里是文字_</span></span><br><span class="line"><span class="strong">**这里是文字**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*这里是文字<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~~这里是文字~~</span></span></span></span></span><br></pre></td></tr></table></figure><p><em>这里是文字</em><br><em>这里是文字</em><br><strong>这里是文字</strong><br><em><strong>这里是文字</strong></em><br><del>这里是文字</del></p><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。也可以直接写，也是可以显示成链接形式的</p><p><a href="https://blog.csdn.net/u014061630/article/details/81359144">(45条消息) Markdown语法图文全面详解(10分钟学会)_黑暗星球的博客-CSDN博客_markdown语法</a></p><p>（1）无序列表<br>使用 *，+，- 表示无序列表。<br>注意：符号后面一定要有一个空格，起到缩进的作用。</p><blockquote><p>这种语言习惯是从右到左书写，但是我们的习惯为从左到右进行书写，因此造成显示的错误，在这之前熟悉了一下语言的填加</p></blockquote><p>😊中文字符下alt+&gt;这个按键打印出来</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这一篇章是用来添加MD的书写格式&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*static有什么用途？（请至少说明两种）*&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#dd0000&quot;&gt;根据不同位数的有不同的答案：32位的4字节、64位的8字节。&lt;/fo</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>C语言——面试题</title>
    <link href="https://jgxnb.cn/2023/02/05/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://jgxnb.cn/2023/02/05/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2023-02-05T08:51:32.000Z</published>
    <updated>2023-02-05T14:09:16.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h1><p>公司面试题</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><em><strong>*程序的局部变量存在于___ 中，全局变量存在于____中，动态申请数据存在于___ 中。*</strong></em></p><p><font color="#dd0000">程序的局部变量存在于栈(stack) 中，全局变量存在于静态数据区中，动态申请数据存在于堆（heap）中。</font><br /></p><p>这一题全部是概念的问题，需要牢记！！</p><p><em><strong>*PC为32位机，计算该结构体大小？*</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">name1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> str;</span><br><span class="line">    <span class="keyword">short</span> x;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">&#125;;</span><br><span class="line">求<span class="keyword">sizeof</span>(name1)?  (<span class="number">8</span>字节)</span><br></pre></td></tr></table></figure><p>这一题考察的是结构体大小的计算，需要记住几个点（来自菜鸟教程）</p><ul><li>结构体变量的首地址能够被其最宽基本类型成员的大小所整除；</li><li>结构体每个成员相对于结构体首地址的偏移量（offset）都是成员大小的整数倍，如有需要编译器会在成员之间加上填充字（internal adding）；</li><li>结构体的总大小为结构体最宽基本类型成员大小的整数倍，如有需要编译器会在最末一个成员之后加上填充字节（trailing padding）</li></ul><p>题目中的三个变量大小分别为：1个字节、2个字节、4个字节。</p><p>char分配一个字节，short分配2个字节，由于int 为4个字节，此时前面1+2为3，不能满足int4字节的整数倍，因此对于要点2，会自动补上1字节，这样一来字节数变成4字节，加上int的4字节一共为8字节。</p><p><em>下面这个来测试一下</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">name2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> str;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">short</span> x;</span><br><span class="line">&#125;; 求<span class="keyword">sizeof</span>(name2)？ (<span class="number">12</span>字节)</span><br></pre></td></tr></table></figure><p><em><strong>*static有什么用途？（请至少说明两种）*</strong></em></p><ul><li>限制变量的作用域（static全局变量）；</li><li>设置变量的存储域（static局部变量）。</li></ul><p><em><strong>*void* p = malloc(100)，请计算sizeof(p)。*</strong></em></p><p><font color="#dd0000">根据不同位数的有不同的答案：32位的4字节、64位的8字节。</font><br /></p><p><em><strong>*写一个“标准”宏，这个宏输入两个参数并返回较*</strong></em></p><p><font color="#dd0000">#define Min(X, Y) ((X)&gt;(Y)?(Y):(X))</font><br /></p><p><em><strong>*结构体与联合体的区别。*</strong></em></p><p>结构体中的成员拥有独⽴的空间，共⽤体的成员共享同⼀块空间，但是每个共⽤体成员能访问共⽤区的空间⼤⼩是由成员⾃身的类型决定。<br>共用体使用覆盖技术，成员变量相互覆盖。</p><p><em><strong>*用变量a 给出下面的定义*</strong></em></p><ul><li>一个有10个指针的数组，该指针是指向一个整型数的</li><li>一个指向有10个整型数数组的指针</li><li>一个指向函数的指针，该函数有一个整型参数并返回一个整型数</li><li> 一个有10个指针的数组，该指针指向一个函数，该函数有一个整型参数并返回一个整型数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *  a[<span class="number">10</span>];      </span><br><span class="line"><span class="keyword">int</span> (*a)[<span class="number">10</span>]     </span><br><span class="line"><span class="keyword">int</span> (*a)(<span class="keyword">int</span>);</span><br><span class="line"><span class="keyword">int</span> (*a[<span class="number">10</span>])(<span class="keyword">int</span>)</span><br></pre></td></tr></table></figure><p><em><strong>*++a和a++的区别是什么?*</strong></em></p><p><font color="#dd0000">++a的是先加后取值，a++的是先取值后增加</font><br /></p><p><em><strong>*大端和小端*</strong></em></p><p>小端 - 低字节存储在低地址 高字节存储在最高地址</p><p>如：Intel、AMD、X86等采用的是这种方式；</p><p>大端- 高字节存储在低地址 低字节存储在高地址</p><h1 id="应用题"><a href="#应用题" class="headerlink" title="应用题"></a>应用题</h1><h2 id="取一个范围为-100-499的随机数"><a href="#取一个范围为-100-499的随机数" class="headerlink" title="取一个范围为-100~499的随机数"></a>取一个范围为-100~499的随机数</h2><p>运用到随机数</p><p>试卷上的答案</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rand_func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    </span><br><span class="line">    a = <span class="number">-100</span>;</span><br><span class="line">    srand(a);</span><br><span class="line">    b = rand() % <span class="number">600</span> + a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自己写的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> ret = (rand() % <span class="number">500</span>)<span class="number">-100</span>;<span class="comment">//可以生成-100~499的数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查错题1"><a href="#查错题1" class="headerlink" title="查错题1"></a>查错题1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是将输入的字符串拼接，&quot;姓名&quot;,&quot;张三&quot;=&gt;&quot;姓名张三&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">func</span><span class="params">(<span class="keyword">char</span>* ch1, <span class="keyword">char</span>* ch2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch[<span class="number">256</span>];<span class="comment">//</span></span><br><span class="line">    <span class="keyword">int</span> len;  </span><br><span class="line">    <span class="built_in">memcpy</span>(ch, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">    len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">    <span class="built_in">memcpy</span>(ch + len, ch2, <span class="built_in">strlen</span>(ch2));</span><br><span class="line">    len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">    ch[len] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* ch;</span><br><span class="line">  ch = func(<span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;合成字符串:%s\n&quot;</span>, ch);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一题主要考察的是局部变量跟全局变量的引用，局部变量，在函数运行完之后就会马上释放掉，最后返回ch时，返回的是一个空值，cahr* 返回的是地址，此地址已经被释放掉了，返回出来即为错误的，造成字符串的拼接失败，正确的改法如下代码所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[<span class="number">256</span>] ;</span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">func</span><span class="params">(<span class="keyword">char</span>* ch1, <span class="keyword">char</span>* ch2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memcpy</span>(ch, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">    len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">    <span class="built_in">memcpy</span>( ch + len , ch2, <span class="built_in">strlen</span>(ch2));<span class="comment">//</span></span><br><span class="line">    len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">    ch[len ] =<span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* ch;</span><br><span class="line">ch = func(<span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;合成字符串:%s\n&quot;</span>, ch);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把定义的char ch[256] 换成全局变量，此代码即可运行成功。</p><h2 id="查错题2"><a href="#查错题2" class="headerlink" title="查错题2"></a>查错题2</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是把一个字符串倒序, &quot;hello,world&quot;=&gt;&quot;dlrow,olleh&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* src = <span class="string">&quot;hello,world&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* dest = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* d = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* s = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    len = <span class="built_in">strlen</span>(src);</span><br><span class="line">dest = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(len);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dest == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d = dest;</span><br><span class="line">s = src[len - <span class="number">1</span>];<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len-- != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    d++ = s--;<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*d = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, dest);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该题目考察的是指针与数组之间的指向，以及指针查找字符串数据的位置，例如s = src[len - 1];这样的赋值会出现错误，即为把数据赋值在char* s的上，不是用地址来传递，根据调试出现这个错误</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205183337929.png" alt="image-20230205183337929"></p><p>正确的做法为：s = src + len -1,调试端如下</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205183629571.png" alt="image-20230205183629571"></p><p>更改完这个，一下子就看出来 d++ = s–，这里存在错误，d是指针你要改地址里的内容就是+ 星号，不然就是把指针值改掉了而不是改指针指向的内容，这部分不能这写，一开始我写成了这样*（d++） = s–，这里即出现了大问题，d上的数据为s上的地址，由于，char * 为一个字节，只会保存最后小端的地址最后的两个字节（我电脑是小端的），造成一开始数据不是反写的情况，具体如下调试说明：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205190025940.png" alt="image-20230205190025940"></p><p>赋值给d的地址最开始的最后俩位为7a转化为10进制即为122，对应ASCII即为z，这也是遇到的一个问题，分析出原因，理解了指针字符的作用，也间接的理解了大小端的关系。最后修改即为*（d++） = *（s–），取值的赋值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是把一个字符串倒序, &quot;hello,world&quot;=&gt;&quot;dlrow,olleh&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* src = <span class="string">&quot;hello,world&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* dest = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* d = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* s = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    len = <span class="built_in">strlen</span>(src);</span><br><span class="line">dest = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*len + <span class="number">1</span>);<span class="comment">//分配空间一开始写准确点</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\r\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*len);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x\r\n&quot;</span>,dest);</span><br><span class="line"><span class="comment">//printf(&quot;%d\r\n&quot;,len);</span></span><br><span class="line"><span class="keyword">if</span> (dest == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">d = dest; <span class="comment">//指向刚刚分配的空间首地址</span></span><br><span class="line">s = src + len - <span class="number">1</span> ;<span class="comment">//这样指向尾部数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len-- != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    *(d++) = *(s--);<span class="comment">//指向这个数据，把数据取出来，单纯的s--是数据的地址，会出现错误*(d++) = s--,因为由于char类型，只取地址的最低字节，出来应该即位ASCII码;</span></span><br><span class="line"> <span class="comment">//printf(&quot;s = %c\r\n&quot;,s);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*d = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, dest);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查错题3"><a href="#查错题3" class="headerlink" title="查错题3"></a>查错题3</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是将学生名记录在结构体表中，并统计学生个数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> *student;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line">&#125; INFO_TB;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    INFO_TB* pInfoTb;</span><br><span class="line"><span class="keyword">char</span>* ch1 = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* ch2 = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line">pInfoTb = (INFO_TB*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(INFO_TB));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pInfoTb == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student + len, ch2, <span class="built_in">strlen</span>(ch2));</span><br><span class="line">len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="built_in">free</span>(pInfoTb);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这到题考验的是结构体分配内存，主要卡点为，结构体中存在指针时，需要另外给结构体中的指针分配空间。</p><p>pInfoTb =(INFO_TB*)malloc(sizeof(INFO_TB));分配的是常量，例如int 、char之类的数据，没有给结构体中指向的数据分配空间，造成memcpy错误， memcpy(pInfoTb-&gt;student, ch1, strlen(ch1));这样写以及是地址指向了。另外，分配完空间需要及时的释放，不让会造成内存泄漏。pInfoTb-&gt;count++，看起来是没有问题的，但是在调试的时候出现如下问题：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205191905047.png" alt="image-20230205191905047"></p><p>这是没有初始化造成的，跟编译器有关，有的编译器会自动初始化，我使用的是VC++ 6.0版本比较老，没有初始化，在这里画了一些时间。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码是将学生名记录在结构体表中，并统计学生个数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> *student;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line">&#125; INFO_TB;</span><br><span class="line"><span class="comment">//结构体中，有指针存在，需要单独给指针分配空间。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    INFO_TB* pInfoTb;</span><br><span class="line"><span class="keyword">char</span>* ch1 = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>* ch2 = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">pInfoTb-&gt;count = <span class="number">0</span>;<span class="comment">//初始化需要加上。</span></span><br><span class="line">pInfoTb = (INFO_TB*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(INFO_TB));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pInfoTb == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给指针的内容分配空间。</span></span><br><span class="line">pInfoTb-&gt;student = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(ch1)+<span class="built_in">strlen</span>(ch2)+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (pInfoTb-&gt;student == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student, ch1, <span class="built_in">strlen</span>(ch1));</span><br><span class="line">len = <span class="built_in">strlen</span>(ch1);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line"><span class="built_in">memcpy</span>(pInfoTb-&gt;student + len, ch2, <span class="built_in">strlen</span>(ch2));</span><br><span class="line">len += <span class="built_in">strlen</span>(ch2);</span><br><span class="line">pInfoTb-&gt;count++;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="built_in">free</span>(pInfoTb-&gt;student);</span><br><span class="line"><span class="built_in">free</span>(pInfoTb);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的代码如上，这里说一下我的疑惑：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">free</span>(pInfoTb);</span><br><span class="line"><span class="built_in">free</span>(pInfoTb-&gt;student);</span><br></pre></td></tr></table></figure><p>能否这样写呢？或者只写一个free(pInfoTb);——不能，因为free(pInfoTb);知识释放这个结构体里面的空间而不会释放结构体指针里面指向的数据的空间，因此不能只写一个，反过来写，也不行，不然结构体以及释放掉了，那一个空的结构体去指向一个数据，这样是释放不掉的。</p><h2 id="请写出一个程序得出当前使用的是大端还是小端存储。"><a href="#请写出一个程序得出当前使用的是大端还是小端存储。" class="headerlink" title="请写出一个程序得出当前使用的是大端还是小端存储。"></a>请写出一个程序得出当前使用的是大端还是小端存储。</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">&#125;UN_DAT;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check_sys</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UN_DAT *p, dat;</span><br><span class="line">dat.i = <span class="number">1</span>;</span><br><span class="line">p = &amp;dat;</span><br><span class="line"><span class="keyword">return</span> dat.c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret = check_sys();</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;小端\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;大端\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>试卷上的参考答案是用指针，我来换一种方式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkCPU</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">w</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">char</span> b;</span><br><span class="line">&#125;c;</span><br><span class="line">c.a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(c.b == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;小端\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;大1\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断大小端的代码</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">checkCPU();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>达到的效果一致。大小端的区分要知道数据的在内存中的存放方式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> a=<span class="number">2</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">（未存储时）a=<span class="number">2</span>转化为<span class="number">16</span>进制时为：（<span class="number">00</span>就是高序字节）<span class="number">0x00</span>  <span class="number">00</span>  <span class="number">00</span>  <span class="number">02</span>(<span class="number">02</span>就是低序字节)(引用CSDNʕ•̀ o •́ʔ！文章)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205200403491.png" alt="image-20230205200403491"></p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230205200517901.png" alt="image-20230205200517901"></p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/1675596569575.png" alt="1675596569575"></p><p>即可看出来，代码的部分是怎么描述的，我们假设其中一个字节的数据，就能知道另外三个字节的数据了，从而验证猜想。也就是char *p=(char *)&amp;a这句。以下是小端（引用CSDN不悔哥的例子）</p><table><thead><tr><th align="center">0000       0000</th><th align="center">内存高地址</th></tr></thead><tbody><tr><td align="center">0000       0000</td><td align="center"></td></tr><tr><td align="center">0000       0000</td><td align="center"></td></tr><tr><td align="center">0000       0001</td><td align="center">内存低地址&lt;——</td></tr></tbody></table><p>大端如下</p><table><thead><tr><th align="center">0000    0001</th><th align="center">内存高地址</th></tr></thead><tbody><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center"></td></tr><tr><td align="center">0000    0000</td><td align="center">内存低地址&lt;——</td></tr></tbody></table><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次的联系弥补了自己的各个细节部分的缺少的点，更加完善了自己的知识体系。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目来源&quot;&gt;&lt;a href=&quot;#题目来源&quot; class=&quot;headerlink&quot; title=&quot;题目来源&quot;&gt;&lt;/a&gt;题目来源&lt;/h1&gt;&lt;p&gt;公司面试题&lt;/p&gt;
&lt;h1 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>每周工作内容（1）</title>
    <link href="https://jgxnb.cn/2023/02/03/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%881%EF%BC%89/"/>
    <id>https://jgxnb.cn/2023/02/03/%E6%AF%8F%E5%91%A8%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%EF%BC%881%EF%BC%89/</id>
    <published>2023-02-03T14:50:09.000Z</published>
    <updated>2023-02-05T13:24:56.014Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f9e2dc8da0617dcbb70aa37229ed340f0e0404d5fc30a2f59d816f648e25d6af"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 公司文件需要留言审核哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="我的工作" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="工作日志" scheme="https://jgxnb.cn/tags/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>C语言——猜字谜小游戏</title>
    <link href="https://jgxnb.cn/2023/01/30/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E7%8C%9C%E5%AD%97%E8%B0%9C%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <id>https://jgxnb.cn/2023/01/30/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E7%8C%9C%E5%AD%97%E8%B0%9C%E5%B0%8F%E6%B8%B8%E6%88%8F/</id>
    <published>2023-01-30T03:48:30.000Z</published>
    <updated>2023-01-30T09:00:20.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目使用知识点"><a href="#项目使用知识点" class="headerlink" title="项目使用知识点"></a>项目使用知识点</h1><p>​    C语言文件读取、写入、删除、更改以及列表的创建。</p><p>​    整体项目，在完善问题时，充分运用到了文件中的几个函数，可以做到读取文件的某一行；更改文件的某一行数据；添加新的数据在文件末尾；查询文件的当前数据。</p><h1 id="各个部分详细代码"><a href="#各个部分详细代码" class="headerlink" title="各个部分详细代码"></a>各个部分详细代码</h1><h2 id="登入密码"><a href="#登入密码" class="headerlink" title="登入密码"></a>登入密码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> pass[<span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; LNode,*pNode;</span><br><span class="line"></span><br><span class="line"><span class="function">pNode <span class="title">createList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pNode pHead = (pNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">pNode cur = pHead;</span><br><span class="line">FILE *fp = fopen(<span class="string">&quot;users.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;FILE NOT FOUND&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">pHead-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">pNode temp = (pNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"><span class="keyword">if</span>(!temp)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测到录入完毕后将分配的空间清除掉</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">2</span>!=<span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s%s&quot;</span>,temp-&gt;name,temp-&gt;pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(temp);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cur-&gt;next=temp;</span><br><span class="line">cur = temp;</span><br><span class="line">cur-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这行代码主要的主要作用是，获取文本中设置的账号密码，放入链表中，用来达到登入的效果，具体的登入判断代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">login</span><span class="params">(pNode head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> pass[<span class="number">10</span>];</span><br><span class="line">pNode temp = head-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span>==head-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;user list empty\n&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************************************\n&quot;</span> );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;          欢迎进入猜单词小游戏\n&quot;</span> );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************************************\n&quot;</span> );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;用户名:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;密码:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,pass);</span><br><span class="line"><span class="keyword">while</span>(temp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>==<span class="built_in">strcmp</span>(temp-&gt;name,name) &amp;&amp; <span class="number">0</span>==<span class="built_in">strcmp</span>(temp-&gt;pass,pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;success...........\n&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp = temp-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;user not found.........\n&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这块使用到字符串的对比，文件系统的读取。</p><h2 id="进行拼写"><a href="#进行拼写" class="headerlink" title="进行拼写"></a>进行拼写</h2><p>进行拼写部分存在俩种模式，可以随机获取单词或者进行顺序拼写，从中使用到随机数组，来进行选取文件中的随机行号的数据，具体代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">(<span class="keyword">int</span> play_u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s1=<span class="number">0</span>,s2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">char</span> en[<span class="number">100</span>],ch[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//修改者：jgx 定义随机数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> whichline = <span class="number">0</span>;<span class="comment">//随机生成的行号</span></span><br><span class="line"><span class="keyword">int</span> currentindex = <span class="number">0</span>;<span class="comment">//用来匹配是否等于生成的行号 </span></span><br><span class="line">   <span class="comment">// int whichline =  rand()% (10 - 50 + 1) + 50;//生成m~n的随机数</span></span><br><span class="line">    <span class="comment">//定义游戏中退出变量</span></span><br><span class="line">    <span class="keyword">int</span> uExit = <span class="number">0</span>;</span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;words.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line">FILE* fp1 = fopen(<span class="string">&quot;word.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp1) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">//whichline =  rand()% (1 - rand_number +1 ) + rand_number - 1;//生成m~n的随机数</span></span><br><span class="line">whichline =  rand()% rand_number + <span class="number">1</span>;<span class="comment">//生成m~n的随机数</span></span><br><span class="line"><span class="comment">//printf(&quot;whichline = %d\r\n&quot;,whichline);</span></span><br><span class="line"><span class="keyword">if</span>(play_u == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(uExit &gt;= <span class="number">0</span> &amp;&amp; !feof(fp) &amp;&amp; !feof(fp1))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( currentindex == whichline )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏开始\n&quot;</span>);</span><br><span class="line"><span class="comment">//system(&quot;cls&quot;);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词的中文:\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>(fp1,<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fscanf</span>(fp1, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ch);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词的第一个字母:\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s&quot;</span>, en);<span class="comment">//fp是文件指针，指向要从该文件中将数据读出</span></span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,en[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">clock_t</span> start, end;</span><br><span class="line">start = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的答案：\n&quot;</span>);</span><br><span class="line">s1++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;_____\r&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line"><span class="comment">/************退出***********/</span></span><br><span class="line"><span class="comment">// 修改者：jgx</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,Game_exit)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏中退出游戏\r&quot;</span>);</span><br><span class="line">   <span class="comment">// printf(&quot;1 %d\r&quot;,uExit);</span></span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,en)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案正确\n&quot;</span>);</span><br><span class="line"><span class="comment">//printf(&quot;***********************\n&quot;);</span></span><br><span class="line">s2++;</span><br><span class="line">end = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;time=%0.2f\n\r&quot;</span>, (<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC &gt; <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏时间大于15S，游戏失败，1S后退出游戏\r\n&quot;</span>);</span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;time=%0.2f\n\r&quot;, (double)(end - start) / CLOCKS_PER_SEC);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案错误，还有%d次机会\n&quot;</span>,i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;正确答案为%s\n&quot;</span>,en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">currentindex++;</span><br><span class="line"><span class="built_in">fscanf</span>(fp1,<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s&quot;</span>,en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;currentindex = %d\r\n&quot;</span>,currentindex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//正常的流程，顺序排列。</span></span><br><span class="line"><span class="keyword">while</span>(uExit &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp1,<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fscanf</span>(fp1, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ch);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词的第一个字母:\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s&quot;</span>, en);<span class="comment">//fp是文件指针，指向要从该文件中将数据读出</span></span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,en[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">clock_t</span> start, end;</span><br><span class="line">start = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的答案：\n&quot;</span>);</span><br><span class="line">s1++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;_____\r&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line"><span class="comment">///************退出***********/</span></span><br><span class="line"><span class="comment">// 修改者：jgx</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,Game_exit)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏中退出游戏\r&quot;</span>);</span><br><span class="line">   <span class="comment">// printf(&quot;1 %d\r&quot;,uExit);</span></span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,en)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案正确\n&quot;</span>);</span><br><span class="line"><span class="comment">//printf(&quot;***********************\n&quot;);</span></span><br><span class="line">s2++;</span><br><span class="line">end = clock();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;time=%0.2f\n\r&quot;</span>, (<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC &gt; <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;游戏时间大于15S，游戏失败，1S后退出游戏\r\n&quot;</span>);</span><br><span class="line">uExit = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;time=%0.2f\n\r&quot;, (double)(end - start) / CLOCKS_PER_SEC);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;答案错误，还有%d次机会\n&quot;</span>,i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;正确答案为%s\n&quot;</span>,en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//正常的流程，顺序排列</span></span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fp1);</span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="添加新单词"><a href="#添加新单词" class="headerlink" title="添加新单词"></a>添加新单词</h2><p>添加新单词在末尾新添加单词，具体代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;word.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line">FILE* fp1 = fopen(<span class="string">&quot;words.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line"><span class="keyword">char</span> en[<span class="number">100</span>],ch[<span class="number">100</span>]; <span class="comment">//建立临时储存新增数据的结构体变量</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp1) &#123; <span class="comment">//确保成功打开文件，否则退出系统</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="comment">//Sleep(3000);</span></span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要添加的英文:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, en);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要添加的中文:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">&quot;%s\n&quot;</span>,ch);</span><br><span class="line"><span class="built_in">fprintf</span>(fp1,<span class="string">&quot;%s\n&quot;</span>,en);</span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fp1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词添加成功！\n&quot;</span>);</span><br><span class="line">menu_words();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除某个单词"><a href="#删除某个单词" class="headerlink" title="删除某个单词"></a>删除某个单词</h2><p>文件系统的删除单词是使用到定位的方法，定位出某一行，再把其他的写入新的文本文件，重新重命名，最后把原来的文件删除，在这里面使用到先获取文件内的行数，再进行操作：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************获取文件列表*******************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">words_menu</span><span class="params">(<span class="keyword">char</span>* filepath,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp = fopen(filepath, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line">    <span class="keyword">char</span> en[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> num_u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == fp) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据获取失败！即将退出系统...&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">while</span>(!feof(fp)) &#123;</span><br><span class="line">num_u++;</span><br><span class="line">fgets(en,<span class="keyword">sizeof</span>(en), fp);</span><br><span class="line">        <span class="keyword">if</span>(feof(fp))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="comment">//防止最后俩个数据打印 //在代码中又不存在重复的情况，重复目前推测是最后的数据有回车换行导致</span></span><br><span class="line"><span class="keyword">if</span>( n == <span class="number">1</span> )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;en[%d] = %s \r\n&quot;</span>,num_u,en);</span><br><span class="line">    &#125;</span><br><span class="line">rand_number = num_u;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除功能如下</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">char</span>* filepath, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">4096</span>]; <span class="comment">//每读取一行，都将内容放到该数组中</span></span><br><span class="line"></span><br><span class="line">        FILE* fp = fopen(filepath, <span class="string">&quot;r&quot;</span>); <span class="comment">//filepath里是原内容</span></span><br><span class="line"></span><br><span class="line">        FILE* fpt = fopen(<span class="string">&quot;temp.txt&quot;</span>, <span class="string">&quot;w&quot;</span>); <span class="comment">//将filepath文件第n行内容删除后存入temp.txt中</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!feof(fp))</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            i++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == n) <span class="comment">//删掉第n行，其实就是读到第n行时，仅仅移动一下文件指针，否则就</span></span><br><span class="line"></span><br><span class="line">            &#123; <span class="comment">//将读取到的一行文件内容放到临时文件中temp.txt中，这就是所谓的删除</span></span><br><span class="line"></span><br><span class="line">                fgets(buf,<span class="keyword">sizeof</span>(buf), fp); <span class="comment">//必须要这一行，因为加上后文件指针将会移动</span></span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fgets(buf, <span class="keyword">sizeof</span>(buf), fp);</span><br><span class="line">   <span class="comment">// printf(&quot;buf[%d] = %s \r\n&quot;,i,buf);</span></span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line"><span class="comment">//while(strcmp(buf,&quot;\n&quot;) == 0);</span></span><br><span class="line">                <span class="built_in">fprintf</span>(fpt, <span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fclose(fpt);</span><br><span class="line">remove(filepath);</span><br><span class="line">rename(<span class="string">&quot;temp.txt&quot;</span>,<span class="string">&quot;words.txt&quot;</span>);</span><br><span class="line">menu_words();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************/</span></span><br></pre></td></tr></table></figure><h2 id="更改单词"><a href="#更改单词" class="headerlink" title="更改单词"></a>更改单词</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">char</span>* filepath,<span class="keyword">int</span> n,<span class="keyword">char</span> *c,<span class="keyword">int</span> clean)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">char</span> buf[<span class="number">4096</span>]; <span class="comment">//每读取一行，都将内容放到该数组中</span></span><br><span class="line">    <span class="keyword">int</span> write_size = <span class="number">0x100</span>;</span><br><span class="line"><span class="keyword">int</span> offset = <span class="number">0x100</span>;</span><br><span class="line">        FILE* fp = fopen(filepath, <span class="string">&quot;r&quot;</span>); <span class="comment">//filepath里是原内容</span></span><br><span class="line"></span><br><span class="line">        FILE* fpt = fopen(<span class="string">&quot;temp.txt&quot;</span>, <span class="string">&quot;w&quot;</span>); <span class="comment">//将filepath文件第n行内容删除后存入temp.txt中</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!feof(fp))</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            i++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == n) <span class="comment">//删掉第n行，其实就是读到第n行时，仅仅移动一下文件指针，否则就</span></span><br><span class="line"></span><br><span class="line">            &#123; <span class="comment">//将读取到的一行文件内容放到临时文件中temp.txt中，这就是所谓的删除</span></span><br><span class="line"><span class="keyword">while</span>(clean--)</span><br><span class="line">&#123;</span><br><span class="line">fputc(<span class="number">0xFF</span>, fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fpt, <span class="string">&quot;%s&quot;</span>, c);</span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line"><span class="keyword">if</span> ( i == n)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">// fprintf(fpt, &quot;%s&quot;, c);</span></span><br><span class="line">&#125;</span><br><span class="line">                fgets(buf, <span class="keyword">sizeof</span>(buf), fp);</span><br><span class="line">   <span class="comment">// printf(&quot;buf[%d] = %s \r\n&quot;,i,buf);</span></span><br><span class="line"><span class="keyword">if</span>(feof(fp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//防止最后俩个数据打印</span></span><br><span class="line">                <span class="built_in">fprintf</span>(fpt, <span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fclose(fpt);</span><br><span class="line">remove(filepath);</span><br><span class="line">rename(<span class="string">&quot;temp.txt&quot;</span>,<span class="string">&quot;words.txt&quot;</span>);</span><br><span class="line">menu_words();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这个方法是根据删除部分修改的，加入了更改第行的数据，把原本的数据线清空，在写入，最开始多了一步清空的操作。</p><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>​        感谢桉提供原始代码！在基础上进行修改~（2月底去厦门找你玩）</p><p>​        在编写这一套代码时，由于太长时间没有接触这一方面的代码，文件系统的相关API，这次充分复习了一下，把fopen、fclose、fputc、fgetc、fscanf、fread、fwrite、fseek。</p><p>​        在完善代码的同时，遇到了二进制打开文件，利用fread“wb+”,发现读取的时候打印数据出来正常，但是打开文本文件时发现乱码的情况，经过了解分析，使用这个是会出现这种情况，最后利用了fscanf、fgetc系列。</p><p>​        在工作中，也有遇见读取文件的项目，但是那时候不是重点，没有过多的花时间了解，这次的编写，也弥补了这一方面的短缺。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目使用知识点&quot;&gt;&lt;a href=&quot;#项目使用知识点&quot; class=&quot;headerlink&quot; title=&quot;项目使用知识点&quot;&gt;&lt;/a&gt;项目使用知识点&lt;/h1&gt;&lt;p&gt;​    C语言文件读取、写入、删除、更改以及列表的创建。&lt;/p&gt;
&lt;p&gt;​    整体项目，在完善</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言——字符串、数据转换</title>
    <link href="https://jgxnb.cn/2023/01/24/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE/"/>
    <id>https://jgxnb.cn/2023/01/24/C%E8%AF%AD%E8%A8%80%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE/</id>
    <published>2023-01-24T07:53:12.000Z</published>
    <updated>2023-01-26T08:23:12.755Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章来源："><a href="#文章来源：" class="headerlink" title="文章来源："></a>文章来源：</h1><p>​    出自一位同事的分享，因此这些代码只截取部分，很早以前就想看了，由于工作原因，一直抽不出身来。放假了好好参透了一下，接下来，将会讲解一下。</p><h2 id="字符串内反向查找指定字符串"><a href="#字符串内反向查找指定字符串" class="headerlink" title="字符串内反向查找指定字符串"></a>字符串内反向查找指定字符串</h2><p>​    函数如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *Src = <span class="string">&quot;1234567890!&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> *Find = <span class="string">&quot;56&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *pSrc_u;<span class="comment">//调试中便于查看数据</span></span><br><span class="line"><span class="keyword">char</span> *pFind_u;<span class="comment">//调试中便于查看数据</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">strFindStrReversal</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">unsigned</span> <span class="keyword">char</span> *pFind, <span class="keyword">int</span> iFindLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">for</span> (i = iSrcLen - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (*(pSrc + i) == *(pFind + iFindLen - <span class="number">1</span>))</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    strFindStrReversal(Src,<span class="number">5</span>,Find,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​        查找的核心部分代码如上，根据VC++ debug效果显示，从要选择第几个常数开始，进行反向的查找要查找的字符串，如定义俩个简单的字符串char <em>Src，</em>Find；者Src中就从第5位开始查找，Fing中的字符串。</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/01.png" alt="01"></p><h2 id="字符串内查找指定字符串"><a href="#字符串内查找指定字符串" class="headerlink" title="字符串内查找指定字符串"></a>字符串内查找指定字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">strFindStr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">unsigned</span> <span class="keyword">char</span> *pFind, <span class="keyword">int</span> iFindLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iSrcLen; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">                 <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; iFindLen; j++)</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        这套代码即为最常见正序寻找。这里不做过多讲解，粘贴出来主要部分。</p><h2 id="字符串内查找第N个字符后的数据长度"><a href="#字符串内查找第N个字符后的数据长度" class="headerlink" title="字符串内查找第N个字符后的数据长度"></a><em>字符串内查找第N个字符后的数据长度</em></h2><p>​        这个函数是在要查找的字符串中查找到需要查到的数据，查找到几次后，并算出后面还有几个数据，次核心代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *Src = <span class="string">&quot;1234ccc890!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *pSrc_u;</span><br><span class="line"><span class="keyword">char</span> *pFind_u;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strFindStrLen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">unsigned</span> <span class="keyword">char</span> pFind, <span class="keyword">int</span> iFindNum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">          <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iSrcLen; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              ...</span><br><span class="line">                  <span class="keyword">if</span> (*(pSrc + i) == pFind)</span><br><span class="line">              ...</span><br><span class="line">          &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    strFindStrLen(Src,<span class="number">10</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        根据调试，可以看出最后返回的数字为6：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/02-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%86%85%E6%89%BE%E5%88%B0N%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%BB%A5%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE.png" alt="02-字符串内找到N个字符以后的数据"></p><h2 id="在字符串内查找定义开始结束字符之间的数有多少（改）"><a href="#在字符串内查找定义开始结束字符之间的数有多少（改）" class="headerlink" title="在字符串内查找定义开始结束字符之间的数有多少（改）"></a><em>在字符串内查找定义开始结束字符之间的数有多少</em>（改）</h2><p>​        该函数可以直观的查找到需要的区间之内的数据，相关的代码段如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">strFindStrSpan</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pSrc, <span class="keyword">int</span> iSrcLen, <span class="keyword">int</span> iStart, <span class="keyword">int</span> iEnd, <span class="keyword">unsigned</span> <span class="keyword">char</span> cChar, <span class="keyword">int</span> *iOutLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">         <span class="keyword">if</span> (*(pSrc + i) == cChar &amp;&amp; iFlg == <span class="number">0</span>)</span><br><span class="line">    ...</span><br><span class="line">         <span class="keyword">if</span> (*(pSrc + i) == cChar)</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= iEnd)</span><br><span class="line">        &#123;</span><br><span class="line">          </span><br><span class="line">             <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   strFindStrSpan(Src,<span class="number">10</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="string">&#x27;c&#x27;</span>,len);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        根据调试最终的结果如下图所示：</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/03-%E5%BC%80%E5%A7%8B%E5%88%B0%E7%BB%93%E6%9D%9F%E7%9A%84%E6%95%B0%E9%87%8F.png" alt="03-开始到结束的数量"></p><h1 id="查找某个字符的个数"><a href="#查找某个字符的个数" class="headerlink" title="查找某个字符的个数"></a><em>查找某个字符的个数</em></h1><p>​        在某个字符串中查找，某个字符的作用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findcharnum</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *pData, <span class="keyword">int</span> iSize, <span class="keyword">unsigned</span> <span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">         <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; iSize; i++)</span><br><span class="line">         &#123;</span><br><span class="line">             ...</span><br><span class="line">                 k++;</span><br><span class="line">             ...</span><br><span class="line">         &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        代码的整个核心思想就如上部分所示。</p><h2 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h2><p>​        这个部分后面更新，代码部分还未了解充分，后期补上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文章来源：&quot;&gt;&lt;a href=&quot;#文章来源：&quot; class=&quot;headerlink&quot; title=&quot;文章来源：&quot;&gt;&lt;/a&gt;文章来源：&lt;/h1&gt;&lt;p&gt;​    出自一位同事的分享，因此这些代码只截取部分，很早以前就想看了，由于工作原因，一直抽不出身来。放假了好好参透</summary>
      
    
    
    
    <category term="我的C语言" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://jgxnb.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>基于STM32的桌面精灵</title>
    <link href="https://jgxnb.cn/2023/01/22/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%B2%BE%E7%81%B5/"/>
    <id>https://jgxnb.cn/2023/01/22/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%B2%BE%E7%81%B5/</id>
    <published>2023-01-22T05:09:21.000Z</published>
    <updated>2023-01-22T14:59:30.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作品总介绍："><a href="#作品总介绍：" class="headerlink" title="作品总介绍："></a>作品总介绍：</h1><p>​        基于STM32单片机以STM32F103C8T6为核心控制配备ESP32运行FreeRtos，搭载LD3322,以实现通过WiFi协议技术实现HTTP协议制作网页界面和语音控制来实现桌面摆件的互动性和开关对应摆件功能，例如风扇、灯、雾化器以及MP3播放功能，同时通过SSD1603驱动IC和DHT11测量当前温度并显示在OLED上。</p><h2 id="硬件方面："><a href="#硬件方面：" class="headerlink" title="硬件方面："></a>硬件方面：</h2><p>​        主控：STM32F103C8T6</p><p>​        语音模块：LD3322</p><p>​        WIFI模块：ESP32</p><p>​        MP3模块：MY2490</p><p>​        以及一些其他的模块，硬件方面的连接这里先不做讲解，后续慢慢补充。</p><h2 id="软件方面："><a href="#软件方面：" class="headerlink" title="软件方面："></a>软件方面：</h2><p>​        工具：Keil、Arduino IDE、智能公元（LD3322编写平台）</p><h1 id="整体方案："><a href="#整体方案：" class="headerlink" title="整体方案："></a>整体方案：</h1><p>​        <img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230122134030153.png" alt="image-20230122134030153"></p><h2 id="软件实现步骤："><a href="#软件实现步骤：" class="headerlink" title="软件实现步骤："></a>软件实现步骤：</h2><h3 id="智能公元"><a href="#智能公元" class="headerlink" title="智能公元"></a>智能公元</h3><p>​        在这个平台可以进行对LD3322进行配置，详细的配置效果如下</p><p>​        <img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/%E6%99%BA%E8%83%BD%E5%85%AC%E5%85%83.png" alt="智能公元"></p><p>​        通过配置识别语音之后，发送串口信息给主控芯片，从而进行后续的操作，对于如何操作、配置可以去入手LD3322，官方会给予详细的操作指南。</p><h3 id="STM32代码部分截取"><a href="#STM32代码部分截取" class="headerlink" title="STM32代码部分截取"></a>STM32代码部分截取</h3><p>​        实现串口通信代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(USART2_RX_STA&amp;(<span class="number">1</span>&lt;&lt;<span class="number">15</span>))</span><br><span class="line">&#123; </span><br><span class="line">USART2_RX_STA&amp;=~(<span class="number">1</span>&lt;&lt;<span class="number">15</span>);</span><br><span class="line"><span class="keyword">switch</span>(USART2_RX_BUF[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x11</span>:</span><br><span class="line">OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">85</span>,<span class="number">6</span>,Atomizer);</span><br><span class="line">    WU=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x12</span>:</span><br><span class="line">OLED_Clear();</span><br><span class="line">    WU=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x13</span>:</span><br><span class="line">  OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">2</span>,<span class="string">&quot;Open the fan&quot;</span>,<span class="number">32</span>);</span><br><span class="line">    FAN=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x14</span>:</span><br><span class="line">OLED_Clear();</span><br><span class="line">FAN=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x15</span>:</span><br><span class="line">LED=<span class="number">1</span>;</span><br><span class="line">OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">  ledon =<span class="number">1</span>;</span><br><span class="line">  ledonsecond =<span class="number">1</span>;</span><br><span class="line">  OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">93</span>,<span class="number">7</span>,LED);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x16</span>:</span><br><span class="line">LED=<span class="number">0</span>;</span><br><span class="line">ledonsecond =<span class="number">0</span>;</span><br><span class="line">  OLED_Clear();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x17</span>:</span><br><span class="line">UART3SendByte5(tt[<span class="number">0</span>],tt[<span class="number">1</span>],tt[<span class="number">2</span>],tt[<span class="number">3</span>],tt[<span class="number">4</span>]);</span><br><span class="line">OLED_DrawBMP(<span class="number">55</span>,<span class="number">1</span>,<span class="number">80</span>,<span class="number">6</span>,col);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x18</span>:</span><br><span class="line">UART3SendByte5(tt2[<span class="number">0</span>],tt2[<span class="number">1</span>],tt2[<span class="number">2</span>],tt2[<span class="number">3</span>],tt2[<span class="number">4</span>]);</span><br><span class="line">OLED_Clear();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x19</span>:</span><br><span class="line">UART3SendByte5(tt1[<span class="number">0</span>],tt1[<span class="number">1</span>],tt1[<span class="number">2</span>],tt1[<span class="number">3</span>],tt1[<span class="number">4</span>]);</span><br><span class="line">OLED_DrawBMP(<span class="number">55</span>,<span class="number">1</span>,<span class="number">80</span>,<span class="number">6</span>,col);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x21</span>:</span><br><span class="line">ESP32RESET = <span class="number">1</span>;</span><br><span class="line">esp32status =<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">USART2_RX_STA=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        代码中详细区分了不同的串口信息，STM32将执行不同的操作。可以进行LED、雾化器、风扇的开关以及MP3的音乐控制。</p><p>​        其中挑选几个封装函数进行讲解：</p><p>​        1.UART3SendByte5(tt1[0],tt1[1],tt1[2],tt1[3],tt1[4])：串口发送5个字节的数据，详细代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tt[]=&#123;<span class="number">0x7E</span>,<span class="number">0X03</span>,<span class="number">0X11</span>,<span class="number">0x12</span>,<span class="number">0xEF</span>&#125;;<span class="comment">//播放</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tt1[]=&#123;<span class="number">0x7E</span>,<span class="number">0X03</span>,<span class="number">0X13</span>,<span class="number">0x10</span>,<span class="number">0xEF</span>&#125;;<span class="comment">//下一首</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> tt2[]=&#123;<span class="number">0x7E</span>,<span class="number">0X03</span>,<span class="number">0X1C</span>,<span class="number">0x1F</span>,<span class="number">0xEF</span>&#125;;<span class="comment">//暂停</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART3SendByte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">USART_SendData(USART3,SendData);</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET);    </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART3SendByte5</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData1,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData2,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData3,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData4,<span class="keyword">unsigned</span> <span class="keyword">char</span> SendData5)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">UART3SendByte(SendData1);</span><br><span class="line">UART3SendByte(SendData2);</span><br><span class="line">UART3SendByte(SendData3);</span><br><span class="line">UART3SendByte(SendData4);</span><br><span class="line">UART3SendByte(SendData5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        简单的串口发送，封装发送五个字节的串口函数，使得MP3发生不同的操作。</p><p>​        2.OLED_Clear()、void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[])、void OLED_ShowString(u8 x,u8 y,u8 chr[],u8 Char_Size)这类函数就是OLED显示屏的相关函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_DrawBMP</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> x0, <span class="keyword">unsigned</span> <span class="keyword">char</span> y0,<span class="keyword">unsigned</span> <span class="keyword">char</span> x1, <span class="keyword">unsigned</span> <span class="keyword">char</span> y1,<span class="keyword">unsigned</span> <span class="keyword">char</span> BMP[])</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> x,y;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">  <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x0,y); </span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">    &#123;      </span><br><span class="line">    OLED_WR_Byte(BMP[j++],OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>​        OLED_DrawBMP():通过不同的位置信息摆放图像的位置，最后一个参数即为图片，代码中有Atomizer、LED这类的图片，由于没有找到满意的风扇图片，这里就显示字符串，字符串的相关代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 chr[],u8 Char_Size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;OLED_ShowChar(x,y,chr[j],Char_Size); </span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        其他的一些初始化部分代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> esp32status = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> esp32count = <span class="number">0</span>;</span><br><span class="line">Gpio();</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_Configuration();  <span class="comment">//中断分组</span></span><br><span class="line">USART2_Init(<span class="number">9600</span>);<span class="comment">//串口2初始化与LD3322连接</span></span><br><span class="line">USART3_Init(<span class="number">9600</span>);<span class="comment">//串口3初始化与MY240连接</span></span><br><span class="line">delay_ms(<span class="number">1000</span>);</span><br><span class="line">OLED_Init();</span><br><span class="line">OLED_Clear();</span><br><span class="line">OLED_Display_On();</span><br></pre></td></tr></table></figure><h3 id="ESP32相关代码"><a href="#ESP32相关代码" class="headerlink" title="ESP32相关代码"></a>ESP32相关代码</h3><p>​        这一部分中可以收获到ESP32连接WiFi、ESP32制作网页界面、ESP32运行freeRTOS。</p><h4 id="ESP32连接WIFI"><a href="#ESP32连接WIFI" class="headerlink" title="ESP32连接WIFI"></a>ESP32连接WIFI</h4><p>​        整体步骤为：判断是否连接过网络，连接过则获取之前保存的信息，如果没有则进行搜索附近WIFI，选定自己熟悉的WiFi进行连接，相关代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESPmDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_wifi.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* AP_SSID  = <span class="string">&quot;ESP32_Config&quot;</span>; <span class="comment">//热点名称</span></span><br><span class="line">String wifi_ssid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String wifi_pass = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String scanNetworksID = <span class="string">&quot;&quot;</span>;<span class="comment">//用于储存扫描到的WiFi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROOT_HTML  <span class="meta-string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;WIFI Config by lwang&lt;/title&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&lt;/head&gt;&lt;style type=\&quot;text/css\&quot;&gt;.input&#123;display: block; margin-top: 10px;&#125;.input span&#123;width: 100px; float: left; float: left; height: 36px; line-height: 36px;&#125;.input input&#123;height: 30px;width: 200px;&#125;.btn&#123;width: 120px; height: 35px; background-color: #000000; border:0px; color:#ffffff; margin-top:15px; margin-left:100px;&#125;&lt;/style&gt;&lt;body&gt;&lt;form method=\&quot;GET\&quot; action=\&quot;connect\&quot;&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi SSID&lt;/span&gt;&lt;input type=\&quot;text\&quot; name=\&quot;ssid\&quot;&gt;&lt;/label&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi PASS&lt;/span&gt;&lt;input type=\&quot;text\&quot;  name=\&quot;pass\&quot;&gt;&lt;/label&gt;&lt;input class=\&quot;btn\&quot; type=\&quot;submit\&quot; name=\&quot;submit\&quot; value=\&quot;Submie\&quot;&gt; &lt;p&gt;&lt;span&gt; Nearby wifi:&lt;/P&gt;&lt;/form&gt;&quot;</span></span></span><br><span class="line"><span class="function">WebServer <span class="title">server</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESET_PIN   13  <span class="comment">//用于删除WiFi信息</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AutoConfig</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wifi_Config</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  pinMode(RESET_PIN, INPUT_PULLUP);</span><br><span class="line">  <span class="comment">// 连接WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (!AutoConfig())</span><br><span class="line">  &#123;</span><br><span class="line">    wifi_Config();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//用于删除已存WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (digitalRead(RESET_PIN) == LOW) &#123;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    esp_wifi_restore();</span><br><span class="line">    delay(<span class="number">10</span>);</span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() == WL_CONNECTED) &#123;<span class="comment">//WIFI已连接</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于配置WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wifi_Config</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;scan start&quot;</span>);</span><br><span class="line">  <span class="comment">// 扫描附近WiFi</span></span><br><span class="line">  <span class="keyword">int</span> n = WiFi.scanNetworks();</span><br><span class="line">  Serial.println(<span class="string">&quot;scan done&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;no networks found&quot;</span>);</span><br><span class="line">    scanNetworksID = <span class="string">&quot;no networks found&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.print(n);</span><br><span class="line">    Serial.println(<span class="string">&quot; networks found&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="comment">// Print SSID and RSSI for each network found</span></span><br><span class="line">      Serial.print(i + <span class="number">1</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">      Serial.print(WiFi.SSID(i));</span><br><span class="line">      Serial.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.RSSI(i));</span><br><span class="line">      Serial.print(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">      Serial.println((WiFi.encryptionType(i) == WIFI_AUTH_OPEN) ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;*&quot;</span>);</span><br><span class="line">      scanNetworksID += <span class="string">&quot;&lt;P&gt;&quot;</span> + WiFi.SSID(i) + <span class="string">&quot;&lt;/P&gt;&quot;</span>;</span><br><span class="line">      delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.mode(WIFI_AP);<span class="comment">//配置为AP模式</span></span><br><span class="line">  boolean result = WiFi.softAP(AP_SSID, <span class="string">&quot;&quot;</span>); <span class="comment">//开启WIFI热点</span></span><br><span class="line">  <span class="keyword">if</span> (result)</span><br><span class="line">  &#123;</span><br><span class="line">    IPAddress myIP = WiFi.softAPIP();</span><br><span class="line">    <span class="comment">//打印相关信息</span></span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;Soft-AP IP address = &quot;</span>);</span><br><span class="line">    Serial.println(myIP);</span><br><span class="line">    Serial.println(String(<span class="string">&quot;MAC address = &quot;</span>)  + WiFi.softAPmacAddress().c_str());</span><br><span class="line">    Serial.println(<span class="string">&quot;waiting ...&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;  <span class="comment">//开启热点失败</span></span><br><span class="line">    Serial.println(<span class="string">&quot;WiFiAP Failed&quot;</span>);</span><br><span class="line">    delay(<span class="number">3000</span>);</span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (MDNS.begin(<span class="string">&quot;esp32&quot;</span>)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;MDNS responder started&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//首页</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, ROOT_HTML + scanNetworksID + <span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//连接</span></span><br><span class="line">  server.on(<span class="string">&quot;/connect&quot;</span>, []() &#123;</span><br><span class="line"></span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;font size=\&quot;10\&quot;&gt;successd,wifi connecting...&lt;br /&gt;Please close this page manually.&lt;/font&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    WiFi.softAPdisconnect(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//获取输入的WIFI账户和密码</span></span><br><span class="line">    wifi_ssid = server.arg(<span class="string">&quot;ssid&quot;</span>);</span><br><span class="line">    wifi_pass = server.arg(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">    server.close();</span><br><span class="line">    WiFi.softAPdisconnect();</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi Connect SSID:&quot;</span> + wifi_ssid + <span class="string">&quot;  PASS:&quot;</span> + wifi_pass);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置为STA模式并连接WIFI</span></span><br><span class="line">    WiFi.mode(WIFI_STA);</span><br><span class="line">    WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());</span><br><span class="line">    <span class="keyword">uint8_t</span> Connect_time = <span class="number">0</span>; <span class="comment">//用于连接计时，如果长时间连接不成功，复位设备</span></span><br><span class="line">    <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;  <span class="comment">//等待WIFI连接成功</span></span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">      Connect_time ++;</span><br><span class="line">      <span class="keyword">if</span> (Connect_time &gt; <span class="number">80</span>) &#123;  <span class="comment">//长时间连接不上，复位设备</span></span><br><span class="line">        Serial.println(<span class="string">&quot;Connection timeout, check input is correct or try again later!&quot;</span>);</span><br><span class="line">        delay(<span class="number">3000</span>);</span><br><span class="line">        ESP.restart();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;WIFI Config Success&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">    Serial.print(<span class="string">&quot;  LocalIP:&quot;</span>);</span><br><span class="line">    Serial.print(WiFi.localIP());</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">  server.begin();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于上电自动连接WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AutoConfig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  WiFi.begin();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> wstatus = WiFi.status();</span><br><span class="line">    <span class="keyword">if</span> (wstatus == WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;WIFI SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;, PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      Serial.print(<span class="string">&quot;LocalIP:&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.localIP());</span><br><span class="line">      Serial.print(<span class="string">&quot; ,GateIP:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.gatewayIP());</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;WIFI AutoConfig Waiting......&quot;</span>);</span><br><span class="line">      Serial.println(wstatus);</span><br><span class="line">      delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;WIFI AutoConfig Faild!&quot;</span> );</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​        这一段代码，可以实现WiFi的连接，连接后，我们进行下一步、制作网页界面，制作网页界面需要HTML相关知识用来制作控制界面，以及温湿度显示界面。</p><h4 id="ESP32控制界面部分"><a href="#ESP32控制界面部分" class="headerlink" title="ESP32控制界面部分"></a>ESP32控制界面部分</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"> client.println(<span class="string">&quot;HTTP/1.1 200 OK&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Content-type:text/html&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Connection: close&quot;</span>);</span><br><span class="line">            client.println();</span><br><span class="line">  </span><br><span class="line">            <span class="function">turns the GPIOs on <span class="keyword">and</span> off</span></span><br><span class="line"><span class="function">            <span class="title">if</span> <span class="params">(header.indexOf(<span class="string">&quot;GET /LED/on&quot;</span>) &gt;= <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 on&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">22</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /LED/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 off&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">25</span>, LOW);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">5</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">33</span>, LOW);</span><br><span class="line">            &#125;</span><br><span class="line"> <span class="comment">/*********************************fan***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/on&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">23</span>, HIGH);</span><br><span class="line">              </span><br><span class="line">              &#125;<span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/off&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">26</span>, LOW);</span><br><span class="line">              &#125;</span><br><span class="line"><span class="comment">/******************************刷新按钮***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /new&quot;</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">               Serial.println(<span class="string">&quot;new&quot;</span>);</span><br><span class="line">              </span><br><span class="line">              &#125;</span><br><span class="line"><span class="comment">/******************************END**************************************/</span></span><br><span class="line">            <span class="comment">// Display the HTML web page</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;head&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;link rel=\&quot;icon\&quot; href=\&quot;data:,\&quot;&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// CSS to style the on/off buttons </span></span><br><span class="line">            <span class="comment">// Feel free to change the background-color and font-size attributes to fit your preferences</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;style&gt;html &#123; font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button &#123; background-color: #4CAF50; border: none; color: white; padding: 16px 40px;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;text-decoration: none; font-size: 30px; margin: 2px; cursor: pointer;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button2 &#123;background-color: #555555;&#125;&lt;/style&gt;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Web Page Heading</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;body&gt;&lt;h1&gt;桌面精灵&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 26  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;LED - State &quot;</span> + LED + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output26State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (LED==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; </span><br><span class="line">               </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 27  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;atomizer - State &quot;</span> + ATOMIZER + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output27State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (ATOMIZER==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*****************************Fan*************************************/</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;fan - State &quot;</span> + FAN + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (FAN==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h4 id="ESP32温湿度显示界面"><a href="#ESP32温湿度显示界面" class="headerlink" title="ESP32温湿度显示界面"></a>ESP32温湿度显示界面</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************温湿度显示**********************************/</span></span><br><span class="line">            <span class="keyword">if</span>(FAN==<span class="string">&quot;off&quot;</span> || DHT11_STATUS == <span class="number">0</span>)</span><br><span class="line">            &#123;    </span><br><span class="line">                client.println(<span class="string">&quot;&lt;a &gt;&lt;button class=\&quot;button top1\&quot;&gt;&amp;#x6E29;&amp;#x6E7F;&amp;#x5EA6;&amp;#x663E;&amp;#x793A;&lt;/button&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/a&gt;&lt;center style=\&quot;position: relative;\&quot;&gt;&lt;/br&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;temp\&quot;&gt;温度&lt;span style=\&quot;color: red;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.temperature);</span><br><span class="line">                client.println(<span class="string">&quot;°C&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;humi\&quot;&gt;湿度&lt;span style=\&quot;color: green;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.humidity);</span><br><span class="line">                client.println(<span class="string">&quot;%&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;/br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">/*******************************END*************************************/</span></span><br></pre></td></tr></table></figure><p>​        由于助于大家理解，下面附上HTML界面代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;data:,&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">html</span> &#123; <span class="attribute">font-family</span>: Helvetica; <span class="attribute">display</span>: inline-block; <span class="attribute">margin</span>: <span class="number">0px</span> auto; <span class="attribute">text-align</span>: center;&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.button</span> &#123;  <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>; <span class="attribute">border</span>: none; <span class="attribute">color</span>: white; <span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none; <span class="attribute">font-size</span>: <span class="number">30px</span>; <span class="attribute">margin</span>: <span class="number">2px</span>; <span class="attribute">cursor</span>: pointer;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.button2</span> &#123;<span class="attribute">background-color</span>: <span class="number">#555555</span>;&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>ESP32 Web Server<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>LED - State &quot; + LED + &quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>&quot;/<span class="attr">LED</span>/<span class="attr">on</span>\&quot;&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">\</span>&quot;<span class="attr">button</span>\&quot;&gt;</span>ON<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./pin?light1=1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button top1&quot;</span>&gt;</span><span class="symbol">&amp;#x6E29;</span><span class="symbol">&amp;#x6E7F;</span><span class="symbol">&amp;#x5EA6;</span><span class="symbol">&amp;#x663E;</span><span class="symbol">&amp;#x793A;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span> <span class="attr">style</span>=<span class="string">&quot;left: 20px; position: relative;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">br</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./pin?light1=1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;temp&quot;</span>&gt;</span>温度<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red;  font-size: 25px;&quot;</span>&gt;</span></span><br><span class="line">        00°C<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./pin?light1=0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;humi&quot;</span>&gt;</span>湿度<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: green;font-size: 25px;&quot;</span>&gt;</span></span><br><span class="line">            00%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​        我们移动端上显示的效果类似这种样式，具体还有写修改，可以创建完WiFi进行体验。</p><p>​        对于freeRTOS相关的是运用了ESP32的双核，在每个核上跑一个任务，详细的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task1code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task2code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">xTaskCreatePinnedToCore(Task1code, <span class="string">&quot;Task1&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">1</span>, <span class="literal">NULL</span>,  <span class="number">1</span>);<span class="comment">//</span></span><br><span class="line">xTaskCreatePinnedToCore(Task2code, <span class="string">&quot;Task2&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>,  <span class="number">0</span>);<span class="comment">//</span></span><br><span class="line">  <span class="comment">//实现任务的函数名称（task1）；任务的任何名称（“ task1”等）；分配给任务的堆栈大小，以字为单位；任务输入参数（可以为NULL）；任务的优先级（0是最低优先级）；任务句柄（可以为NULL）；任务将运行的内核ID（0或1）</span></span><br><span class="line">&#125;<span class="comment">//这边进行略写</span></span><br></pre></td></tr></table></figure><p>完整代码如下：    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;soc/rtc_cntl_reg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESPmDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_wifi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;HTTPClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;text.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="comment">/**********************温湿度定义***************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dht11.h&gt;</span></span></span><br><span class="line">dht11 DHT11;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11PIN 2</span></span><br><span class="line"><span class="keyword">int</span> DHT11_STATUS = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> DHT11_COUNT = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*******************************END**************************************************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* AP_SSID  = <span class="string">&quot;ESP32_Config&quot;</span>; <span class="comment">//热点名称</span></span><br><span class="line">String wifi_ssid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String wifi_pass = <span class="string">&quot;&quot;</span>;</span><br><span class="line">String scanNetworksID = <span class="string">&quot;&quot;</span>;<span class="comment">//用于储存扫描到的WiFi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROOT_HTML  <span class="meta-string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;WIFI Config by lwang&lt;/title&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&lt;/head&gt;&lt;style type=\&quot;text/css\&quot;&gt;.input&#123;display: block; margin-top: 10px;&#125;.input span&#123;width: 100px; float: left; float: left; height: 36px; line-height: 36px;&#125;.input input&#123;height: 30px;width: 200px;&#125;.btn&#123;width: 120px; height: 35px; background-color: #000000; border:0px; color:#ffffff; margin-top:15px; margin-left:100px;&#125;&lt;/style&gt;&lt;body&gt;&lt;form method=\&quot;GET\&quot; action=\&quot;connect\&quot;&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi SSID&lt;/span&gt;&lt;input type=\&quot;text\&quot; name=\&quot;ssid\&quot;&gt;&lt;/label&gt;&lt;label class=\&quot;input\&quot;&gt;&lt;span&gt;WiFi PASS&lt;/span&gt;&lt;input type=\&quot;text\&quot;  name=\&quot;pass\&quot;&gt;&lt;/label&gt;&lt;input class=\&quot;btn\&quot; type=\&quot;submit\&quot; name=\&quot;submit\&quot; value=\&quot;Submie\&quot;&gt; &lt;p&gt;&lt;span&gt; Nearby wifi:&lt;/P&gt;&lt;/form&gt;&quot;</span></span></span><br><span class="line"><span class="comment">/****************************************************网页定义*********************************/</span></span><br><span class="line"><span class="comment">// Variable to store the HTTP request</span></span><br><span class="line">String header;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Auxiliar variables to store the current output state</span></span><br><span class="line">String LED= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">String ATOMIZER= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">String FAN = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">String NEW = <span class="string">&quot;REFRESH&quot;</span>;</span><br><span class="line"><span class="comment">// Assign output variables to GPIO pins</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> output26 = <span class="number">23</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> output27 = <span class="number">27</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Current time</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> currentTime = millis();</span><br><span class="line"><span class="comment">// Previous time</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> previousTime = <span class="number">0</span>; </span><br><span class="line"><span class="comment">// Define timeout time in milliseconds (example: 2000ms = 2s)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> timeoutTime = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">/*********************************************变量********************************/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tool</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> ledinput;</span><br><span class="line">  <span class="keyword">int</span> faninput;</span><br><span class="line">  <span class="keyword">int</span> wuinput;</span><br><span class="line">&#125;tools;</span><br><span class="line">tools ntools;</span><br><span class="line"><span class="keyword">bool</span> resetesp = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/******************************************END************************************/</span></span><br><span class="line"><span class="function">WiFiServer <span class="title">server1</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"><span class="function">WebServer <span class="title">server</span><span class="params">(<span class="number">80</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESET_PIN   13  <span class="comment">//用于删除WiFi信息</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************OLED*****************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_SSD1306.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_WIDTH 128 <span class="comment">// 设置OLED宽度,单位:像素</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_HEIGHT 64 <span class="comment">// 设置OLED高度,单位:像素</span></span></span><br><span class="line"><span class="comment">// 自定义重置引脚,虽然教程未使用,但却是Adafruit_SSD1306库文件所必需的</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_RESET 4</span></span><br><span class="line"><span class="function">Adafruit_SSD1306 <span class="title">display</span><span class="params">(SCREEN_WIDTH, SCREEN_HEIGHT, &amp;Wire, OLED_RESET)</span></span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *ntpServer = <span class="string">&quot;pool.ntp.org&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> gmtOffset_sec = <span class="number">8</span> * <span class="number">3600</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> daylightOffset_sec = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/************************OLED*****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task1code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task2code</span><span class="params">( <span class="keyword">void</span> *pvParameters )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    pinMode(RESET_PIN, INPUT);</span><br><span class="line"><span class="comment">/***************************控制引脚*******************************/</span></span><br><span class="line">    pinMode(<span class="number">33</span>, OUTPUT);</span><br><span class="line">    pinMode(<span class="number">5</span>, OUTPUT);      <span class="comment">// set the fan pin mode</span></span><br><span class="line"></span><br><span class="line">    pinMode(<span class="number">25</span>, OUTPUT);</span><br><span class="line">    pinMode(<span class="number">22</span>, OUTPUT);      <span class="comment">// set the LED pin mode</span></span><br><span class="line"></span><br><span class="line">    pinMode(<span class="number">26</span>, OUTPUT);</span><br><span class="line">    pinMode(<span class="number">23</span>, OUTPUT);      <span class="comment">//at</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    pinMode(<span class="number">34</span>, INPUT);</span><br><span class="line">    pinMode(<span class="number">35</span>, INPUT);       <span class="comment">//LED</span></span><br><span class="line">    pinMode(<span class="number">32</span>, INPUT);      <span class="comment">// </span></span><br><span class="line"><span class="comment">/*******************串口2当做IO口使用*************************/</span></span><br><span class="line">    pinMode(<span class="number">17</span>, OUTPUT);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">/************************end******************************/</span></span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">25</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">22</span>, LOW); </span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">33</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">5</span>, LOW); </span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">26</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">23</span>, LOW); </span><br><span class="line"></span><br><span class="line">   pinMode(DHT11PIN,OUTPUT);  </span><br><span class="line"><span class="comment">/*************************DHT11**************************/</span></span><br><span class="line">   digitalWrite(<span class="number">17</span>, HIGH); </span><br><span class="line"><span class="comment">/****************************END***********************************/</span></span><br><span class="line"></span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We start by connecting to a WiFi network</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">// 连接WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (!AutoConfig())</span><br><span class="line">  &#123;</span><br><span class="line">    wifi_Config();</span><br><span class="line">    Serial.println(<span class="string">&quot;esp32 reset&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connected.&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">    WRITE_PERI_REG(RTC_CNTL_BROWN_OUT_REG, <span class="number">0</span>);<span class="comment">//关闭低电压检测,避免无限重启</span></span><br><span class="line">    xTaskCreatePinnedToCore(Task1code, <span class="string">&quot;Task1&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">1</span>, <span class="literal">NULL</span>,  <span class="number">1</span>);<span class="comment">//</span></span><br><span class="line">    xTaskCreatePinnedToCore(Task2code, <span class="string">&quot;Task2&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>,  <span class="number">0</span>);<span class="comment">//</span></span><br><span class="line">  <span class="comment">//实现任务的函数名称（task1）；任务的任何名称（“ task1”等）；分配给任务的堆栈大小，以字为单位；任务输入参数（可以为NULL）；任务的优先级（0是最低优先级）；任务句柄（可以为NULL）；任务将运行的内核ID（0或1）</span></span><br><span class="line">  <span class="comment">//Serial.begin(115200);</span></span><br><span class="line">    server1.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task1code</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span> </span>&#123;</span><br><span class="line">  <span class="comment">//setup部分</span></span><br><span class="line">  <span class="keyword">for</span> (;;)<span class="comment">//相当于loop</span></span><br><span class="line">&#123;</span><br><span class="line">   digitalWrite(<span class="number">25</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">22</span>, LOW); <span class="comment">//LED</span></span><br><span class="line">   digitalWrite(<span class="number">26</span>, HIGH); </span><br><span class="line">   digitalWrite(<span class="number">23</span>, LOW); <span class="comment">//WU</span></span><br><span class="line"></span><br><span class="line">   digitalWrite(<span class="number">33</span>, HIGH); <span class="comment">//FAN</span></span><br><span class="line">   digitalWrite(<span class="number">5</span>, LOW); </span><br><span class="line"><span class="comment">/*******************串口2DHT11******************************************/</span></span><br><span class="line">   digitalWrite(<span class="number">17</span>, HIGH); </span><br><span class="line"><span class="comment">/********************************检测开关状态****************************/</span></span><br><span class="line">  ntools.ledinput = digitalRead(<span class="number">35</span>);</span><br><span class="line">   ntools.wuinput = digitalRead(<span class="number">34</span>);</span><br><span class="line">   ntools.faninput = digitalRead(<span class="number">32</span>);</span><br><span class="line">   delay(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">if</span>(ntools.ledinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput high &quot;</span>); </span><br><span class="line">          LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.ledinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput low &quot;</span>); </span><br><span class="line">          <span class="comment">//digitalWrite(25, HIGH); </span></span><br><span class="line">          LED = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ntools.faninput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput high &quot;</span>); </span><br><span class="line">          FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.faninput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          FAN = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ntools.wuinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput high &quot;</span>); </span><br><span class="line">          ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.wuinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          ATOMIZER = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">/******************************END***************************************/</span> </span><br><span class="line"><span class="comment">/*************************************温湿度定义********************************/</span></span><br><span class="line">  <span class="comment">//byte temperature = 0;</span></span><br><span class="line">  <span class="comment">//byte humidity    = 0;</span></span><br><span class="line">  <span class="comment">//int chk = DHT11.read(DHT11PIN);</span></span><br><span class="line">  <span class="comment">//Serial.print(&quot;temperature =&quot;);</span></span><br><span class="line">  <span class="comment">//Serial.println((int)DHT11.temperature);     </span></span><br><span class="line">  <span class="comment">//Serial.print(&quot;humidity =&quot;);</span></span><br><span class="line">  <span class="comment">//Serial.println((int)DHT11.humidity);   </span></span><br><span class="line">  <span class="comment">/*********************************判断是否重启**************************************/</span></span><br><span class="line">  <span class="keyword">if</span>(resetesp == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     resetesp =<span class="number">0</span>;</span><br><span class="line">     ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">     Serial.println(<span class="string">&quot;esp32 restart!!!!&quot;</span>);  </span><br><span class="line">    &#125; </span><br><span class="line">    Serial.println(<span class="string">&quot; no  no esp32 restart!!!!&quot;</span>);  </span><br><span class="line">  <span class="comment">/**********************************是否重置网络************************************/</span></span><br><span class="line">    <span class="comment">//用于删除已存WiFi</span></span><br><span class="line">  <span class="keyword">if</span> (digitalRead(RESET_PIN) == HIGH) &#123;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    esp_wifi_restore();</span><br><span class="line">    delay(<span class="number">10</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot; esp32  esp_wifi_restore()!!!!&quot;</span>);  </span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line">   <span class="comment">/************************************END****************************************/</span></span><br><span class="line">  <span class="comment">/************************************END****************************************/</span></span><br><span class="line">  server.handleClient();</span><br><span class="line">  WiFiClient client = server1.available();   <span class="comment">// listen for incoming clients</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  <span class="keyword">if</span> (client) &#123;    </span><br><span class="line">    currentTime = millis();</span><br><span class="line">    previousTime = currentTime;</span><br><span class="line">    Serial.println(<span class="string">&quot;New Client.&quot;</span>);          <span class="comment">// print a message out in the serial port</span></span><br><span class="line">    String currentLine = <span class="string">&quot;&quot;</span>;                <span class="comment">// make a String to hold incoming data from the client</span></span><br><span class="line">   <span class="keyword">while</span> (client.connected() &amp;&amp; currentTime - previousTime &lt;= timeoutTime) &#123;  <span class="comment">// loop while the client&#x27;s connected</span></span><br><span class="line">      currentTime = millis();</span><br><span class="line">      <span class="keyword">if</span> (client.available()) &#123;             <span class="comment">// if there&#x27;s bytes to read from the client,</span></span><br><span class="line">     <span class="keyword">char</span> c = client.read();             <span class="comment">// read a byte, then</span></span><br><span class="line">        Serial.write(c);                    <span class="comment">// print it out the serial monitor</span></span><br><span class="line">        header += c;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>) &#123;                    <span class="comment">// if the byte is a newline character</span></span><br><span class="line">          <span class="comment">// if the current line is blank, you got two newline characters in a row.</span></span><br><span class="line">          <span class="comment">// that&#x27;s the end of the client HTTP request, so send a response:</span></span><br><span class="line">          <span class="keyword">if</span> (currentLine.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)</span></span><br><span class="line">            <span class="comment">// and a content-type so the client knows what&#x27;s coming, then a blank line:</span></span><br><span class="line">            client.println(<span class="string">&quot;HTTP/1.1 200 OK&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Content-type:text/html&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;Connection: close&quot;</span>);</span><br><span class="line">            client.println();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// turns the GPIOs on and off</span></span><br><span class="line">            <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /LED/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 on&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">22</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /LED/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              Serial.println(<span class="string">&quot;GPIO 26 off&quot;</span>);</span><br><span class="line">              LED = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">25</span>, LOW);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/on&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">5</span>, HIGH);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (header.indexOf(<span class="string">&quot;GET /at/off&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              ATOMIZER = <span class="string">&quot;off&quot;</span>;</span><br><span class="line">              digitalWrite(<span class="number">33</span>, LOW);</span><br><span class="line">            &#125;</span><br><span class="line"> <span class="comment">/*********************************fan***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/on&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">23</span>, HIGH);</span><br><span class="line">              </span><br><span class="line">              &#125;<span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /fan/off&quot;</span>)&gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                FAN= <span class="string">&quot;off&quot;</span>;</span><br><span class="line">                digitalWrite(<span class="number">26</span>, LOW);</span><br><span class="line">              </span><br><span class="line">              &#125;</span><br><span class="line"><span class="comment">/******************************刷新按钮***********************************/</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(header.indexOf(<span class="string">&quot;GET /new&quot;</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">               Serial.println(<span class="string">&quot;new&quot;</span>);</span><br><span class="line">              </span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************END**************************************/</span></span><br><span class="line">            <span class="comment">// Display the HTML web page</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;head&gt;&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1\&quot;&gt;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;&lt;link rel=\&quot;icon\&quot; href=\&quot;data:,\&quot;&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// CSS to style the on/off buttons </span></span><br><span class="line">            <span class="comment">// Feel free to change the background-color and font-size attributes to fit your preferences</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;style&gt;html &#123; font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button &#123; background-color: #4CAF50; border: none; color: white; padding: 16px 40px;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;text-decoration: none; font-size: 30px; margin: 2px; cursor: pointer;&#125;&quot;</span>);</span><br><span class="line">            client.println(<span class="string">&quot;.button2 &#123;background-color: #555555;&#125;&lt;/style&gt;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Web Page Heading</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;body&gt;&lt;h1&gt;桌面精灵&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 26  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;LED - State &quot;</span> + LED + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output26State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (LED==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/LED/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; </span><br><span class="line">               </span><br><span class="line">            <span class="comment">// Display current state, and ON/OFF buttons for GPIO 27  </span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;atomizer - State &quot;</span> + ATOMIZER + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">// If the output27State is off, it displays the ON button       </span></span><br><span class="line">            <span class="keyword">if</span> (ATOMIZER==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/at/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*****************************Fan*************************************/</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;p&gt;fan - State &quot;</span> + FAN + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (FAN==<span class="string">&quot;off&quot;</span>) &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/on\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;ON&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/fan/off\&quot;&gt;&lt;button class=\&quot;button button2\&quot;&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">/*******************************温湿度显示**********************************/</span></span><br><span class="line">            <span class="keyword">if</span>(FAN==<span class="string">&quot;off&quot;</span> || DHT11_STATUS == <span class="number">0</span>)</span><br><span class="line">            &#123;    </span><br><span class="line">                client.println(<span class="string">&quot;&lt;a &gt;&lt;button class=\&quot;button top1\&quot;&gt;&amp;#x6E29;&amp;#x6E7F;&amp;#x5EA6;&amp;#x663E;&amp;#x793A;&lt;/button&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/a&gt;&lt;center style=\&quot;position: relative;\&quot;&gt;&lt;/br&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;temp\&quot;&gt;温度&lt;span style=\&quot;color: red;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.temperature);</span><br><span class="line">                client.println(<span class="string">&quot;°C&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;a&gt;&lt;button type=\&quot;button\&quot; class=\&quot;button\&quot; value=\&quot;humi\&quot;&gt;湿度&lt;span style=\&quot;color: green;font-size: 25px;\&quot;&gt;&quot;</span>);</span><br><span class="line">                client.println((<span class="keyword">int</span>)DHT11.humidity);</span><br><span class="line">                client.println(<span class="string">&quot;%&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&quot;</span>);</span><br><span class="line">                client.println(<span class="string">&quot;&lt;/span&gt;&lt;/button&gt;&lt;/a&gt;&lt;/br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*******************************NEW*************************************/</span></span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&quot;</span> + NEW + <span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">              client.println(<span class="string">&quot;&lt;p&gt;&lt;a href=\&quot;/new\&quot;&gt;&lt;button class=\&quot;button\&quot;&gt;NEW&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">            <span class="comment">/*******************************END*************************************/</span></span><br><span class="line">            client.println(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// The HTTP response ends with another blank line</span></span><br><span class="line">            client.println();</span><br><span class="line">            <span class="comment">// Break out of the while loop</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// if you got a newline, then clear currentLine</span></span><br><span class="line">            currentLine = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c != <span class="string">&#x27;\r&#x27;</span>) &#123;  <span class="comment">// if you got anything else but a carriage return character,</span></span><br><span class="line">          currentLine += c;      <span class="comment">// add it to the end of the currentLine</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Clear the header variable</span></span><br><span class="line">    header = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// Close the connection</span></span><br><span class="line">    client.stop();</span><br><span class="line">    Serial.println(<span class="string">&quot;Client disconnected.&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Task2code</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//setup部分</span></span><br><span class="line">    Wire.setPins(<span class="comment">/*SDA*/</span><span class="number">18</span>,<span class="comment">/*SCL*/</span><span class="number">19</span>);</span><br><span class="line">  <span class="comment">//初始化OLED并设置其IIC地址为 0x3C</span></span><br><span class="line">  display.begin(SSD1306_SWITCHCAPVCC, <span class="number">0x3C</span>);</span><br><span class="line">  <span class="comment">//清除屏幕</span></span><br><span class="line">  display.clearDisplay();</span><br><span class="line">  <span class="comment">//设置字体颜色,白色可见</span></span><br><span class="line">  display.setTextColor(WHITE);</span><br><span class="line">  <span class="comment">//设置字体大小</span></span><br><span class="line">  display.setTextSize(<span class="number">1.5</span>);</span><br><span class="line">  <span class="comment">//设置光标位置</span></span><br><span class="line">  display.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());</span><br><span class="line">  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class="line">  <span class="keyword">for</span> (;;)<span class="comment">//相当于loop</span></span><br><span class="line">  &#123; </span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:、</span></span><br><span class="line"></span><br><span class="line">      delay(<span class="number">100</span>);</span><br><span class="line">      <span class="comment">//清除屏幕</span></span><br><span class="line">      display.clearDisplay();</span><br><span class="line">      <span class="comment">//设置光标位置</span></span><br><span class="line">      <span class="comment">//检测到fan开启状态时，OLED显示动图状态消失</span></span><br><span class="line">      <span class="keyword">if</span>(FAN==<span class="string">&quot;off&quot;</span>)</span><br><span class="line">       &#123; </span><br><span class="line">         bmp_display();</span><br><span class="line">         display.clearDisplay();</span><br><span class="line">         delay(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">         printLocalTime();</span><br><span class="line">         display.display();</span><br><span class="line">         delay(<span class="number">3000</span>);</span><br><span class="line">         Serial.println(<span class="string">&quot;ononon&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">          display.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">          display.print(<span class="string">&quot;The fan is turned on and cannot be used.&quot;</span>);</span><br><span class="line">          display.display();</span><br><span class="line">          delay(<span class="number">3000</span>);</span><br><span class="line">        Serial.println(<span class="string">&quot;offoff&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printLocalTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> <span class="title">timeinfo</span>;</span></span><br><span class="line">  <span class="keyword">if</span> (!getLocalTime(&amp;timeinfo))</span><br><span class="line">  &#123;</span><br><span class="line">    display.println(<span class="string">&quot;Failed to obtain time&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/***********************获取温湿度****************************/</span></span><br><span class="line">  <span class="keyword">int</span> chk = DHT11.read(DHT11PIN);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Read sensor: &quot;</span>);</span><br><span class="line">  <span class="keyword">switch</span> (chk)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> DHTLIB_OK: </span><br><span class="line">                Serial.println(<span class="string">&quot;OK&quot;</span>); </span><br><span class="line">                DHT11_STATUS = <span class="number">0</span>;  </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DHTLIB_ERROR_CHECKSUM: </span><br><span class="line">                Serial.println(<span class="string">&quot;Checksum error&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DHTLIB_ERROR_TIMEOUT: </span><br><span class="line">                Serial.println(<span class="string">&quot;Time out error&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: </span><br><span class="line">                Serial.println(<span class="string">&quot;Unknown error&quot;</span>); </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>((<span class="keyword">int</span>)DHT11.humidity &gt; <span class="number">100</span> || (<span class="keyword">int</span>)DHT11.temperature &gt; <span class="number">100</span> )</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> q = <span class="number">0</span> ;q &lt; <span class="number">10</span>; q++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">int</span> chk = DHT11.read(DHT11PIN);</span><br><span class="line">          Serial.print(<span class="string">&quot;Humidity1 (%): &quot;</span>);</span><br><span class="line">          Serial.println((<span class="keyword">float</span>)DHT11.humidity, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">          Serial.print(<span class="string">&quot;Temperature1 °C): &quot;</span>);</span><br><span class="line">          Serial.println((<span class="keyword">float</span>)DHT11.temperature, <span class="number">2</span>);</span><br><span class="line">          <span class="keyword">if</span>((<span class="keyword">int</span>)DHT11.humidity &lt; <span class="number">100</span> &amp;&amp; (<span class="keyword">int</span>)DHT11.temperature &lt; <span class="number">100</span> )</span><br><span class="line">          &#123;</span><br><span class="line">              DHT11_STATUS = <span class="number">0</span>;  </span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          DHT11_STATUS = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      DHT11_COUNT++;</span><br><span class="line">      <span class="keyword">if</span>(DHT11_COUNT == <span class="number">5</span> )</span><br><span class="line">      &#123;</span><br><span class="line">            digitalWrite(<span class="number">17</span>, LOW); </span><br><span class="line">            delay(<span class="number">4000</span>);</span><br><span class="line">            digitalWrite(<span class="number">17</span>, HIGH); </span><br><span class="line">            DHT11_COUNT =<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  Serial.print(<span class="string">&quot;Humidity (%): &quot;</span>);</span><br><span class="line">  Serial.println((<span class="keyword">float</span>)DHT11.humidity, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Temperature °C): &quot;</span>);</span><br><span class="line">  Serial.println((<span class="keyword">float</span>)DHT11.temperature, <span class="number">2</span>);</span><br><span class="line">  <span class="comment">/***********************获取温湿度END****************************/</span></span><br><span class="line">  </span><br><span class="line">  display.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  display.println(&amp;timeinfo, <span class="string">&quot;%F&quot;</span>); <span class="comment">// 格式化输出</span></span><br><span class="line">  <span class="comment">//display.setCursor(80, 0);</span></span><br><span class="line"> <span class="comment">// display.println(&amp;timeinfo, &quot;%T&quot;); // 格式化输出</span></span><br><span class="line">  display.setCursor(<span class="number">42</span>, <span class="number">8</span>);</span><br><span class="line">  display.println(&amp;timeinfo, <span class="string">&quot;%A&quot;</span>); <span class="comment">// 格式化输出</span></span><br><span class="line">  display.setCursor(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">  <span class="keyword">if</span>( DHT11_STATUS == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      display.print(<span class="string">&quot;Humidity:&quot;</span>);</span><br><span class="line">      display.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">      display.setCursor(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line">      display.print(<span class="string">&quot;Temperature:&quot;</span>);</span><br><span class="line">      display.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">  &#125;<span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">      display.print(<span class="string">&quot;Humidity:&quot;</span>);</span><br><span class="line">      display.println((<span class="keyword">float</span>)DHT11.humidity);</span><br><span class="line">      display.setCursor(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line">      display.print(<span class="string">&quot;Temperature:&quot;</span>);</span><br><span class="line">      display.println((<span class="keyword">float</span>)DHT11.temperature);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">      display.setCursor(<span class="number">80</span>, <span class="number">0</span>);</span><br><span class="line">      display.println(&amp;timeinfo, <span class="string">&quot;%T&quot;</span>); <span class="comment">// 格式化输出</span></span><br><span class="line">      display.display();</span><br><span class="line">      display.setCursor(<span class="number">0</span>, <span class="number">32</span>);</span><br><span class="line">      display.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">      display.println(WiFi.localIP());</span><br><span class="line">      display.drawBitmap(<span class="number">0</span>,<span class="number">40</span>,Heart_16x16,<span class="number">16</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">      display.setCursor(<span class="number">30</span>, <span class="number">44</span>);</span><br><span class="line">      display.print(<span class="string">&quot;JGX Desktop&quot;</span>);</span><br><span class="line">      display.drawBitmap(<span class="number">112</span>,<span class="number">40</span>,Heart_16x16,<span class="number">16</span>,<span class="number">16</span>,<span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////新的一页显示图片</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bmp_display</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 显示前清屏</span></span><br><span class="line">    display.stopscroll();</span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    <span class="comment">// 将图片显示在中心位置</span></span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_5, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_6, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_7, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_8,<span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_9, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_10, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">  </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_11,<span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_12, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_13,<span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_14, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_15, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_16, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    display.clearDisplay();</span><br><span class="line">    display.drawBitmap(<span class="number">0</span>,<span class="number">0</span>,BMP_17, <span class="number">128</span>, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    display.display();</span><br><span class="line">    delay(<span class="number">100</span>);   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/****************************WiFi***************************************/</span></span><br><span class="line"><span class="comment">//用于配置WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wifi_Config</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;scan start&quot;</span>);</span><br><span class="line">  <span class="comment">// 扫描附近WiFi</span></span><br><span class="line">  <span class="keyword">int</span> n = WiFi.scanNetworks();</span><br><span class="line">  Serial.println(<span class="string">&quot;scan done&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;no networks found&quot;</span>);</span><br><span class="line">    scanNetworksID = <span class="string">&quot;no networks found&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.print(n);</span><br><span class="line">    Serial.println(<span class="string">&quot; networks found&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="comment">// Print SSID and RSSI for each network found</span></span><br><span class="line">      Serial.print(i + <span class="number">1</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">      Serial.print(WiFi.SSID(i));</span><br><span class="line">      Serial.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.RSSI(i));</span><br><span class="line">      Serial.print(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">      Serial.println((WiFi.encryptionType(i) == WIFI_AUTH_OPEN) ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;*&quot;</span>);</span><br><span class="line">      scanNetworksID += <span class="string">&quot;&lt;P&gt;&quot;</span> + WiFi.SSID(i) + <span class="string">&quot;&lt;/P&gt;&quot;</span>;</span><br><span class="line">      delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.mode(WIFI_AP);<span class="comment">//配置为AP模式</span></span><br><span class="line">  boolean result = WiFi.softAP(AP_SSID, <span class="string">&quot;&quot;</span>); <span class="comment">//开启WIFI热点</span></span><br><span class="line">  <span class="keyword">if</span> (result)</span><br><span class="line">  &#123;</span><br><span class="line">    IPAddress myIP = WiFi.softAPIP();</span><br><span class="line">    <span class="comment">//打印相关信息</span></span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;Soft-AP IP address = &quot;</span>);</span><br><span class="line">    Serial.println(myIP);</span><br><span class="line">    Serial.println(String(<span class="string">&quot;MAC address = &quot;</span>)  + WiFi.softAPmacAddress().c_str());</span><br><span class="line">    Serial.println(<span class="string">&quot;waiting ...&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;  <span class="comment">//开启热点失败</span></span><br><span class="line">    Serial.println(<span class="string">&quot;WiFiAP Failed&quot;</span>);</span><br><span class="line">    delay(<span class="number">3000</span>);</span><br><span class="line">    ESP.restart();  <span class="comment">//复位esp32</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (MDNS.begin(<span class="string">&quot;esp32&quot;</span>)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;MDNS responder started&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//首页</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, ROOT_HTML + scanNetworksID + <span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//连接</span></span><br><span class="line">  server.on(<span class="string">&quot;/connect&quot;</span>, []() &#123;</span><br><span class="line"></span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;font size=\&quot;10\&quot;&gt;successd,wifi connecting...&lt;br /&gt;Please close this page manually.&lt;/font&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    WiFi.softAPdisconnect(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//获取输入的WIFI账户和密码</span></span><br><span class="line">    wifi_ssid = server.arg(<span class="string">&quot;ssid&quot;</span>);</span><br><span class="line">    wifi_pass = server.arg(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">    server.close();</span><br><span class="line">    WiFi.softAPdisconnect();</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi Connect SSID:&quot;</span> + wifi_ssid + <span class="string">&quot;  PASS:&quot;</span> + wifi_pass);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置为STA模式并连接WIFI</span></span><br><span class="line">    WiFi.mode(WIFI_STA);</span><br><span class="line">    WiFi.begin(wifi_ssid.c_str(), wifi_pass.c_str());</span><br><span class="line">    <span class="keyword">uint8_t</span> Connect_time = <span class="number">0</span>; <span class="comment">//用于连接计时，如果长时间连接不成功，复位设备</span></span><br><span class="line">    <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;  <span class="comment">//等待WIFI连接成功</span></span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">      Connect_time ++;</span><br><span class="line">      resetesp = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (Connect_time &gt; <span class="number">80</span>) &#123;  <span class="comment">//长时间连接不上，复位设备</span></span><br><span class="line">        Serial.println(<span class="string">&quot;Connection timeout, check input is correct or try again later!&quot;</span>);</span><br><span class="line">        delay(<span class="number">3000</span>);</span><br><span class="line">        ESP.restart();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.println(<span class="string">&quot;WIFI Config Success&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">    Serial.print(<span class="string">&quot;  LocalIP:&quot;</span>);</span><br><span class="line">    Serial.print(WiFi.localIP());</span><br><span class="line">    Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  server.begin();</span><br><span class="line">  <span class="comment">//server1.begin();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于上电自动连接WiFi</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AutoConfig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  WiFi.begin();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> wstatus = WiFi.status();</span><br><span class="line">    <span class="keyword">if</span> (wstatus == WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;WIFI SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;, PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      Serial.print(<span class="string">&quot;LocalIP:&quot;</span>);</span><br><span class="line">      Serial.print(WiFi.localIP());</span><br><span class="line">      Serial.print(<span class="string">&quot; ,GateIP:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.gatewayIP());</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;WIFI AutoConfig Waiting......&quot;</span>);</span><br><span class="line">      Serial.println(wstatus);</span><br><span class="line">      delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;WIFI AutoConfig Faild!&quot;</span> );</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        其中即为ESP完整的代码部分，中间还有许多未解释说明，这些部分即为ESP32与STM32交互部分。</p><h3 id="STM32与ESP32交互"><a href="#STM32与ESP32交互" class="headerlink" title="STM32与ESP32交互"></a>STM32与ESP32交互</h3><p>​        这个制作过程中，出现了一个大问题，由于之间写的温湿度显示是5S自动刷新词语，没改之前，出现开关数据，界面会一直发送，导致STM32与ESP32之间的串口通信会造成中断溢出，卡死在接收端上，后面便采取了输入输出高低电平做控制，在STM32与ESP32上进行设置输入引脚和输出引脚，通过控制功能，使用引脚饿高低变化来达到传递信息的作用，这一步麻烦了许多，在完全调整完毕后，才找到界面一直刷新的原因，由于硬件已经焊上，为了保持硬件，就依旧这么写下去。</p><p>​        交互过程中，满足必须满足使用，在WIFI开启时，语音可以关闭，反之如此。这部分代码如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//STM32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WU PAout(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAN PAout(5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED PAout(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESP32RESET PAout(7)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDINPUTSTATUS_H  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_12)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDINPUTSTATUS_L  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_13)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WUINPUTSTATUS_H  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_14) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WUINPUTSTATUS_L   GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_15)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FANINPUTSTATUS_H  GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_11)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FANINPUTSTATUS_L  GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12)</span></span><br><span class="line"><span class="comment">/******************************ESP32重新设置密码********************************/</span></span><br><span class="line"><span class="keyword">if</span> (esp32status == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">40000</span>);</span><br><span class="line">esp32count++;</span><br><span class="line"><span class="keyword">if</span>(esp32count &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">ESP32RESET = <span class="number">0</span>;</span><br><span class="line">esp32status = <span class="number">0</span>;</span><br><span class="line">esp32count=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************************引脚输入********************************/</span></span><br><span class="line"><span class="keyword">if</span>(FANINPUTSTATUS_H == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">FAN=<span class="number">1</span>;</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">2</span>,<span class="string">&quot;Open the fan&quot;</span>,<span class="number">32</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(FANINPUTSTATUS_L == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">FAN=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(WUINPUTSTATUS_H == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">85</span>,<span class="number">6</span>,jia);</span><br><span class="line">WU=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(WUINPUTSTATUS_L == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Clear();</span><br><span class="line">WU=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(LEDINPUTSTATUS_H == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">            OLED_Clear();</span><br><span class="line">            delay_ms(<span class="number">100</span>);</span><br><span class="line">            OLED_DrawBMP(<span class="number">45</span>,<span class="number">1</span>,<span class="number">93</span>,<span class="number">7</span>,deng);</span><br><span class="line">            LED=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(LEDINPUTSTATUS_L == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">            OLED_Clear();</span><br><span class="line">            LED=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ESP32</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tool</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> ledinput;</span><br><span class="line">  <span class="keyword">int</span> faninput;</span><br><span class="line">  <span class="keyword">int</span> wuinput;</span><br><span class="line">&#125;tools;</span><br><span class="line">tools ntools;</span><br><span class="line"><span class="comment">/********************************检测开关状态****************************/</span></span><br><span class="line">    ntools.ledinput = digitalRead(<span class="number">35</span>);</span><br><span class="line">    ntools.wuinput = digitalRead(<span class="number">34</span>);</span><br><span class="line">    ntools.faninput = digitalRead(<span class="number">32</span>);</span><br><span class="line">    delay(<span class="number">2000</span>);</span><br><span class="line">        <span class="keyword">if</span>(ntools.ledinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput high &quot;</span>); </span><br><span class="line">          LED = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.ledinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.ledinput low &quot;</span>); </span><br><span class="line">          LED = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ntools.faninput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput high &quot;</span>); </span><br><span class="line">          FAN = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.faninput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.faninput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          FAN = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ntools.wuinput == HIGH)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput high &quot;</span>); </span><br><span class="line">          ATOMIZER = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(ntools.wuinput == LOW)</span><br><span class="line">        &#123;</span><br><span class="line">          Serial.println(<span class="string">&quot;ntools.wuinput low &quot;</span>); </span><br><span class="line"> </span><br><span class="line">          ATOMIZER = <span class="string">&quot;off&quot;</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">/******************************END***************************************/</span> </span><br></pre></td></tr></table></figure><p>​        到此即为全部代码部分，剩下的后续继续完善。</p><h1 id="结尾："><a href="#结尾：" class="headerlink" title="结尾："></a>结尾：</h1><p>​        此作品，难度系数中等偏上，需要使用3个编译软件，需要熟悉HTML、C两种语言，以及懂得硬件的处理，软件上实现比较麻烦，需要使用硬件来满足。</p><p>​        制作过程中，处理较为久的部分为页面的制作和交互部分，从连接WiFi到实现界面这个两个地方花费时间较久，问题在于，定义的参数类型不熟悉，使用了同一个参数，如：WebServer server(80)、WiFiServer server(80)，最早没有处理明白，具体的即为服务不同，定义错误。</p><p>​        其次即为交互部分，界面一直刷新导致了这个问题，原因在于在写界面是使用了这个http-equiv=&quot;Refresh&quot; content=&quot;5&quot;（这里不是标准的HTML，ESP32上面的写法），后面一直没有发现导致了，串口处理一直发生问题，也更加熟悉了串口的原理：<em>USART_FLAG_FE</em> <em>帧错误标志位</em> 、USART_FLAG_PE 奇偶错误标志位、USART_FLAG_ORE查寻串口标志,为0还是1 reset 为0 set 为1 还有清除标志位的作用，由于串口一直接收，导致溢出，标志位没有清楚掉，一直卡在中断中，使用上这个清楚掉了标志位（这一部分，理解还不够深刻，有问题欢迎沟通交流），后面于是采用引脚的办法来传递信息。由于，引发问题的原因发现的较晚，方案改动，没有按照串口方法进行收发，后续有想尝试的欢迎留言一起解决！</p><p>​        这次作品前期后后花费了2个月的时间，从框架，到各个部分的调通以及硬件的确定，收获到了许多东西，自己的经验又多了一些！后面还有继续制作一些小玩意，来分享给大家！</p><p>​        谢谢观看！</p><p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;作品总介绍：&quot;&gt;&lt;a href=&quot;#作品总介绍：&quot; class=&quot;headerlink&quot; title=&quot;作品总介绍：&quot;&gt;&lt;/a&gt;作品总介绍：&lt;/h1&gt;&lt;p&gt;​        基于STM32单片机以STM32F103C8T6为核心控制配备ESP32运行FreeRto</summary>
      
    
    
    
    <category term="我的作品" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="作品" scheme="https://jgxnb.cn/tags/%E4%BD%9C%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>周记</title>
    <link href="https://jgxnb.cn/2023/01/08/%E5%91%A8%E8%AE%B0/"/>
    <id>https://jgxnb.cn/2023/01/08/%E5%91%A8%E8%AE%B0/</id>
    <published>2023-01-08T11:31:38.000Z</published>
    <updated>2023-01-20T07:23:06.186Z</updated>
    
    <content type="html"><![CDATA[<p>​    写一写周记吧！记录的时间是2023.1.3-2023.1.8</p><p>在工作上：    </p><p>​    这一周，基本是在看代码中度过的，从工作上，第一次体会了帮助客户修改代码并且告知客户需要修改哪里、完善哪里，同一时间，第一次深刻的体会到，提问问题的魅力。提问问题要清晰易懂，需要详细的情况说明，这样导致了自己在提问问题方面，会经过了解、推测、备注，因此，这周学总结一下提问问题的方向要素：</p><p>​    现象+分析过程+推测+请求帮助的方向。例如，蓝牙传输过程中遇到传输失败，首先先告知现象，蓝牙传输过程中会遇到传输失败的问题，经过分析，目前还无法定位出事发送端还是接收端出现问题，但是有4种情况会导致蓝牙传输失败，已经排除2中，剩下两种传输过程中文件被更改、接收端设备异常，请求帮忙对照LOG分析一下原因。</p><p>​    这就是提问的魅力，通俗易懂。</p><p>在休闲上：</p><p>​    在这周的看书上，要改正自己的工作态度，不要为了打工而打工，需要把工作当做投资，换个想法，把目前工作当做自在创业，需要明白目的——为自己积累经验，投资自己，把时间花在琢磨难题上，要成为价值所在。定一个目标十分重要的，要不然想无头苍蝇，乱飞。</p><p>​    目前，自己所想的是继续完善LINUX 驱动层的补充，继续打好C语音底层基础。工作上，目前接触都是应用开发，平时接触的都是修改BUG完善需求。所以，自己的剩余的时间继续完善底层的工作，上层、下层的贯通。</p><p>​    这周同样也进行C语音的联系，保持着每天两题的代码量，一个小时的巩固，继续这样一周，等到放假回家，就转入数据结构方面，平均一天一题的工作量。</p><p>​    LINUX驱动层，这周学习了Linux中断实验、Linux阻塞和非阻塞IO实验，中断对于整个系统来说异常重要，用来处理各种需要及时响应的事情，在中断处理的速度要快，快进快出的行为；阻塞与非阻塞，用来减少CPU的使用，提高效率。这两张总的来说，比较难理解，需要经常反复查看、巩固。</p><p>在生活上：</p><p>​    这周，没有发生什么有趣的事情，自己还在咳嗽中，身体还没恢复好，总的来书这一周，过得也挺平常，应该由于快放假的原因，自己异常的幸福激动，还有一周2天就可以回家了，心中充满了期待。</p><p>​    这周喜欢看上了，去有风的地方，在城市的喧嚣中走久了，去看看远方吧！享受一下预约的生活气息，等上几年，自己也要经历一场这样的旅行！</p><p>​    这周就这样了，明天起来又是精神饱满的一天，遇到难题不要慌、找资源、合理的利用手上的资源去处理！下一周见！</p><p>​                                    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    写一写周记吧！记录的时间是2023.1.3-2023.1.8&lt;/p&gt;
&lt;p&gt;在工作上：    &lt;/p&gt;
&lt;p&gt;​    这一周，基本是在看代码中度过的，从工作上，第一次体会了帮助客户修改代码并且告知客户需要修改哪里、完善哪里，同一时间，第一次深刻的体会到，提问问题</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>实习7个月的故事</title>
    <link href="https://jgxnb.cn/2023/01/02/%E5%AE%9E%E4%B9%A07%E4%B8%AA%E6%9C%88%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>https://jgxnb.cn/2023/01/02/%E5%AE%9E%E4%B9%A07%E4%B8%AA%E6%9C%88%E7%9A%84%E6%95%85%E4%BA%8B/</id>
    <published>2023-01-02T11:27:58.000Z</published>
    <updated>2023-01-21T15:12:14.095Z</updated>
    
    <content type="html"><![CDATA[<p>​        2022年7月1号，我踏上了求职的道路，到我写下这篇文章以及过去了将近7个月，就按照7个月来写吧！</p><p>​        入职的第一天，忙忙碌碌一来就被安排了项目，经历了了解项目，安装环境，运行代码，分析BUG，开始修改BUG等一系列的步骤，一开始还是很不适应，节奏快速，代码量巨大，面对的压力也是十分巨大的。渐渐，解决掉一个又一个的BUG之后，便开始适应了这种强度，回过头来想跟之前在学校中度过的也是一样，也有为BUG焦头烂额过，沮丧过，一直想都想不明白。不懂就去问，同事们也十分的热情，有问必答，渐渐的也融入到了一起。当然，也有自己的生活圈呀！人生不单单是工作，还有自己的休闲方式！</p><p>​        一来工作我便养了一只小仓鼠——红烧肉，由于，8月分得要回一趟学校，就把红烧肉拿去寄养，寄养在一个朋友家里，就是这个朋友，开启了我走向社会的社交，但是现在没有交流了，因为中间发生了一些不愉快，也体会到了，身边的人真的会离自己而去，通过这次的社交，在酒桌上认识了一个河南女孩，性格大大咧咧，这不禁让我想起了自己的第一个女朋友，之后，通过酒局也开始聊起天来，最后以我交了女朋友而结束了聊天。哎！人啊，在这个年级总是喜欢被情感所折磨。女朋友！哦不前女友，在一起俩个月也分手了，刚刚好不多一天，也不少一天，由于，种种原因，我把重心放在了事业上，忽略了她的感受，最终，还是以分手来结束！那天的前一天，印象特别深，跟同事夜爬了清源山，拍下了美丽的夜景，我知道自己要分手了，那天在山顶看向远方，看向了她的方向，凝视了好久……，一切就如那天的云层：一分为二！</p><p>​        <img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230102195004806~1.png" alt="image-20230102195004806~1"></p><p>​        在一起的这些天，体会了情侣之前的全部事情，自己也懂得了许多，那就是责任！既然选择了那就认认真真，真真切切的对待，我相信之后的将越来越真诚，越来越值得珍惜！自己，也不会再把感情轻而易举的交付出去，也不会因为这个年级的冲动、朦胧带来的刺激，让自己难受痛苦。现在，选择的是该做的事——完成自己的目标的，达到自己的终点，其他的看缘分~</p><p>​        快点拉回来，拉回来，这篇主要是写工作的哈哈，项目开始到快结束的时候，自己被安排留下来收尾，负责最后的需求以及剩余的BUG起初，不理解，感觉是留下来擦屁股的，但是，在不理解中渐渐理解了意义——在最后的收尾中，自己必须要学会更多的东西，不单单是修改BUG，还接触到了开发新功能，让自己的整体都得到了提高，在这期间，同时也充当的技术解答，客户不懂的，需要开发进行介入沟通、讲解，恰巧误打误撞，碰到了自己喜欢的部分，当了解一个东西，最好的证明就是讲解这个东西。在这期间，自己的沟通能力、代码能力以及对整个产业的整个上下游的了解都清楚了许多，一个开发不仅仅要关注代码也要关注整个市场行情，产品的整个体系架构！毕竟，我的目标不是单纯写代码，需要往管理层上靠拢！这次的经验也是收获许多！</p><p>​        以上是我3个月考核，自己收获到的地方，获取经验、积累经验，写下来，让别人从文字中了解自己，自己肯定是要继续飞翔的，看了许多程序员博主的分享，自己现在遇到的事情也正是他们经历过的，听取他人的借鉴，少走一些弯路没错，但是我一直相信弯路必须要走，必须要踩的，自己经历过才会更珍惜，更懂得来之不易，更会做的更好！</p><p>​        3个月之后渐渐的自己的工作安排被安排了新的项目，这也经历了工作上必经的事情——根据项目，调整人员，调整得到了新的项目，完全不同的平台，同时也要维护原来的项目2个项目，考验着自己的应变能力，经过时间的推移，自己的中心也慢慢转移到了新的项目之中，也开始修改BUG，现在想想，同样做着一样的事情，这一段时间，我自认为自己得到的锻炼是沉住心，沉下躁动的心，使自己安安静静的做事。所实在，这一段时间，自己是有些浮躁的，需要学习新的东西，新的内容，就好像之前学习的东西都没有用了，但是随着时间的推移，我慢慢打破了这个想法，发现了其中很多的共同点：</p><p>​        1.发现问题的能力</p><p>​        2.解决问题的能力</p><p>​        3.交流问题的能力</p><p>​        这3点，是我这一阶段的所得，一个项目不单单只有自己一个人，还有团队，虽然负责的模块不一样，交流问题的能力，也是在这个阶段中慢慢培养起来。其中，有个同事给我的印象很深，他喜欢专研，喜欢抓的问题不放，必须弄清楚、弄明白，而我，本来就有着做事要做困难的，不要害怕困难的事情，这是提升自己的最好途径，在压力中成长，这里有张图：是跟同事交流了很晚才会宿舍的时候拍的</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/image-20230102201913689.png" alt="image-20230102201913689"></p><p>​        路啊！都是自己走出来的，我不知道自己后面会怎么样，我也不去幻想自己的路，这一路上诱惑真的很多，其实，别人怎么说都是没有用的，需要自己吃亏过，经历过，自己怕了才会明白！当然，我也经历过，自己血淋淋的教训……</p><p>​        这一段时间，恰巧也是毕业答辩的时间（原本），但是由于疫情推迟了，但是自己安排也是安排在12月28号完成，所以，11月开始，就完全变成了工作8小时，回来4小时，一天在电脑面前12小时，8小时是为了生存，4小时是为了毕业，12小时是拼尽全力！好在到现在，程序、硬件都已经完成，论文1月3号给老师批改，自己的目标也渐渐完成一个又一个。</p><p>​        这3个月，自己过得平淡，经历过分手之后，自己的重心已经完全下放，做着自己想做的事情，少了许多社交，应该都经历过了吧，发现最后还是知识是离不开自己，当然，看到这里，就好像我，不爱交际一样，闷头做事情，但是这不是我，只是因为自己经历过，明白了，重心转移，罢了，你会认为一个想在沟通交流上充满兴趣的人会是一个闷油瓶嘛？哈哈~</p><p>​        时间好快，写下这篇文章的时候，自己已经一周没上班了——阳了呗，发烧、咳嗽、头痛……，当然，明天就上班咯！回归正常的生活，干劲十足，因为，今天打开了博客，其实很早之前就完成，但是那时候在学校里，没有什么时候，忙的事情也多很杂，但是，今天打开博客，听到自己之前写的音乐播放器，声音一出来，，心头一震我发现全部的知识，你现在没有用到，但是在之后的某一天，你一定会用到它！多学不是问题，有时间就多学吧~</p><p>​        到此也结束了！不写了，日子还长，我们还会相见~</p><p>名句汇总：</p><p>​        1.自己也懂得了许多，那就是责任！既然选择了那就认认真真，真真切切的对待</p><p>​        2.需要自己吃亏过，经历过，自己怕了才会明白！</p><p>下期预告：</p><p>​        1.完善自己的博客网站，可以除了本地登入，其他人也可以登入查看</p><p>​        2.微信公众搭建</p><p>​        3.毕业作品上传、讲解、知识点汇总</p><p>​        4.留着到时候想写啥就写啥</p><p><img src="https://gitee.com/showrom/hexo_picture/raw/master/hexo_picture/%E5%AE%9E%E4%B9%A0%E4%B8%83%E4%B8%AA%E6%9C%88picture/u=1705694933,4002952892&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto.webp" alt="u=1705694933,4002952892&amp;fm=253&amp;app=138&amp;size=w931&amp;n=0&amp;f=JPEG&amp;fmt=auto"></p><p>​                                                                                                                                                                    时间真快啊！自己的路还很长，保持初心吧，诱惑真的很多，真的很多！</p><p>​    </p><p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        2022年7月1号，我踏上了求职的道路，到我写下这篇文章以及过去了将近7个月，就按照7个月来写吧！&lt;/p&gt;
&lt;p&gt;​        入职的第一天，忙忙碌碌一来就被安排了项目，经历了了解项目，安装环境，运行代码，分析BUG，开始修改BUG等一系列的步骤，一开</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="https://jgxnb.cn/2022/03/06/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://jgxnb.cn/2022/03/06/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-03-06T02:19:23.000Z</published>
    <updated>2023-01-20T07:23:25.095Z</updated>
    
    <content type="html"><![CDATA[<p>​        回想2年前，自己朦朦胧胧的来到实验室，一呆就度过了自己的大学大半的时间，学会了许多，经历了许多，一开始毫无目标的追寻，跟着学习计划一步一步的走，一步一步的开始自己的技术路，熬过多少的通宵，有的时候一天睡俩个小时，早上起来，继续忙着部门的事情，一面是学习技术的路线，一路是学习管理、学习交际、学习交涉。我的最终目标是管理层，而不是打工人！</p><p>​        渐渐的自己经历了越来越多，也明白了，目标的重要性，眼界开阔的重要性。回顾，这一路的点点滴滴。我分为以下这几个阶段：</p><p>​        第一阶段:刚刚步入大学、看见迎新发言的学长，在台下默默看发言的我，心中暗想，今后一点要认识这个学长，没想到在自己的部门的部长的推荐下，就碰巧认识了，这位学长，并一直在他身边做事情。也认识我现在，放在第一位的部门老师。渐渐的大学的生活开始了起步，刚刚入大学，青春期也是一样的，面对自己喜欢的女孩子我也试着追求过，最终，转校区的转校区，转专业的转专业，被拒绝的拒绝。哈哈，说到这里，我进实验室的，动力因此而来了!对没错，就是因为失恋，没有动力，加上当时身边的朋友也想，就来到了实验室，中途也退出了一个，他也有自己的目标，目标不同，那就巅峰相见。我还在班上调侃了自己的这一段经历，也算不后悔吧!</p><p>​    第二阶段现在开始了：调侃完，就开始了自己的写代码之路，一开始就是简单的代码，c语言呀（好像就没了，学到现在，还是在写C的路上，毕竟作为嵌入式工程师，写C是必定的），经过几个晚上的学习，练习，就开始考实验室了，第一次面对，题目还是还有慌的，面对题目，还是没有信心，中间过程我十分感谢一个人，我的一位初中、高中同学，我看到他的能力，写代码的能力，我是由衷的敬佩。（虽然现在我自认为还是没到他程度，还需要奋斗（逆波兰公式现在也是会了——小甲鱼牛逼！！）），接着，就是考入了实验室，开始了自己的51之路，这一过程，中，好像没有什么大问题，就平平常常，一点一点的度过了，在寒假的结束了自己的51任务：</p><p>​    51：IO、串口、iic、spi、pwm、蓝牙小车、超声波测距、OLED、温湿度检测。</p><p>接着步入了32的学习之路，在家中，看着一堆一堆的代码，一开始学习库函数版本，我敲啥玩意，字怎么这多，后面选择了寄存器的版本（也幸好之前学习的是寄存器，对我后面linux驱动开发也起到了十分大的作用），32的路上接触了汇编指令的操作，学习了boot启动的一些细则，但是更深入的部分还没了解，还单单停留在，应用上的使用</p><p>​    32：IO、点灯、舵机、pwm、接触了平衡车（设计、代码、驱动都有了解）</p><p>32到这里也基本结束了，还差一些操作系统上，还有freertos、还没接触过（在这一学期一定跑完）。</p><p>​    接下来就是学习电赛的芯片TI，中间有穿插了一个比赛，光赛——接触了openMV,模块，接触了图像识别的应用，这次比赛经历了一个月，学习了识别图像、神经网络识别图像、搭出来了了一个小车，代码部分辅助完成，我是在写32驱动电机，达到倒出垃圾的效果，加上32跟openMV 之间的通信。也是一次非常有趣的经历</p><p>​    之后学习了TI芯片，TI芯片花了大概有13天学完了里面的任务部分，也是学习了正常的TI任务;    </p><p>​    TI:依旧是IO的使用、串口、IIC、SPI、 云台的创建（PID的使用）、寻迹小车、超声波避障小车。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        回想2年前，自己朦朦胧胧的来到实验室，一呆就度过了自己的大学大半的时间，学会了许多，经历了许多，一开始毫无目标的追寻，跟着学习计划一步一步的走，一步一步的开始自己的技术路，熬过多少的通宵，有的时候一天睡俩个小时，早上起来，继续忙着部门的事情，一面是学习技术</summary>
      
    
    
    
    <category term="我的故事" scheme="https://jgxnb.cn/categories/%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    
    
    <category term="路" scheme="https://jgxnb.cn/tags/%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jgxnb.cn/2016/03/30/hello-world/"/>
    <id>https://jgxnb.cn/2016/03/30/hello-world/</id>
    <published>2016-03-30T13:12:21.000Z</published>
    <updated>2023-01-21T11:02:00.476Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2c39beb0877a86453e756cda3d12ac275a39a9c9a03d50031207c0313c3bd01a">8857952509ef9895f61625fe2d594ef3c9251b16e75667b105d9b8e2f98fa4e0c494f99b3d7554ae30086249b805cde1fe829b34d38aa0681ad350aafa2c2da4c8681f4421e346dbc95e2e6923f9aeeaa7cb0ef799698a147bdd2547f87a667e80c4a457c4883e6a81c948b927aacdc8269abeb88afac5bbc909b14dfc1b0b17a2c72d6e20855b7f036ad637e406b96743a43a6c316871106e837e1bd6267befaadec082c11fd845ddf6c9c26eb5eafa6c71e5f7481fcd0821adeb5e5f7538c7d82b6357cc0a428a90dd2cb346d68f73fd55de4b0ead7d7488faddce0f62dd303df3ea0fe875c5fe284dc715cfa64ab1bdc4a9b449d0fcb4a5e41699583904cbb629413ee14378578d3540101f40ce6e93be912dfedf12723b663517027c0e1f677fa7cb6f67e581c42e8874d27ba96a40f6d9aeec6a527e368987493283f493372cf11342e3d2a4c530c6c3979e12f1c2761035d7ee2a597e6a60988d2d38cb5bb373a6c5c100e6663b683470d7681ff1493d477e1a31b20c08159bacf4406461a024726c9fab32fc0b423009a3942995804910e5a93cef058bc5229daa2c350fb0b30592da132e5c00058daa83114ce3684d937e25d7f9d888d54e7a6f3c76961e17f0156c335bb6e7e9fecc7e4fbaf7bea5c23849bca8d38e9edde3160d9a9e45711b8c450e653706eb619ef2f2a69baf67b88c51971c3a9c87afa86dff05d3dba36e4903b2e2543ac0b5d0260ea2528fdd4f09bb982f0f1c0b717a1c7a0f4a645918b35acdbf7b41e85a42df50ff7eb3b1f0e5d2e619a9dd351b44d0f942d7dc89823967c327536563c7fb8964fa4370488589da03106034c57a542f0b15acb9d597642bd15a20bb3c06a8c340cd583a7a850103f01d602540c7668db6e6e4cbb19893760fa5794a440a0c74043c2091d38480e702c52a65612054b381b4ba18867f34b4337c07d5df8cc17aa415f945521f0017c7db1a88d572d1d678514cd5008a25424b17271dd652a6e37468f5efe1dc718320d603baf7c0d969972a077a6edc19cd271cb4b5e3974f15e1b4381d3f1053bc978ec5728891d6fbedce553f45347a33d904d3d9ecffb633f5e5e32ec408f21c30a7d4d5ca85b21c383bd9d51dea3310bb284eba806a9dc49c19f03a0a4cf24034b487967c50f3d799355a81249b29586a51896bade3be3cdc5f6031249290f04e7fd05df804f7953c214dc15c1e71d3016b3848e74c06dae7f5e1e80eff053c31b8c2da32dfc03d70c3b37c761e92fc5ea4888536f66dba9f642a6cd7a417a7f147003e2705b6f29d7cb8d0acc7e3be94a05111c02cfd79b096e1e2072da27cab648aa9e6e2315af1e67b1d217e1199e0673b0b4c6a37421db26588ba7ab8f7119ec0ab421238122ca513dcf78898e2100ff3416cbddc2ba4238eaae43092d93131d3b7f409de2ea78ab32df9de9caefc53d0572b3e5806c65f1ffe661c8cd64bbf1c54e5f63dc1993bce73df41b20a1bee9f3575bc4646b5eb61433611e6dd0dd728f8a6c78caca55ce957bef323fd8ba47ebb3e19496c4870693100f4ce32ee06ff889de880b50d78c95710dc06d65c0d0a7717a91b43fb741ab16743ed17e1508fb12d722c242166e8d5f96a2cd0a4fcc5c65363faba256d2ec8f484b847b9be8b9aa37c85fc63f92bdb345a3b65ae86bc210d2ea06ee794aaed7baa505bbbbe190177b55289d235a95f47c8d1ebae4275686cf7bd7ae77ec657c965e0148b418e98ee542975e6e43d57c951fab08c79559daf6bd2354e0883aba987dcfe2e408ef332d2001db3740435a7c1fe9784db593da2cbeb1adceb9ee4404f7aeedfc0e0e817cb68aa03d30b264980ba76f845f10f4f1b314bbf4aea226a04bfb24fc33405b28feea57dc2fb0df9f6140f4d0ab246964203985935a560cda463f4369cdfbdc3beb4176457e98d6e26ed183c606d4a0f491d8c003a1ea10ad7ebf522fca18face13f629b9edff8cd94e2fb568a07919586eb2e246d54de8559057c4f82feaacf3eb82912c039d5fdfb9dfda3f28a48e664f2dc1511f3edcc688dff90755ee69e2ed7ecf26973914c855de3dabeef492c1d8c073ea0057cba0f2fb435df3ea97a000e3389383efde12ddbf126f76a4421f0cc49419844a2d3d7875e7c315ae18b8ea5c2a5406723d7a23500713d3cdc9dd63d5eb8107f5719e40045a29eb57814715a5f0fd0bd683bb2d980eeee67bb363f705c38852086d4588ba8b657575d1420f52975b128ba7b406cdeb5d6ef1e997f76c3f71c34516e3f0dd559767ba37d091aa9af7dd29c9b9577d0b49a8c999ae3eb726ad2305a9f7c5850ebfa5ef4778e1bdcb4903a9b61139f900144b080df3474afe3da646f8915422a2af8c50b218ec32952377bc73de50e07e904d242fee491f4e005abe19579bbe9a9c90d8c7b55c488014e3fa197c9e72c165d087537c8cfeb2d675843e532d5baa8162aaa3bc8818e54eff4aef1cb54c51abaf697c1e7f03880e8aab0075b121928ad3e593bfdd9997461f0898d9d7f23e6d890cf0a1f985ef40ce77bdd395cd91e67feab349bde5a943a7b707f8ee9a72911789d80abf5ab3aacfa618c6bf6fb240156e3df4d494ef7fa4e1dc6d55523359aeee1a70a5bcc1aefcd19f6c26d4c081e1396188c439c685b94e101173ef65d1803122cac071e431150a1d93f658ece2168610acea09cb125a3ef3fbfc6194a9ffeed57839b92305c77d585216c956e6b296052cab317b49f3dcb9ee5aba7af707e8556e3055f8cb36e70abc446cf28029c352baadcf1fa112600146c21c68927c1c5dc4b3b9f406974bc8eec88b413938fb67dd2ec6e80702b57c2eefbd9442ce98e80f13672d9e2e5f8ec6233cc86c46373de2eca42deb2b673fe109eb1f16d8e14b6e4e5a0029ea7a5e4a0bf6ed917a0e157ee765efb1846b447f8fcf81304aa1fc236bdac20a3a3fd939da8febae0aa4e3f27cc7d58b0265c27bf74749022ae5f6ac5c3c3fef8689c66c54bf54293e794ba382b5c3c9389b35264308163261e44328dc19a8bcde13d9088a6e722f9349a3a1ec362a8e4fa094e2ab9d5c0ad4ac2eda949fdeef072356bbf2a9a5e2627ee81f766896092a59406ff8504ac6baf72662cb9604222</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    
    <category term="作为日记加密" scheme="https://jgxnb.cn/tags/%E4%BD%9C%E4%B8%BA%E6%97%A5%E8%AE%B0%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
</feed>
